%PDF-1.7

1 0 obj
  << /Length 2 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.152941 exch 0.000000 exch 0.478431 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.633484 mul 0.152941 add exch dup 0.000000 sub 2.805430 mul 0.000000 add exch dup 0.000000 sub 1.297134 mul 0.478431 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.588235 mul 0.070588 add exch dup 0.130000 sub 2.549020 mul 0.364706 add exch dup 0.130000 sub 1.176470 mul 0.647059 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 7.058831 mul 0.011765 add exch dup 0.230000 sub -0.392157 mul 0.619608 add exch dup 0.230000 sub 2.745100 mul 0.764706 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274507 mul 0.082353 add exch dup 0.240000 sub -0.392157 mul 0.615686 add exch dup 0.240000 sub 1.960783 mul 0.792157 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.145098 add exch dup 0.250000 sub 0.000000 mul 0.611765 add exch dup 0.250000 sub 0.784314 mul 0.811765 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.307189 mul 0.164706 add exch dup 0.260000 sub -0.130719 mul 0.611765 add exch dup 0.260000 sub 0.392157 mul 0.819608 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 2.549018 mul 0.203922 add exch dup 0.290000 sub -0.098039 mul 0.607843 add exch dup 0.290000 sub 0.882352 mul 0.831373 add exch } if dup 0.330000 gt { exch pop exch pop exch pop dup 0.330000 sub 2.745099 mul 0.305882 add exch dup 0.330000 sub -0.130719 mul 0.603922 add exch dup 0.330000 sub 0.980393 mul 0.866667 add exch } if dup 0.390000 gt { exch pop exch pop exch pop dup 0.390000 sub 3.529412 mul 0.470588 add exch dup 0.390000 sub -0.196078 mul 0.596078 add exch dup 0.390000 sub 1.241830 mul 0.925490 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.740740 mul 0.682353 add exch dup 0.450000 sub -1.481481 mul 0.584314 add exch dup 0.450000 sub 0.000000 mul 1.000000 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.588235 mul 0.749020 add exch dup 0.540000 sub -1.225490 mul 0.450980 add exch dup 0.540000 sub -0.049020 mul 1.000000 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub 0.392157 mul 0.796078 add exch dup 0.620000 sub -0.705882 mul 0.352941 add exch dup 0.620000 sub 0.000000 mul 0.996078 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -3.529412 mul 0.815686 add exch dup 0.670000 sub -1.895425 mul 0.317647 add exch dup 0.670000 sub -1.568627 mul 0.996078 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -3.627455 mul 0.392157 add exch dup 0.790000 sub -2.058825 mul 0.090196 add exch dup 0.790000 sub -1.568629 mul 0.807843 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.461361 mul 0.247059 add exch dup 0.830000 sub -0.046136 mul 0.007843 add exch dup 0.830000 sub -1.914648 mul 0.745098 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.419608 exch } if pop }
endstream
endobj

2 0 obj
  3073
endobj

3 0 obj
  << /Length 4 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.149020 exch 0.000000 exch 0.478431 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.392157 mul 0.149020 add exch dup 0.000000 sub 3.137255 mul 0.000000 add exch dup 0.000000 sub 1.470589 mul 0.478431 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub -0.348584 mul 0.133333 add exch dup 0.040000 sub 2.962963 mul 0.125490 add exch dup 0.040000 sub 1.437909 mul 0.537255 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.588235 mul 0.101961 add exch dup 0.130000 sub 2.431372 mul 0.392157 add exch dup 0.130000 sub 1.098039 mul 0.666667 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 6.274516 mul 0.043137 add exch dup 0.230000 sub -0.392157 mul 0.635294 add exch dup 0.230000 sub 2.352943 mul 0.776471 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274507 mul 0.105882 add exch dup 0.240000 sub -0.392157 mul 0.631373 add exch dup 0.240000 sub 1.960783 mul 0.800000 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.168627 add exch dup 0.250000 sub 0.000000 mul 0.627451 add exch dup 0.250000 sub 0.784314 mul 0.819608 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.307189 mul 0.188235 add exch dup 0.260000 sub -0.130719 mul 0.627451 add exch dup 0.260000 sub 0.392157 mul 0.827451 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 2.039215 mul 0.227451 add exch dup 0.290000 sub -0.078431 mul 0.623529 add exch dup 0.290000 sub 0.705882 mul 0.839216 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub 2.745098 mul 0.329412 add exch dup 0.340000 sub -0.130719 mul 0.619608 add exch dup 0.340000 sub 0.915033 mul 0.874510 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub 3.607845 mul 0.494118 add exch dup 0.400000 sub -0.235294 mul 0.611765 add exch dup 0.400000 sub 1.254902 mul 0.929412 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.566449 mul 0.674510 add exch dup 0.450000 sub -1.394335 mul 0.600000 add exch dup 0.450000 sub -0.043573 mul 0.992157 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.539216 mul 0.725490 add exch dup 0.540000 sub -1.225490 mul 0.474510 add exch dup 0.540000 sub -0.098039 mul 0.988235 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub 0.313725 mul 0.768627 add exch dup 0.620000 sub -0.705882 mul 0.376471 add exch dup 0.620000 sub 0.000000 mul 0.980392 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -3.431372 mul 0.784314 add exch dup 0.670000 sub -1.830065 mul 0.341176 add exch dup 0.670000 sub -1.535948 mul 0.980392 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -3.431376 mul 0.372549 add exch dup 0.790000 sub -2.058825 mul 0.121569 add exch dup 0.790000 sub -1.470590 mul 0.796078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.392157 mul 0.235294 add exch dup 0.830000 sub -0.230680 mul 0.039216 add exch dup 0.830000 sub -1.868512 mul 0.737255 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.419608 exch } if pop }
endstream
endobj

4 0 obj
  3269
endobj

5 0 obj
  << /Length 6 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.149020 exch 0.000000 exch 0.478431 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.512821 mul 0.149020 add exch dup 0.000000 sub 2.895928 mul 0.000000 add exch dup 0.000000 sub 1.357466 mul 0.478431 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.588235 mul 0.082353 add exch dup 0.130000 sub 2.470588 mul 0.376471 add exch dup 0.130000 sub 1.137255 mul 0.654902 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 6.666673 mul 0.023529 add exch dup 0.230000 sub -0.392157 mul 0.623529 add exch dup 0.230000 sub 2.352943 mul 0.768627 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274507 mul 0.090196 add exch dup 0.240000 sub -0.392157 mul 0.619608 add exch dup 0.240000 sub 2.352940 mul 0.792157 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.152941 add exch dup 0.250000 sub 0.000000 mul 0.615686 add exch dup 0.250000 sub 0.784314 mul 0.815686 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.307189 mul 0.172549 add exch dup 0.260000 sub -0.130719 mul 0.615686 add exch dup 0.260000 sub 0.392157 mul 0.823529 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 2.549018 mul 0.211765 add exch dup 0.290000 sub -0.098039 mul 0.611765 add exch dup 0.290000 sub 0.882352 mul 0.835294 add exch } if dup 0.330000 gt { exch pop exch pop exch pop dup 0.330000 sub 2.745099 mul 0.313726 add exch dup 0.330000 sub -0.130719 mul 0.607843 add exch dup 0.330000 sub 0.980393 mul 0.870588 add exch } if dup 0.390000 gt { exch pop exch pop exch pop dup 0.390000 sub 3.333333 mul 0.478431 add exch dup 0.390000 sub -0.196078 mul 0.600000 add exch dup 0.390000 sub 1.111111 mul 0.929412 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.697167 mul 0.678431 add exch dup 0.450000 sub -1.437908 mul 0.588235 add exch dup 0.450000 sub 0.000000 mul 0.996078 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.588235 mul 0.741176 add exch dup 0.540000 sub -1.225490 mul 0.458824 add exch dup 0.540000 sub -0.049020 mul 0.996078 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub 0.392157 mul 0.788235 add exch dup 0.620000 sub -0.705882 mul 0.360784 add exch dup 0.620000 sub 0.000000 mul 0.992157 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -3.496732 mul 0.807843 add exch dup 0.670000 sub -1.895425 mul 0.325490 add exch dup 0.670000 sub -1.568627 mul 0.992157 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -3.627455 mul 0.388235 add exch dup 0.790000 sub -1.960786 mul 0.098039 add exch dup 0.790000 sub -1.568629 mul 0.803922 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.438293 mul 0.243137 add exch dup 0.830000 sub -0.115340 mul 0.019608 add exch dup 0.830000 sub -1.891580 mul 0.741176 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.419608 exch } if pop }
endstream
endobj

6 0 obj
  3073
endobj

7 0 obj
  << /Length 8 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.141176 exch 0.000000 exch 0.474510 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.196078 mul 0.141176 add exch dup 0.000000 sub 3.529412 mul 0.000000 add exch dup 0.000000 sub 1.764707 mul 0.474510 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 0.147059 mul 0.145098 add exch dup 0.020000 sub 3.382353 mul 0.070588 add exch dup 0.020000 sub 1.715686 mul 0.509804 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 0.130719 mul 0.156863 add exch dup 0.100000 sub 3.529412 mul 0.341176 add exch dup 0.100000 sub 1.830066 mul 0.647059 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.509804 mul 0.160784 add exch dup 0.130000 sub 2.156863 mul 0.447059 add exch dup 0.130000 sub 0.980392 mul 0.701961 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 4.705887 mul 0.109804 add exch dup 0.230000 sub -0.392157 mul 0.662745 add exch dup 0.230000 sub 1.960786 mul 0.800000 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274506 mul 0.156863 add exch dup 0.240000 sub -0.392157 mul 0.658824 add exch dup 0.240000 sub 1.960783 mul 0.819608 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.219608 add exch dup 0.250000 sub 0.000000 mul 0.654902 add exch dup 0.250000 sub 0.784314 mul 0.839216 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.307190 mul 0.239216 add exch dup 0.260000 sub -0.130719 mul 0.654902 add exch dup 0.260000 sub 0.392157 mul 0.847059 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 1.699346 mul 0.278431 add exch dup 0.290000 sub -0.065359 mul 0.650980 add exch dup 0.290000 sub 0.522876 mul 0.858824 add exch } if dup 0.350000 gt { exch pop exch pop exch pop dup 0.350000 sub 2.745098 mul 0.380392 add exch dup 0.350000 sub -0.196078 mul 0.647059 add exch dup 0.350000 sub 0.915033 mul 0.890196 add exch } if dup 0.410000 gt { exch pop exch pop exch pop dup 0.410000 sub 2.745098 mul 0.545098 add exch dup 0.410000 sub -0.196078 mul 0.635294 add exch dup 0.410000 sub 0.882353 mul 0.945098 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.392157 mul 0.654902 add exch dup 0.450000 sub -1.323530 mul 0.627451 add exch dup 0.450000 sub -0.147059 mul 0.980392 add exch } if dup 0.530000 gt { exch pop exch pop exch pop dup 0.530000 sub 0.305011 mul 0.686275 add exch dup 0.530000 sub -1.089324 mul 0.521569 add exch dup 0.530000 sub -0.130719 mul 0.968627 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub 0.235294 mul 0.713726 add exch dup 0.620000 sub -0.705882 mul 0.423529 add exch dup 0.620000 sub -0.078431 mul 0.956863 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -3.267974 mul 0.725490 add exch dup 0.670000 sub -1.699346 mul 0.388235 add exch dup 0.670000 sub -1.503268 mul 0.952941 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -2.941180 mul 0.333333 add exch dup 0.790000 sub -2.254904 mul 0.184314 add exch dup 0.790000 sub -1.372550 mul 0.772549 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.276817 mul 0.215686 add exch dup 0.830000 sub -0.553633 mul 0.094118 add exch dup 0.830000 sub -1.753172 mul 0.717647 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.419608 exch } if pop }
endstream
endobj

8 0 obj
  3462
endobj

9 0 obj
  << /Length 10 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.141176 exch 0.000000 exch 0.474510 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.261438 mul 0.141176 add exch dup 0.000000 sub 3.660131 mul 0.000000 add exch dup 0.000000 sub 1.830066 mul 0.474510 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 0.224090 mul 0.149020 add exch dup 0.030000 sub 3.529412 mul 0.109804 add exch dup 0.030000 sub 1.792717 mul 0.529412 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 0.130719 mul 0.164706 add exch dup 0.100000 sub 3.267974 mul 0.356863 add exch dup 0.100000 sub 1.699347 mul 0.654902 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.509804 mul 0.168627 add exch dup 0.130000 sub 2.117647 mul 0.454902 add exch dup 0.130000 sub 0.980392 mul 0.705882 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 4.705887 mul 0.117647 add exch dup 0.230000 sub 0.000000 mul 0.666667 add exch dup 0.230000 sub 1.568629 mul 0.803922 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274506 mul 0.164706 add exch dup 0.240000 sub -0.392157 mul 0.666667 add exch dup 0.240000 sub 1.960783 mul 0.819608 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.227451 add exch dup 0.250000 sub 0.000000 mul 0.662745 add exch dup 0.250000 sub 0.784314 mul 0.839216 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.307190 mul 0.247059 add exch dup 0.260000 sub -0.130719 mul 0.662745 add exch dup 0.260000 sub 0.392157 mul 0.847059 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 1.699346 mul 0.286275 add exch dup 0.290000 sub -0.130719 mul 0.658824 add exch dup 0.290000 sub 0.588235 mul 0.858824 add exch } if dup 0.350000 gt { exch pop exch pop exch pop dup 0.350000 sub 2.352942 mul 0.388235 add exch dup 0.350000 sub -0.168067 mul 0.650980 add exch dup 0.350000 sub 0.784314 mul 0.894118 add exch } if dup 0.420000 gt { exch pop exch pop exch pop dup 0.420000 sub 3.267973 mul 0.552941 add exch dup 0.420000 sub -0.261438 mul 0.639216 add exch dup 0.420000 sub 1.045752 mul 0.949020 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.343137 mul 0.650980 add exch dup 0.450000 sub -1.323530 mul 0.631373 add exch dup 0.450000 sub -0.196078 mul 0.980392 add exch } if dup 0.530000 gt { exch pop exch pop exch pop dup 0.530000 sub 0.305011 mul 0.678431 add exch dup 0.530000 sub -1.089324 mul 0.525490 add exch dup 0.530000 sub -0.174292 mul 0.964706 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub 0.156863 mul 0.705882 add exch dup 0.620000 sub -0.705882 mul 0.427451 add exch dup 0.620000 sub -0.078431 mul 0.949020 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -3.202614 mul 0.713726 add exch dup 0.670000 sub -1.633987 mul 0.392157 add exch dup 0.670000 sub -1.470588 mul 0.945098 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -2.941180 mul 0.329412 add exch dup 0.790000 sub -2.254904 mul 0.196078 add exch dup 0.790000 sub -1.372550 mul 0.768627 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.253749 mul 0.211765 add exch dup 0.830000 sub -0.622837 mul 0.105882 add exch dup 0.830000 sub -1.707036 mul 0.713726 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

10 0 obj
  3461
endobj

11 0 obj
  << /Length 12 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.141176 exch 0.000000 exch 0.474510 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.294118 mul 0.141176 add exch dup 0.000000 sub 3.823530 mul 0.000000 add exch dup 0.000000 sub 1.960785 mul 0.474510 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 0.326797 mul 0.152941 add exch dup 0.040000 sub 3.725490 mul 0.152941 add exch dup 0.040000 sub 1.895425 mul 0.552941 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 0.261438 mul 0.172549 add exch dup 0.100000 sub 3.006536 mul 0.376471 add exch dup 0.100000 sub 1.568628 mul 0.666667 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.509804 mul 0.180392 add exch dup 0.130000 sub 2.078431 mul 0.466667 add exch dup 0.130000 sub 0.941176 mul 0.713726 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 4.313729 mul 0.129412 add exch dup 0.230000 sub -0.392157 mul 0.674510 add exch dup 0.230000 sub 1.568629 mul 0.807843 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274506 mul 0.172549 add exch dup 0.240000 sub -0.392157 mul 0.670588 add exch dup 0.240000 sub 1.960783 mul 0.823529 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960788 mul 0.235294 add exch dup 0.250000 sub 0.000000 mul 0.666667 add exch dup 0.250000 sub 0.784314 mul 0.843137 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.307189 mul 0.254902 add exch dup 0.260000 sub -0.130719 mul 0.666667 add exch dup 0.260000 sub 0.392157 mul 0.850980 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 1.699346 mul 0.294118 add exch dup 0.290000 sub -0.130719 mul 0.662745 add exch dup 0.290000 sub 0.522876 mul 0.862745 add exch } if dup 0.350000 gt { exch pop exch pop exch pop dup 0.350000 sub 2.352942 mul 0.396078 add exch dup 0.350000 sub -0.168067 mul 0.654902 add exch dup 0.350000 sub 0.784314 mul 0.894118 add exch } if dup 0.420000 gt { exch pop exch pop exch pop dup 0.420000 sub 2.875817 mul 0.560784 add exch dup 0.420000 sub -0.261438 mul 0.643137 add exch dup 0.420000 sub 0.915033 mul 0.949020 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.294118 mul 0.647059 add exch dup 0.450000 sub -1.274510 mul 0.635294 add exch dup 0.450000 sub -0.196078 mul 0.976471 add exch } if dup 0.530000 gt { exch pop exch pop exch pop dup 0.530000 sub 0.294117 mul 0.670588 add exch dup 0.530000 sub -1.225490 mul 0.533333 add exch dup 0.530000 sub -0.196078 mul 0.960784 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub 0.130719 mul 0.694118 add exch dup 0.610000 sub -0.588235 mul 0.435294 add exch dup 0.610000 sub -0.065359 mul 0.945098 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -3.169935 mul 0.701961 add exch dup 0.670000 sub -1.633987 mul 0.400000 add exch dup 0.670000 sub -1.470588 mul 0.941176 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -2.843140 mul 0.321569 add exch dup 0.790000 sub -2.254904 mul 0.203922 add exch dup 0.790000 sub -1.372550 mul 0.764706 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.230680 mul 0.207843 add exch dup 0.830000 sub -0.668973 mul 0.113725 add exch dup 0.830000 sub -1.683968 mul 0.709804 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

12 0 obj
  3462
endobj

13 0 obj
  << /Length 14 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.141176 exch 0.000000 exch 0.474510 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.392157 mul 0.141176 add exch dup 0.000000 sub 3.686275 mul 0.000000 add exch dup 0.000000 sub 1.882353 mul 0.474510 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 0.392157 mul 0.160784 add exch dup 0.050000 sub 4.156863 mul 0.184314 add exch dup 0.050000 sub 2.117647 mul 0.568627 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 0.261438 mul 0.180392 add exch dup 0.100000 sub 2.745098 mul 0.392157 add exch dup 0.100000 sub 1.437909 mul 0.674510 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.470588 mul 0.188235 add exch dup 0.130000 sub 2.039216 mul 0.474510 add exch dup 0.130000 sub 0.941176 mul 0.717647 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.921572 mul 0.141176 add exch dup 0.230000 sub -0.392157 mul 0.678431 add exch dup 0.230000 sub 1.568629 mul 0.811765 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274506 mul 0.180392 add exch dup 0.240000 sub -0.392157 mul 0.674510 add exch dup 0.240000 sub 1.960783 mul 0.827451 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960788 mul 0.243137 add exch dup 0.250000 sub 0.000000 mul 0.670588 add exch dup 0.250000 sub 0.784314 mul 0.847059 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.262745 add exch dup 0.260000 sub -0.098039 mul 0.670588 add exch dup 0.260000 sub 0.294117 mul 0.854902 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 2.039216 mul 0.301961 add exch dup 0.300000 sub -0.156863 mul 0.666667 add exch dup 0.300000 sub 0.627451 mul 0.866667 add exch } if dup 0.350000 gt { exch pop exch pop exch pop dup 0.350000 sub 2.352942 mul 0.403922 add exch dup 0.350000 sub -0.168067 mul 0.658824 add exch dup 0.350000 sub 0.784314 mul 0.898039 add exch } if dup 0.420000 gt { exch pop exch pop exch pop dup 0.420000 sub 2.483660 mul 0.568627 add exch dup 0.420000 sub -0.261438 mul 0.647059 add exch dup 0.420000 sub 0.784314 mul 0.952941 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.280112 mul 0.643137 add exch dup 0.450000 sub -1.400560 mul 0.639216 add exch dup 0.450000 sub -0.224090 mul 0.976471 add exch } if dup 0.520000 gt { exch pop exch pop exch pop dup 0.520000 sub 0.261438 mul 0.662745 add exch dup 0.520000 sub -1.089324 mul 0.541176 add exch dup 0.520000 sub -0.174292 mul 0.960784 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub 0.130719 mul 0.686275 add exch dup 0.610000 sub -0.588235 mul 0.443137 add exch dup 0.610000 sub -0.130719 mul 0.945098 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -3.169935 mul 0.694118 add exch dup 0.670000 sub -1.601307 mul 0.407843 add exch dup 0.670000 sub -1.470588 mul 0.937255 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -2.745101 mul 0.313726 add exch dup 0.790000 sub -2.254904 mul 0.215686 add exch dup 0.790000 sub -1.372550 mul 0.760784 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.207612 mul 0.203922 add exch dup 0.830000 sub -0.738178 mul 0.125490 add exch dup 0.830000 sub -1.660900 mul 0.705882 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

14 0 obj
  3462
endobj

15 0 obj
  << /Length 16 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.137255 exch 0.000000 exch 0.470588 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.718954 mul 0.137255 add exch dup 0.000000 sub 4.379085 mul 0.000000 add exch dup 0.000000 sub 2.352942 mul 0.470588 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.549020 mul 0.180392 add exch dup 0.060000 sub 3.450980 mul 0.262745 add exch dup 0.060000 sub 1.803921 mul 0.611765 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 0.588235 mul 0.207843 add exch dup 0.110000 sub 3.333335 mul 0.435294 add exch dup 0.110000 sub 1.764706 mul 0.701961 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.470588 mul 0.219608 add exch dup 0.130000 sub 1.882353 mul 0.501961 add exch dup 0.130000 sub 0.862745 mul 0.737255 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.529415 mul 0.172549 add exch dup 0.230000 sub 0.000000 mul 0.690196 add exch dup 0.230000 sub 1.176472 mul 0.823529 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274508 mul 0.207843 add exch dup 0.240000 sub -0.392157 mul 0.690196 add exch dup 0.240000 sub 1.960783 mul 0.835294 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.270588 add exch dup 0.250000 sub 0.000000 mul 0.686275 add exch dup 0.250000 sub 0.784314 mul 0.854902 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.290196 add exch dup 0.260000 sub -0.098039 mul 0.686275 add exch dup 0.260000 sub 0.294117 mul 0.862745 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.699346 mul 0.329412 add exch dup 0.300000 sub -0.130719 mul 0.682353 add exch dup 0.300000 sub 0.522876 mul 0.874510 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub 2.058824 mul 0.431373 add exch dup 0.360000 sub -0.196078 mul 0.674510 add exch dup 0.360000 sub 0.686275 mul 0.905882 add exch } if dup 0.440000 gt { exch pop exch pop exch pop dup 0.440000 sub 3.921572 mul 0.596078 add exch dup 0.440000 sub -0.392157 mul 0.658824 add exch dup 0.440000 sub 1.176472 mul 0.960784 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.168067 mul 0.635294 add exch dup 0.450000 sub -1.288515 mul 0.654902 add exch dup 0.450000 sub -0.280112 mul 0.972549 add exch } if dup 0.520000 gt { exch pop exch pop exch pop dup 0.520000 sub 0.130719 mul 0.647059 add exch dup 0.520000 sub -1.089324 mul 0.564706 add exch dup 0.520000 sub -0.261438 mul 0.952941 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub 0.065359 mul 0.658824 add exch dup 0.610000 sub -0.588235 mul 0.466667 add exch dup 0.610000 sub -0.130719 mul 0.929412 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -3.071895 mul 0.662745 add exch dup 0.670000 sub -1.535948 mul 0.431373 add exch dup 0.670000 sub -1.437908 mul 0.921569 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -2.549022 mul 0.294118 add exch dup 0.790000 sub -2.352943 mul 0.247059 add exch dup 0.790000 sub -1.274511 mul 0.749020 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.138408 mul 0.192157 add exch dup 0.830000 sub -0.899654 mul 0.152941 add exch dup 0.830000 sub -1.614763 mul 0.698039 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

16 0 obj
  3461
endobj

17 0 obj
  << /Length 18 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.133333 exch 0.000000 exch 0.470588 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.176471 mul 0.133333 add exch dup 0.000000 sub 6.274510 mul 0.000000 add exch dup 0.000000 sub 3.137258 mul 0.470588 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 0.849673 mul 0.145098 add exch dup 0.010000 sub 4.052288 mul 0.062745 add exch dup 0.010000 sub 2.222222 mul 0.501961 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 0.784314 mul 0.196078 add exch dup 0.070000 sub 3.823529 mul 0.305882 add exch dup 0.070000 sub 2.058823 mul 0.635294 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 0.588235 mul 0.227451 add exch dup 0.110000 sub 2.941178 mul 0.458824 add exch dup 0.110000 sub 1.568628 mul 0.717647 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.431372 mul 0.239216 add exch dup 0.130000 sub 1.843137 mul 0.517647 add exch dup 0.130000 sub 0.823529 mul 0.749020 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 2.745100 mul 0.196078 add exch dup 0.230000 sub -0.392157 mul 0.701961 add exch dup 0.230000 sub 1.176472 mul 0.831373 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274508 mul 0.223529 add exch dup 0.240000 sub -0.392157 mul 0.698039 add exch dup 0.240000 sub 1.960783 mul 0.843137 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.286275 add exch dup 0.250000 sub 0.000000 mul 0.694118 add exch dup 0.250000 sub 0.784314 mul 0.862745 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.305882 add exch dup 0.260000 sub -0.098039 mul 0.694118 add exch dup 0.260000 sub 0.294117 mul 0.870588 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.699346 mul 0.345098 add exch dup 0.300000 sub -0.130719 mul 0.690196 add exch dup 0.300000 sub 0.522876 mul 0.882353 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub 2.004358 mul 0.447059 add exch dup 0.360000 sub -0.217865 mul 0.682353 add exch dup 0.360000 sub 0.610022 mul 0.913725 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.056022 mul 0.627451 add exch dup 0.450000 sub -1.176471 mul 0.662745 add exch dup 0.450000 sub -0.280112 mul 0.968627 add exch } if dup 0.520000 gt { exch pop exch pop exch pop dup 0.520000 sub 0.043573 mul 0.631373 add exch dup 0.520000 sub -1.089324 mul 0.580392 add exch dup 0.520000 sub -0.305011 mul 0.949020 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub 0.065359 mul 0.635294 add exch dup 0.610000 sub -0.588235 mul 0.482353 add exch dup 0.610000 sub -0.130719 mul 0.921569 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.973856 mul 0.639216 add exch dup 0.670000 sub -1.503268 mul 0.447059 add exch dup 0.670000 sub -1.437908 mul 0.913725 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -2.450983 mul 0.282353 add exch dup 0.790000 sub -2.352944 mul 0.266667 add exch dup 0.790000 sub -1.274511 mul 0.741176 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.092272 mul 0.184314 add exch dup 0.830000 sub -1.014994 mul 0.172549 add exch dup 0.830000 sub -1.568627 mul 0.690196 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

18 0 obj
  3461
endobj

19 0 obj
  << /Length 20 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.129412 exch 0.000000 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.176471 mul 0.129412 add exch dup 0.000000 sub 4.411765 mul 0.000000 add exch dup 0.000000 sub 2.450981 mul 0.466667 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 1.372549 mul 0.176471 add exch dup 0.040000 sub 5.098040 mul 0.176471 add exch dup 0.040000 sub 2.843137 mul 0.564706 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 1.176471 mul 0.231373 add exch dup 0.080000 sub 4.183007 mul 0.380392 add exch dup 0.080000 sub 2.222222 mul 0.678431 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 0.588235 mul 0.266667 add exch dup 0.110000 sub 2.352942 mul 0.505882 add exch dup 0.110000 sub 1.372549 mul 0.745098 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.235294 mul 0.278431 add exch dup 0.130000 sub 1.686274 mul 0.552941 add exch dup 0.130000 sub 0.823529 mul 0.772549 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.137255 mul 0.254902 add exch dup 0.230000 sub -0.392157 mul 0.721569 add exch dup 0.230000 sub 0.980392 mul 0.854902 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.317647 add exch dup 0.250000 sub 0.000000 mul 0.713726 add exch dup 0.250000 sub 0.784314 mul 0.874510 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.337255 add exch dup 0.260000 sub -0.098039 mul 0.713726 add exch dup 0.260000 sub 0.294117 mul 0.882353 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.274510 mul 0.376471 add exch dup 0.300000 sub -0.147059 mul 0.709804 add exch dup 0.300000 sub 0.343137 mul 0.894118 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub 1.960785 mul 0.478431 add exch dup 0.380000 sub -0.224090 mul 0.698039 add exch dup 0.380000 sub 0.560224 mul 0.921569 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.065359 mul 0.615686 add exch dup 0.450000 sub -1.176471 mul 0.682353 add exch dup 0.450000 sub -0.392157 mul 0.960784 add exch } if dup 0.510000 gt { exch pop exch pop exch pop dup 0.510000 sub -0.078431 mul 0.611765 add exch dup 0.510000 sub -0.980392 mul 0.611765 add exch dup 0.510000 sub -0.313725 mul 0.937255 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -0.065359 mul 0.603922 add exch dup 0.610000 sub -0.588236 mul 0.513726 add exch dup 0.610000 sub -0.196078 mul 0.905882 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.875817 mul 0.600000 add exch dup 0.670000 sub -1.405229 mul 0.478431 add exch dup 0.670000 sub -1.405229 mul 0.894118 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -2.058826 mul 0.254902 add exch dup 0.790000 sub -2.549022 mul 0.309804 add exch dup 0.790000 sub -1.176472 mul 0.725490 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.023068 mul 0.172549 add exch dup 0.830000 sub -1.222607 mul 0.207843 add exch dup 0.830000 sub -1.499423 mul 0.678431 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

20 0 obj
  3269
endobj

21 0 obj
  << /Length 22 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.149020 exch 0.000000 exch 0.474510 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.326797 mul 0.149020 add exch dup 0.000000 sub 3.137255 mul 0.000000 add exch dup 0.000000 sub 1.503268 mul 0.474510 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub -0.280112 mul 0.129412 add exch dup 0.060000 sub 3.025210 mul 0.188235 add exch dup 0.060000 sub 1.512605 mul 0.564706 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.549020 mul 0.109804 add exch dup 0.130000 sub 2.392157 mul 0.400000 add exch dup 0.130000 sub 1.098039 mul 0.670588 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 5.882359 mul 0.054902 add exch dup 0.230000 sub -0.392157 mul 0.639216 add exch dup 0.230000 sub 2.352943 mul 0.780392 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274507 mul 0.113725 add exch dup 0.240000 sub -0.392157 mul 0.635294 add exch dup 0.240000 sub 1.960783 mul 0.803922 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.176471 add exch dup 0.250000 sub 0.000000 mul 0.631373 add exch dup 0.250000 sub 0.784314 mul 0.823529 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.307189 mul 0.196078 add exch dup 0.260000 sub -0.130719 mul 0.631373 add exch dup 0.260000 sub 0.392157 mul 0.831373 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 2.039215 mul 0.235294 add exch dup 0.290000 sub -0.078431 mul 0.627451 add exch dup 0.290000 sub 0.705882 mul 0.843137 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub 2.745098 mul 0.337255 add exch dup 0.340000 sub -0.196078 mul 0.623529 add exch dup 0.340000 sub 0.915033 mul 0.878431 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub 3.372550 mul 0.501961 add exch dup 0.400000 sub -0.156863 mul 0.611765 add exch dup 0.400000 sub 1.176471 mul 0.933333 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.637255 mul 0.670588 add exch dup 0.450000 sub -1.519608 mul 0.603922 add exch dup 0.450000 sub -0.098039 mul 0.992157 add exch } if dup 0.530000 gt { exch pop exch pop exch pop dup 0.530000 sub 0.435730 mul 0.721569 add exch dup 0.530000 sub -1.089324 mul 0.482353 add exch dup 0.530000 sub -0.043573 mul 0.984314 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub 0.313725 mul 0.760784 add exch dup 0.620000 sub -0.705882 mul 0.384314 add exch dup 0.620000 sub -0.078431 mul 0.980392 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -3.398693 mul 0.776471 add exch dup 0.670000 sub -1.830065 mul 0.349020 add exch dup 0.670000 sub -1.535948 mul 0.976471 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -3.431376 mul 0.368627 add exch dup 0.790000 sub -2.058826 mul 0.129412 add exch dup 0.790000 sub -1.470590 mul 0.792157 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.369089 mul 0.231373 add exch dup 0.830000 sub -0.276817 mul 0.047059 add exch dup 0.830000 sub -1.845444 mul 0.733333 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.419608 exch } if pop }
endstream
endobj

22 0 obj
  3270
endobj

23 0 obj
  << /Length 24 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.125490 exch 0.000000 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.568627 mul 0.125490 add exch dup 0.000000 sub 4.941176 mul 0.000000 add exch dup 0.000000 sub 2.745098 mul 0.466667 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 1.372549 mul 0.203922 add exch dup 0.050000 sub 4.509804 mul 0.247059 add exch dup 0.050000 sub 2.450980 mul 0.603922 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.176471 mul 0.258824 add exch dup 0.090000 sub 3.660132 mul 0.427451 add exch dup 0.090000 sub 2.091504 mul 0.701961 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.294118 add exch dup 0.120000 sub 4.313726 mul 0.537255 add exch dup 0.120000 sub 2.352942 mul 0.764706 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.274510 mul 0.305882 add exch dup 0.130000 sub 1.529412 mul 0.580392 add exch dup 0.130000 sub 0.745098 mul 0.788235 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.137255 mul 0.278431 add exch dup 0.230000 sub -0.196078 mul 0.733333 add exch dup 0.230000 sub 0.980392 mul 0.862745 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.341176 add exch dup 0.250000 sub 0.000000 mul 0.729412 add exch dup 0.250000 sub 0.784314 mul 0.882353 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.784313 mul 0.360784 add exch dup 0.260000 sub -0.078431 mul 0.729412 add exch dup 0.260000 sub 0.235294 mul 0.890196 add exch } if dup 0.310000 gt { exch pop exch pop exch pop dup 0.310000 sub 1.274510 mul 0.400000 add exch dup 0.310000 sub -0.196078 mul 0.725490 add exch dup 0.310000 sub 0.343137 mul 0.901961 add exch } if dup 0.390000 gt { exch pop exch pop exch pop dup 0.390000 sub 1.764706 mul 0.501961 add exch dup 0.390000 sub -0.261438 mul 0.709804 add exch dup 0.390000 sub 0.457516 mul 0.929412 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.235294 mul 0.607843 add exch dup 0.450000 sub -1.176470 mul 0.694118 add exch dup 0.450000 sub -0.470588 mul 0.956863 add exch } if dup 0.500000 gt { exch pop exch pop exch pop dup 0.500000 sub -0.178253 mul 0.596078 add exch dup 0.500000 sub -0.891265 mul 0.635294 add exch dup 0.500000 sub -0.356506 mul 0.933333 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -0.130719 mul 0.576471 add exch dup 0.610000 sub -0.588235 mul 0.537255 add exch dup 0.610000 sub -0.261438 mul 0.894118 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.777778 mul 0.568627 add exch dup 0.670000 sub -1.339869 mul 0.501961 add exch dup 0.670000 sub -1.372549 mul 0.878431 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.862747 mul 0.235294 add exch dup 0.790000 sub -2.549022 mul 0.341176 add exch dup 0.790000 sub -1.176472 mul 0.713726 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.046136 mul 0.160784 add exch dup 0.830000 sub -1.407151 mul 0.239216 add exch dup 0.830000 sub -1.430219 mul 0.666667 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

24 0 obj
  3268
endobj

25 0 obj
  << /Length 26 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.223529 exch 0.000000 exch 0.498039 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.627451 mul 0.223529 add exch dup 0.000000 sub 4.313725 mul 0.000000 add exch dup 0.000000 sub 3.529412 mul 0.498039 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 3.137255 mul 0.368627 add exch dup 0.040000 sub 3.921569 mul 0.172549 add exch dup 0.040000 sub 3.235294 mul 0.639216 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.745099 mul 0.494118 add exch dup 0.080000 sub 3.137254 mul 0.329412 add exch dup 0.080000 sub 2.614379 mul 0.768627 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 1.372549 mul 0.576471 add exch dup 0.110000 sub 1.764706 mul 0.423529 add exch dup 0.110000 sub 1.372549 mul 0.847059 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.874811 mul 0.603922 add exch dup 0.130000 sub 0.331825 mul 0.458824 add exch dup 0.130000 sub 0.874811 mul 0.874510 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.588235 mul 0.717647 add exch dup 0.260000 sub 0.196078 mul 0.501961 add exch dup 0.260000 sub 0.588235 mul 0.988235 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.729412 add exch dup 0.280000 sub -0.130719 mul 0.505882 add exch dup 0.280000 sub -0.305011 mul 1.000000 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.382869 mul 0.627451 add exch dup 0.370000 sub -0.165119 mul 0.494118 add exch dup 0.370000 sub -0.330237 mul 0.972549 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.326797 mul 0.364706 add exch dup 0.560000 sub -0.130719 mul 0.462745 add exch dup 0.560000 sub -0.326797 mul 0.909804 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.784314 mul 0.345098 add exch dup 0.620000 sub -0.294118 mul 0.454902 add exch dup 0.620000 sub -0.735294 mul 0.890196 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -1.225491 mul 0.282353 add exch dup 0.700000 sub -0.490196 mul 0.431373 add exch dup 0.700000 sub -1.225490 mul 0.831373 add exch } if dup 0.780000 gt { exch pop exch pop exch pop dup 0.780000 sub -1.176465 mul 0.184314 add exch dup 0.780000 sub -0.392155 mul 0.392157 add exch dup 0.780000 sub -1.176465 mul 0.733333 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.074697 mul 0.172549 add exch dup 0.790000 sub -1.848740 mul 0.388235 add exch dup 0.790000 sub -1.083100 mul 0.721569 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.188235 exch 0.000000 exch 0.494118 exch } if pop }
endstream
endobj

26 0 obj
  2684
endobj

27 0 obj
  << /Length 28 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.125490 exch 0.000000 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.960784 mul 0.125490 add exch dup 0.000000 sub 6.274510 mul 0.000000 add exch dup 0.000000 sub 3.529415 mul 0.466667 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 1.960784 mul 0.145098 add exch dup 0.010000 sub 5.686275 mul 0.062745 add exch dup 0.010000 sub 3.137255 mul 0.501961 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 1.372549 mul 0.223529 add exch dup 0.050000 sub 4.215686 mul 0.290196 add exch dup 0.050000 sub 2.352941 mul 0.627451 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.176471 mul 0.278431 add exch dup 0.090000 sub 3.398694 mul 0.458824 add exch dup 0.090000 sub 1.960785 mul 0.721569 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.313726 add exch dup 0.120000 sub 3.921569 mul 0.560784 add exch dup 0.120000 sub 1.960785 mul 0.780392 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.274510 mul 0.325490 add exch dup 0.130000 sub 1.450980 mul 0.600000 add exch dup 0.130000 sub 0.705882 mul 0.800000 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.137255 mul 0.298039 add exch dup 0.230000 sub -0.196078 mul 0.745098 add exch dup 0.230000 sub 0.980392 mul 0.870588 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.360784 add exch dup 0.250000 sub 0.000000 mul 0.741176 add exch dup 0.250000 sub 0.784314 mul 0.890196 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.784313 mul 0.380392 add exch dup 0.260000 sub -0.156863 mul 0.741176 add exch dup 0.260000 sub 0.156863 mul 0.898039 add exch } if dup 0.310000 gt { exch pop exch pop exch pop dup 0.310000 sub 1.132898 mul 0.419608 add exch dup 0.310000 sub -0.174292 mul 0.733333 add exch dup 0.310000 sub 0.305011 mul 0.905882 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub 1.568628 mul 0.521569 add exch dup 0.400000 sub -0.313726 mul 0.717647 add exch dup 0.400000 sub 0.392157 mul 0.933333 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.313725 mul 0.600000 add exch dup 0.450000 sub -1.019608 mul 0.701961 add exch dup 0.450000 sub -0.470588 mul 0.952941 add exch } if dup 0.500000 gt { exch pop exch pop exch pop dup 0.500000 sub -0.235294 mul 0.584314 add exch dup 0.500000 sub -0.980392 mul 0.650980 add exch dup 0.500000 sub -0.470588 mul 0.929412 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.168067 mul 0.560784 add exch dup 0.600000 sub -0.504202 mul 0.552941 add exch dup 0.600000 sub -0.224090 mul 0.882353 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.712419 mul 0.549020 add exch dup 0.670000 sub -1.274510 mul 0.517647 add exch dup 0.670000 sub -1.339869 mul 0.866667 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.764707 mul 0.223529 add exch dup 0.790000 sub -2.647061 mul 0.364706 add exch dup 0.790000 sub -1.176472 mul 0.705882 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.092272 mul 0.152941 add exch dup 0.830000 sub -1.522491 mul 0.258824 add exch dup 0.830000 sub -1.384083 mul 0.658824 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

28 0 obj
  3462
endobj

29 0 obj
  << /Length 30 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.125490 exch 0.000000 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.137255 mul 0.125490 add exch dup 0.000000 sub 8.627451 mul 0.000000 add exch dup 0.000000 sub 5.098042 mul 0.466667 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 1.960784 mul 0.156863 add exch dup 0.010000 sub 5.588236 mul 0.086275 add exch dup 0.010000 sub 3.039216 mul 0.517647 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 1.372549 mul 0.235294 add exch dup 0.050000 sub 4.019608 mul 0.309804 add exch dup 0.050000 sub 2.352941 mul 0.639216 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.176471 mul 0.290196 add exch dup 0.090000 sub 3.398694 mul 0.470588 add exch dup 0.090000 sub 1.830066 mul 0.733333 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.325490 add exch dup 0.120000 sub 3.529412 mul 0.572549 add exch dup 0.120000 sub 1.960785 mul 0.788235 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.313725 mul 0.337255 add exch dup 0.130000 sub 1.411765 mul 0.607843 add exch dup 0.130000 sub 0.666667 mul 0.807843 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.137255 mul 0.305882 add exch dup 0.230000 sub -0.196078 mul 0.749020 add exch dup 0.230000 sub 0.980392 mul 0.874510 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.368627 add exch dup 0.250000 sub 0.000000 mul 0.745098 add exch dup 0.250000 sub 0.784314 mul 0.894118 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.784313 mul 0.388235 add exch dup 0.260000 sub -0.156863 mul 0.745098 add exch dup 0.260000 sub 0.156863 mul 0.901961 add exch } if dup 0.310000 gt { exch pop exch pop exch pop dup 0.310000 sub 1.132898 mul 0.427451 add exch dup 0.310000 sub -0.174292 mul 0.737255 add exch dup 0.310000 sub 0.261438 mul 0.909804 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub 1.333334 mul 0.529412 add exch dup 0.400000 sub -0.235294 mul 0.721569 add exch dup 0.400000 sub 0.313726 mul 0.933333 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.313725 mul 0.596078 add exch dup 0.450000 sub -1.019608 mul 0.709804 add exch dup 0.450000 sub -0.470588 mul 0.949020 add exch } if dup 0.500000 gt { exch pop exch pop exch pop dup 0.500000 sub -0.313725 mul 0.580392 add exch dup 0.500000 sub -0.980392 mul 0.658824 add exch dup 0.500000 sub -0.470588 mul 0.925490 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.168067 mul 0.549020 add exch dup 0.600000 sub -0.504202 mul 0.560784 add exch dup 0.600000 sub -0.224090 mul 0.878431 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.679739 mul 0.537255 add exch dup 0.670000 sub -1.274510 mul 0.525490 add exch dup 0.670000 sub -1.339869 mul 0.862745 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.666668 mul 0.215686 add exch dup 0.790000 sub -2.647061 mul 0.372549 add exch dup 0.790000 sub -1.078432 mul 0.701961 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.115340 mul 0.149020 add exch dup 0.830000 sub -1.568627 mul 0.266667 add exch dup 0.830000 sub -1.384083 mul 0.658824 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

30 0 obj
  3462
endobj

31 0 obj
  << /Length 32 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.121569 exch 0.000000 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.549020 mul 0.121569 add exch dup 0.000000 sub 7.058824 mul 0.000000 add exch dup 0.000000 sub 3.921570 mul 0.466667 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 1.960785 mul 0.172549 add exch dup 0.020000 sub 5.196079 mul 0.141176 add exch dup 0.020000 sub 2.941176 mul 0.545098 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 1.960784 mul 0.250980 add exch dup 0.060000 sub 5.098039 mul 0.349020 add exch dup 0.060000 sub 2.875816 mul 0.662745 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.176471 mul 0.309804 add exch dup 0.090000 sub 3.006536 mul 0.501961 add exch dup 0.090000 sub 1.699347 mul 0.749020 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.345098 add exch dup 0.120000 sub 3.529412 mul 0.592157 add exch dup 0.120000 sub 1.960785 mul 0.800000 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.313725 mul 0.356863 add exch dup 0.130000 sub 1.294117 mul 0.627451 add exch dup 0.130000 sub 0.588235 mul 0.819608 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 2.941177 mul 0.325490 add exch dup 0.230000 sub -0.196078 mul 0.756863 add exch dup 0.230000 sub 0.980392 mul 0.878431 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.384314 add exch dup 0.250000 sub 0.000000 mul 0.752941 add exch dup 0.250000 sub 0.784314 mul 0.898039 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.653595 mul 0.403922 add exch dup 0.260000 sub -0.130719 mul 0.752941 add exch dup 0.260000 sub 0.130719 mul 0.905882 add exch } if dup 0.320000 gt { exch pop exch pop exch pop dup 0.320000 sub 1.019608 mul 0.443137 add exch dup 0.320000 sub -0.196078 mul 0.745098 add exch dup 0.320000 sub 0.235294 mul 0.913725 add exch } if dup 0.420000 gt { exch pop exch pop exch pop dup 0.420000 sub 1.437908 mul 0.545098 add exch dup 0.420000 sub -0.261438 mul 0.725490 add exch dup 0.420000 sub 0.261438 mul 0.937255 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.392157 mul 0.588235 add exch dup 0.450000 sub -1.078431 mul 0.717647 add exch dup 0.450000 sub -0.490196 mul 0.945098 add exch } if dup 0.490000 gt { exch pop exch pop exch pop dup 0.490000 sub -0.356506 mul 0.572549 add exch dup 0.490000 sub -0.891265 mul 0.674510 add exch dup 0.490000 sub -0.463458 mul 0.925490 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.224090 mul 0.533333 add exch dup 0.600000 sub -0.504202 mul 0.576471 add exch dup 0.600000 sub -0.280112 mul 0.874510 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.614379 mul 0.517647 add exch dup 0.670000 sub -1.209150 mul 0.541176 add exch dup 0.670000 sub -1.339869 mul 0.854902 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.568629 mul 0.203922 add exch dup 0.790000 sub -2.745100 mul 0.396078 add exch dup 0.790000 sub -1.078432 mul 0.694118 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.161476 mul 0.141176 add exch dup 0.830000 sub -1.683968 mul 0.286275 add exch dup 0.830000 sub -1.337947 mul 0.650980 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

32 0 obj
  3462
endobj

33 0 obj
  << /Length 34 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.117647 exch 0.000000 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.875817 mul 0.117647 add exch dup 0.000000 sub 7.058824 mul 0.000000 add exch dup 0.000000 sub 3.921570 mul 0.462745 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 2.614379 mul 0.203922 add exch dup 0.030000 sub 6.274510 mul 0.211765 add exch dup 0.030000 sub 3.660131 mul 0.580392 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 1.830065 mul 0.282353 add exch dup 0.060000 sub 4.705882 mul 0.400000 add exch dup 0.060000 sub 2.614378 mul 0.690196 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.176471 mul 0.337255 add exch dup 0.090000 sub 2.745098 mul 0.541176 add exch dup 0.090000 sub 1.699347 mul 0.768627 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.372549 add exch dup 0.120000 sub 3.137255 mul 0.623529 add exch dup 0.120000 sub 1.568628 mul 0.819608 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.274510 mul 0.384314 add exch dup 0.130000 sub 1.176470 mul 0.654902 add exch dup 0.130000 sub 0.549020 mul 0.835294 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 2.549020 mul 0.356863 add exch dup 0.230000 sub -0.196078 mul 0.772549 add exch dup 0.230000 sub 0.784314 mul 0.890196 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.407843 add exch dup 0.250000 sub 0.000000 mul 0.768627 add exch dup 0.250000 sub 0.784314 mul 0.905882 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.560224 mul 0.427451 add exch dup 0.260000 sub -0.112045 mul 0.768627 add exch dup 0.260000 sub 0.112045 mul 0.913725 add exch } if dup 0.330000 gt { exch pop exch pop exch pop dup 0.330000 sub 0.926917 mul 0.466667 add exch dup 0.330000 sub -0.249554 mul 0.760784 add exch dup 0.330000 sub 0.142603 mul 0.921569 add exch } if dup 0.440000 gt { exch pop exch pop exch pop dup 0.440000 sub 1.176472 mul 0.568627 add exch dup 0.440000 sub -0.392157 mul 0.733333 add exch dup 0.440000 sub 0.392157 mul 0.937255 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.490196 mul 0.580392 add exch dup 0.450000 sub -0.882352 mul 0.729412 add exch dup 0.450000 sub -0.490196 mul 0.941176 add exch } if dup 0.490000 gt { exch pop exch pop exch pop dup 0.490000 sub -0.499109 mul 0.560784 add exch dup 0.490000 sub -0.891265 mul 0.694118 add exch dup 0.490000 sub -0.534759 mul 0.921569 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.280112 mul 0.505882 add exch dup 0.600000 sub -0.504202 mul 0.596078 add exch dup 0.600000 sub -0.336134 mul 0.862745 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.516340 mul 0.486275 add exch dup 0.670000 sub -1.111111 mul 0.560784 add exch dup 0.670000 sub -1.274510 mul 0.839216 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.274511 mul 0.184314 add exch dup 0.790000 sub -2.843140 mul 0.427451 add exch dup 0.790000 sub -1.176472 mul 0.686275 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.184544 mul 0.133333 add exch dup 0.830000 sub -1.845444 mul 0.313726 add exch dup 0.830000 sub -1.245675 mul 0.639216 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

34 0 obj
  3462
endobj

35 0 obj
  << /Length 36 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.113725 exch 0.000000 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.745098 mul 0.113725 add exch dup 0.000000 sub 6.078432 mul 0.000000 add exch dup 0.000000 sub 3.529413 mul 0.462745 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 4.901961 mul 0.168627 add exch dup 0.020000 sub 10.392158 mul 0.121569 add exch dup 0.020000 sub 5.882353 mul 0.533333 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 2.483660 mul 0.266667 add exch dup 0.040000 sub 5.490196 mul 0.329412 add exch dup 0.040000 sub 3.137254 mul 0.650980 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 1.830065 mul 0.341176 add exch dup 0.070000 sub 3.921569 mul 0.494118 add exch dup 0.070000 sub 2.352941 mul 0.745098 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.764706 mul 0.396078 add exch dup 0.100000 sub 3.529412 mul 0.611765 add exch dup 0.100000 sub 1.960785 mul 0.815686 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.431373 add exch dup 0.120000 sub 2.745098 mul 0.682353 add exch dup 0.120000 sub 1.568628 mul 0.854902 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.235294 mul 0.443137 add exch dup 0.130000 sub 0.901961 mul 0.709804 add exch dup 0.130000 sub 0.431372 mul 0.870588 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.921572 mul 0.419608 add exch dup 0.230000 sub 0.000000 mul 0.800000 add exch dup 0.230000 sub 1.176472 mul 0.913725 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 0.980392 mul 0.458824 add exch dup 0.240000 sub 0.000000 mul 0.800000 add exch dup 0.240000 sub 0.392157 mul 0.925490 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.356506 mul 0.478431 add exch dup 0.260000 sub -0.178253 mul 0.800000 add exch dup 0.260000 sub 0.000000 mul 0.933333 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub 0.539216 mul 0.517647 add exch dup 0.370000 sub -0.294118 mul 0.780392 add exch dup 0.370000 sub -0.049020 mul 0.933333 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.588235 mul 0.560784 add exch dup 0.450000 sub -0.784313 mul 0.756863 add exch dup 0.450000 sub -0.588235 mul 0.929412 add exch } if dup 0.470000 gt { exch pop exch pop exch pop dup 0.470000 sub -0.751634 mul 0.549020 add exch dup 0.470000 sub -0.816994 mul 0.741176 add exch dup 0.470000 sub -0.653595 mul 0.917647 add exch } if dup 0.590000 gt { exch pop exch pop exch pop dup 0.590000 sub -0.441176 mul 0.458824 add exch dup 0.590000 sub -0.441176 mul 0.643137 add exch dup 0.590000 sub -0.392157 mul 0.839216 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.320261 mul 0.423529 add exch dup 0.670000 sub -0.980392 mul 0.607843 add exch dup 0.670000 sub -1.209150 mul 0.807843 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.882354 mul 0.145098 add exch dup 0.790000 sub -2.941179 mul 0.490196 add exch dup 0.790000 sub -1.078432 mul 0.662745 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.322953 mul 0.109804 add exch dup 0.830000 sub -2.191465 mul 0.372549 add exch dup 0.830000 sub -1.130334 mul 0.619608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

36 0 obj
  3462
endobj

37 0 obj
  << /Length 38 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.250980 exch 0.000000 exch 0.509804 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.071895 mul 0.250980 add exch dup 0.000000 sub 3.267974 mul 0.000000 add exch dup 0.000000 sub 3.006536 mul 0.509804 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 2.274510 mul 0.435294 add exch dup 0.060000 sub 2.431373 mul 0.196078 add exch dup 0.060000 sub 2.274510 mul 0.690196 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 2.156863 mul 0.549020 add exch dup 0.110000 sub 2.352942 mul 0.317647 add exch dup 0.110000 sub 2.156863 mul 0.803922 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.055807 mul 0.592157 add exch dup 0.130000 sub 0.392157 mul 0.364706 add exch dup 0.130000 sub 1.055807 mul 0.847059 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.784313 mul 0.729412 add exch dup 0.260000 sub 0.392157 mul 0.415686 add exch dup 0.260000 sub 0.784313 mul 0.984314 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.745098 add exch dup 0.280000 sub -0.098039 mul 0.423529 add exch dup 0.280000 sub -0.245098 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.382869 mul 0.643137 add exch dup 0.360000 sub -0.144479 mul 0.415686 add exch dup 0.360000 sub -0.247678 mul 0.980392 add exch } if dup 0.550000 gt { exch pop exch pop exch pop dup 0.550000 sub -1.176472 mul 0.380392 add exch dup 0.550000 sub 0.000000 mul 0.388235 add exch dup 0.550000 sub 0.000000 mul 0.933333 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.326797 mul 0.368627 add exch dup 0.560000 sub -0.130719 mul 0.388235 add exch dup 0.560000 sub -0.326797 mul 0.933333 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.637255 mul 0.349020 add exch dup 0.620000 sub -0.294118 mul 0.380392 add exch dup 0.620000 sub -0.784314 mul 0.913725 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -0.958605 mul 0.298039 add exch dup 0.700000 sub -0.435730 mul 0.356863 add exch dup 0.700000 sub -1.089324 mul 0.850980 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.074697 mul 0.211765 add exch dup 0.790000 sub -1.512605 mul 0.317647 add exch dup 0.790000 sub -1.157797 mul 0.752941 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.196078 exch 0.000000 exch 0.509804 exch } if pop }
endstream
endobj

38 0 obj
  2489
endobj

39 0 obj
  << /Length 40 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.129412 exch 0.047059 exch 0.486275 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.921568 mul 0.129412 add exch dup 0.000000 sub 7.189543 mul 0.047059 add exch dup 0.000000 sub 4.313726 mul 0.486275 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 4.705883 mul 0.247059 add exch dup 0.030000 sub 9.215685 mul 0.262745 add exch dup 0.030000 sub 5.294117 mul 0.615686 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 2.483660 mul 0.341176 add exch dup 0.050000 sub 4.705884 mul 0.447059 add exch dup 0.050000 sub 2.745098 mul 0.721569 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.745097 mul 0.415686 add exch dup 0.080000 sub 5.098038 mul 0.588235 add exch dup 0.080000 sub 3.137254 mul 0.803922 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.568629 mul 0.470588 add exch dup 0.100000 sub 3.137255 mul 0.690196 add exch dup 0.100000 sub 1.764706 mul 0.866667 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.501961 add exch dup 0.120000 sub 1.960785 mul 0.752941 add exch dup 0.120000 sub 1.176471 mul 0.901961 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.156863 mul 0.513726 add exch dup 0.130000 sub 0.627451 mul 0.772549 add exch dup 0.130000 sub 0.274510 mul 0.913725 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 1.960789 mul 0.498039 add exch dup 0.230000 sub 0.000000 mul 0.835294 add exch dup 0.230000 sub 0.392157 mul 0.941176 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 0.980392 mul 0.517647 add exch dup 0.240000 sub -0.196078 mul 0.835294 add exch dup 0.240000 sub 0.392157 mul 0.945098 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.000000 mul 0.537255 add exch dup 0.260000 sub -0.206398 mul 0.831373 add exch dup 0.260000 sub -0.185759 mul 0.952941 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -1.019608 mul 0.537255 add exch dup 0.450000 sub -0.705882 mul 0.792157 add exch dup 0.450000 sub -0.784313 mul 0.917647 add exch } if dup 0.500000 gt { exch pop exch pop exch pop dup 0.500000 sub -0.980392 mul 0.486275 add exch dup 0.500000 sub -0.666666 mul 0.756863 add exch dup 0.500000 sub -0.745098 mul 0.878431 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.504202 mul 0.388235 add exch dup 0.600000 sub -0.392157 mul 0.690196 add exch dup 0.600000 sub -0.392157 mul 0.803922 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.124183 mul 0.352941 add exch dup 0.670000 sub -0.816993 mul 0.662745 add exch dup 0.670000 sub -1.176471 mul 0.776471 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.294118 mul 0.098039 add exch dup 0.790000 sub -3.137259 mul 0.564706 add exch dup 0.790000 sub -0.882354 mul 0.635294 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.461361 mul 0.086275 add exch dup 0.830000 sub -2.583622 mul 0.439216 add exch dup 0.830000 sub -1.014994 mul 0.600000 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

40 0 obj
  3267
endobj

41 0 obj
  << /Length 42 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.109804 exch 0.000000 exch 0.458824 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.921569 mul 0.109804 add exch dup 0.000000 sub 8.039216 mul 0.000000 add exch dup 0.000000 sub 4.705884 mul 0.458824 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 3.267974 mul 0.188235 add exch dup 0.020000 sub 6.666667 mul 0.160784 add exch dup 0.020000 sub 3.921568 mul 0.552941 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 3.725490 mul 0.286275 add exch dup 0.050000 sub 7.843138 mul 0.360784 add exch dup 0.050000 sub 4.509804 mul 0.670588 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 1.830065 mul 0.360784 add exch dup 0.070000 sub 3.790849 mul 0.517647 add exch dup 0.070000 sub 2.222222 mul 0.760784 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.764706 mul 0.415686 add exch dup 0.100000 sub 3.529412 mul 0.631373 add exch dup 0.100000 sub 1.960785 mul 0.827451 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.450980 add exch dup 0.120000 sub 2.352942 mul 0.701961 add exch dup 0.120000 sub 1.568628 mul 0.866667 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.196078 mul 0.462745 add exch dup 0.130000 sub 0.862745 mul 0.725490 add exch dup 0.130000 sub 0.392157 mul 0.882353 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.137258 mul 0.443137 add exch dup 0.230000 sub -0.392157 mul 0.811765 add exch dup 0.230000 sub 1.176472 mul 0.921569 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 0.980392 mul 0.474510 add exch dup 0.240000 sub 0.000000 mul 0.807843 add exch dup 0.240000 sub 0.392157 mul 0.933333 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.280112 mul 0.494118 add exch dup 0.260000 sub -0.168067 mul 0.807843 add exch dup 0.260000 sub -0.084034 mul 0.941176 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub 0.392157 mul 0.533333 add exch dup 0.400000 sub -0.313726 mul 0.784314 add exch dup 0.400000 sub -0.078431 mul 0.929412 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.784313 mul 0.552941 add exch dup 0.450000 sub -0.784313 mul 0.768627 add exch dup 0.450000 sub -0.588235 mul 0.925490 add exch } if dup 0.470000 gt { exch pop exch pop exch pop dup 0.470000 sub -0.816994 mul 0.537255 add exch dup 0.470000 sub -0.784314 mul 0.752941 add exch dup 0.470000 sub -0.686275 mul 0.913725 add exch } if dup 0.590000 gt { exch pop exch pop exch pop dup 0.590000 sub -0.441176 mul 0.439216 add exch dup 0.590000 sub -0.441176 mul 0.658824 add exch dup 0.590000 sub -0.392157 mul 0.831373 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.287581 mul 0.403922 add exch dup 0.670000 sub -0.947712 mul 0.623529 add exch dup 0.670000 sub -1.209150 mul 0.800000 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.686275 mul 0.129412 add exch dup 0.790000 sub -3.039219 mul 0.509804 add exch dup 0.790000 sub -0.980393 mul 0.654902 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.369089 mul 0.101961 add exch dup 0.830000 sub -2.283737 mul 0.388235 add exch dup 0.830000 sub -1.107266 mul 0.615686 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

42 0 obj
  3463
endobj

43 0 obj
  << /Length 44 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.196078 exch 0.027451 exch 0.501961 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.823530 mul 0.196078 add exch dup 0.000000 sub 5.196079 mul 0.027451 add exch dup 0.000000 sub 3.627451 mul 0.501961 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 3.921568 mul 0.349020 add exch dup 0.040000 sub 5.359477 mul 0.235294 add exch dup 0.040000 sub 3.921568 mul 0.647059 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 4.313726 mul 0.466667 add exch dup 0.070000 sub 5.882353 mul 0.396078 add exch dup 0.070000 sub 4.117646 mul 0.764706 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.699347 mul 0.552941 add exch dup 0.090000 sub 2.352942 mul 0.513726 add exch dup 0.090000 sub 1.568628 mul 0.847059 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.960785 mul 0.603922 add exch dup 0.120000 sub 2.352942 mul 0.584314 add exch dup 0.120000 sub 1.960785 mul 0.894118 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.573152 mul 0.623529 add exch dup 0.130000 sub 0.211161 mul 0.607843 add exch dup 0.130000 sub 0.603318 mul 0.913725 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.392157 mul 0.698039 add exch dup 0.260000 sub 0.196078 mul 0.635294 add exch dup 0.260000 sub 0.196078 mul 0.992157 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.705882 add exch dup 0.280000 sub -0.174292 mul 0.639216 add exch dup 0.280000 sub -0.392157 mul 0.996078 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.279670 mul 0.603922 add exch dup 0.370000 sub -0.227038 mul 0.623529 add exch dup 0.370000 sub -0.454076 mul 0.960784 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.360784 add exch dup 0.560000 sub -0.156863 mul 0.580392 add exch dup 0.560000 sub -0.313725 mul 0.874510 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -0.896359 mul 0.341176 add exch dup 0.610000 sub -0.280112 mul 0.572549 add exch dup 0.610000 sub -0.728291 mul 0.858824 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -1.400560 mul 0.278431 add exch dup 0.680000 sub -0.504202 mul 0.552941 add exch dup 0.680000 sub -1.176471 mul 0.807843 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.568627 mul 0.180392 add exch dup 0.750000 sub -0.490197 mul 0.517647 add exch dup 0.750000 sub -1.274509 mul 0.725490 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.298786 mul 0.117647 add exch dup 0.790000 sub -2.371616 mul 0.498039 add exch dup 0.790000 sub -0.952381 mul 0.674510 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.180392 exch 0.000000 exch 0.474510 exch } if pop }
endstream
endobj

44 0 obj
  2878
endobj

45 0 obj
  << /Length 46 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.109804 exch 0.000000 exch 0.458824 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 5.098040 mul 0.109804 add exch dup 0.000000 sub 10.392158 mul 0.000000 add exch dup 0.000000 sub 6.078433 mul 0.458824 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 3.267974 mul 0.211765 add exch dup 0.020000 sub 6.274510 mul 0.207843 add exch dup 0.020000 sub 3.660130 mul 0.580392 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 2.483660 mul 0.309804 add exch dup 0.050000 sub 5.098040 mul 0.396078 add exch dup 0.050000 sub 3.006536 mul 0.690196 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.745097 mul 0.384314 add exch dup 0.080000 sub 5.294116 mul 0.549020 add exch dup 0.080000 sub 3.137254 mul 0.780392 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.568628 mul 0.439216 add exch dup 0.100000 sub 3.333334 mul 0.654902 add exch dup 0.100000 sub 1.960785 mul 0.843137 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.470588 add exch dup 0.120000 sub 2.352942 mul 0.721569 add exch dup 0.120000 sub 1.176471 mul 0.882353 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.196078 mul 0.482353 add exch dup 0.130000 sub 0.745098 mul 0.745098 add exch dup 0.130000 sub 0.352941 mul 0.894118 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 2.745100 mul 0.462745 add exch dup 0.230000 sub 0.000000 mul 0.819608 add exch dup 0.230000 sub 0.784314 mul 0.929412 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 0.980394 mul 0.490196 add exch dup 0.240000 sub 0.000000 mul 0.819608 add exch dup 0.240000 sub 0.392157 mul 0.937255 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.207612 mul 0.509804 add exch dup 0.260000 sub -0.230680 mul 0.819608 add exch dup 0.260000 sub -0.115340 mul 0.945098 add exch } if dup 0.430000 gt { exch pop exch pop exch pop dup 0.430000 sub 0.196079 mul 0.545098 add exch dup 0.430000 sub -0.196079 mul 0.780392 add exch dup 0.430000 sub -0.196079 mul 0.925490 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -1.045752 mul 0.549020 add exch dup 0.450000 sub -0.784314 mul 0.776471 add exch dup 0.450000 sub -0.784314 mul 0.921569 add exch } if dup 0.480000 gt { exch pop exch pop exch pop dup 0.480000 sub -0.816993 mul 0.517647 add exch dup 0.480000 sub -0.686274 mul 0.752941 add exch dup 0.480000 sub -0.653595 mul 0.898039 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.504202 mul 0.419608 add exch dup 0.600000 sub -0.448179 mul 0.670588 add exch dup 0.600000 sub -0.448179 mul 0.819608 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.222222 mul 0.384314 add exch dup 0.670000 sub -0.882353 mul 0.639216 add exch dup 0.670000 sub -1.176471 mul 0.788235 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.490197 mul 0.117647 add exch dup 0.790000 sub -3.137259 mul 0.533333 add exch dup 0.790000 sub -0.980393 mul 0.647059 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.392157 mul 0.098039 add exch dup 0.830000 sub -2.399077 mul 0.407843 add exch dup 0.830000 sub -1.061130 mul 0.607843 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

46 0 obj
  3463
endobj

47 0 obj
  << /Length 48 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.125490 exch 0.000000 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.176471 mul 0.125490 add exch dup 0.000000 sub 3.137255 mul 0.000000 add exch dup 0.000000 sub 1.960784 mul 0.466667 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 1.862745 mul 0.137255 add exch dup 0.010000 sub 5.980392 mul 0.031373 add exch dup 0.010000 sub 3.333334 mul 0.486275 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 1.470588 mul 0.211765 add exch dup 0.050000 sub 4.411764 mul 0.270588 add exch dup 0.050000 sub 2.352941 mul 0.619608 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.176471 mul 0.270588 add exch dup 0.090000 sub 3.529413 mul 0.447059 add exch dup 0.090000 sub 1.960785 mul 0.713726 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.305882 add exch dup 0.120000 sub 3.921569 mul 0.552941 add exch dup 0.120000 sub 2.352942 mul 0.772549 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.274510 mul 0.317647 add exch dup 0.130000 sub 1.490196 mul 0.592157 add exch dup 0.130000 sub 0.705882 mul 0.796078 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.137255 mul 0.290196 add exch dup 0.230000 sub -0.392157 mul 0.741176 add exch dup 0.230000 sub 0.980392 mul 0.866667 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.352941 add exch dup 0.250000 sub 0.000000 mul 0.733333 add exch dup 0.250000 sub 0.784314 mul 0.886275 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.784313 mul 0.372549 add exch dup 0.260000 sub -0.078431 mul 0.733333 add exch dup 0.260000 sub 0.156863 mul 0.894118 add exch } if dup 0.310000 gt { exch pop exch pop exch pop dup 0.310000 sub 1.274510 mul 0.411765 add exch dup 0.310000 sub -0.196078 mul 0.729412 add exch dup 0.310000 sub 0.343137 mul 0.901961 add exch } if dup 0.390000 gt { exch pop exch pop exch pop dup 0.390000 sub 1.503268 mul 0.513726 add exch dup 0.390000 sub -0.261438 mul 0.713726 add exch dup 0.390000 sub 0.392157 mul 0.929412 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.235294 mul 0.603922 add exch dup 0.450000 sub -1.098039 mul 0.698039 add exch dup 0.450000 sub -0.470588 mul 0.952941 add exch } if dup 0.500000 gt { exch pop exch pop exch pop dup 0.500000 sub -0.249554 mul 0.592157 add exch dup 0.500000 sub -0.891265 mul 0.643137 add exch dup 0.500000 sub -0.356506 mul 0.929412 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -0.130719 mul 0.564706 add exch dup 0.610000 sub -0.588235 mul 0.545098 add exch dup 0.610000 sub -0.261438 mul 0.890196 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.712419 mul 0.556863 add exch dup 0.670000 sub -1.307190 mul 0.509804 add exch dup 0.670000 sub -1.372549 mul 0.874510 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.862747 mul 0.231373 add exch dup 0.790000 sub -2.647062 mul 0.352941 add exch dup 0.790000 sub -1.176472 mul 0.709804 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.069204 mul 0.156863 add exch dup 0.830000 sub -1.453287 mul 0.247059 add exch dup 0.830000 sub -1.407151 mul 0.662745 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

48 0 obj
  3462
endobj

49 0 obj
  << /Length 50 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.105882 exch 0.000000 exch 0.458824 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.790850 mul 0.105882 add exch dup 0.000000 sub 7.450981 mul 0.000000 add exch dup 0.000000 sub 4.444445 mul 0.458824 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 4.901961 mul 0.219608 add exch dup 0.030000 sub 9.411764 mul 0.223529 add exch dup 0.030000 sub 5.490195 mul 0.592157 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 2.614379 mul 0.317647 add exch dup 0.050000 sub 4.967321 mul 0.411765 add exch dup 0.050000 sub 2.875817 mul 0.701961 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.745097 mul 0.396078 add exch dup 0.080000 sub 5.294116 mul 0.560784 add exch dup 0.080000 sub 3.137254 mul 0.788235 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.568628 mul 0.450980 add exch dup 0.100000 sub 3.137255 mul 0.666667 add exch dup 0.100000 sub 1.960785 mul 0.850980 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.482353 add exch dup 0.120000 sub 2.352942 mul 0.729412 add exch dup 0.120000 sub 1.176471 mul 0.890196 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.196078 mul 0.494118 add exch dup 0.130000 sub 0.705882 mul 0.752941 add exch dup 0.130000 sub 0.313725 mul 0.901961 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 2.352943 mul 0.474510 add exch dup 0.230000 sub 0.000000 mul 0.823529 add exch dup 0.230000 sub 0.784314 mul 0.933333 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 0.980394 mul 0.498039 add exch dup 0.240000 sub 0.000000 mul 0.823529 add exch dup 0.240000 sub 0.392157 mul 0.941176 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.138408 mul 0.517647 add exch dup 0.260000 sub -0.230680 mul 0.823529 add exch dup 0.260000 sub -0.138408 mul 0.949020 add exch } if dup 0.430000 gt { exch pop exch pop exch pop dup 0.430000 sub 0.196079 mul 0.541176 add exch dup 0.430000 sub -0.196079 mul 0.784314 add exch dup 0.430000 sub -0.196079 mul 0.925490 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.980392 mul 0.545098 add exch dup 0.450000 sub -0.686274 mul 0.780392 add exch dup 0.450000 sub -0.784313 mul 0.921569 add exch } if dup 0.490000 gt { exch pop exch pop exch pop dup 0.490000 sub -0.891266 mul 0.505882 add exch dup 0.490000 sub -0.713012 mul 0.752941 add exch dup 0.490000 sub -0.713012 mul 0.890196 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.504202 mul 0.407843 add exch dup 0.600000 sub -0.392157 mul 0.674510 add exch dup 0.600000 sub -0.392157 mul 0.811765 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.189543 mul 0.372549 add exch dup 0.670000 sub -0.882353 mul 0.647059 add exch dup 0.670000 sub -1.176471 mul 0.784314 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.392157 mul 0.109804 add exch dup 0.790000 sub -3.039219 mul 0.541176 add exch dup 0.790000 sub -0.980393 mul 0.643137 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.415225 mul 0.094118 add exch dup 0.830000 sub -2.468281 mul 0.419608 add exch dup 0.830000 sub -1.038062 mul 0.603922 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

50 0 obj
  3462
endobj

51 0 obj
  << /Length 52 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.113725 exch 0.019608 exch 0.470588 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.921569 mul 0.113725 add exch dup 0.000000 sub 7.450981 mul 0.019608 add exch dup 0.000000 sub 4.313726 mul 0.470588 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 4.901961 mul 0.231373 add exch dup 0.030000 sub 9.215686 mul 0.243137 add exch dup 0.030000 sub 5.490195 mul 0.600000 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 2.483660 mul 0.329412 add exch dup 0.050000 sub 4.836602 mul 0.427451 add exch dup 0.050000 sub 2.875817 mul 0.709804 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.745097 mul 0.403922 add exch dup 0.080000 sub 5.098038 mul 0.572549 add exch dup 0.080000 sub 2.941176 mul 0.796078 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.568628 mul 0.458824 add exch dup 0.100000 sub 3.137255 mul 0.674510 add exch dup 0.100000 sub 1.960785 mul 0.854902 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176474 mul 0.490196 add exch dup 0.120000 sub 2.352942 mul 0.737255 add exch dup 0.120000 sub 1.176471 mul 0.894118 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.156863 mul 0.501961 add exch dup 0.130000 sub 0.705882 mul 0.760784 add exch dup 0.130000 sub 0.313725 mul 0.905882 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 1.960789 mul 0.486275 add exch dup 0.230000 sub 0.000000 mul 0.831373 add exch dup 0.230000 sub 0.784314 mul 0.937255 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 0.980392 mul 0.505882 add exch dup 0.240000 sub -0.196078 mul 0.831373 add exch dup 0.240000 sub 0.392157 mul 0.945098 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.092272 mul 0.525490 add exch dup 0.260000 sub -0.230680 mul 0.827451 add exch dup 0.260000 sub -0.184544 mul 0.952941 add exch } if dup 0.430000 gt { exch pop exch pop exch pop dup 0.430000 sub 0.000000 mul 0.541176 add exch dup 0.430000 sub -0.196079 mul 0.788235 add exch dup 0.430000 sub -0.196079 mul 0.921569 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -1.176471 mul 0.541176 add exch dup 0.450000 sub -0.784313 mul 0.784314 add exch dup 0.450000 sub -0.882352 mul 0.917647 add exch } if dup 0.490000 gt { exch pop exch pop exch pop dup 0.490000 sub -0.891265 mul 0.494118 add exch dup 0.490000 sub -0.641711 mul 0.752941 add exch dup 0.490000 sub -0.677362 mul 0.882353 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.504202 mul 0.396078 add exch dup 0.600000 sub -0.392157 mul 0.682353 add exch dup 0.600000 sub -0.392157 mul 0.807843 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.124183 mul 0.360784 add exch dup 0.670000 sub -0.849673 mul 0.654902 add exch dup 0.670000 sub -1.176471 mul 0.780392 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.392157 mul 0.105882 add exch dup 0.790000 sub -3.137259 mul 0.552941 add exch dup 0.790000 sub -0.980393 mul 0.639216 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.438293 mul 0.090196 add exch dup 0.830000 sub -2.514417 mul 0.427451 add exch dup 0.830000 sub -1.014994 mul 0.600000 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

52 0 obj
  3463
endobj

53 0 obj
  << /Length 54 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.105882 exch 0.000000 exch 0.458824 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.529412 mul 0.105882 add exch dup 0.000000 sub 6.666667 mul 0.000000 add exch dup 0.000000 sub 3.921568 mul 0.458824 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 5.686275 mul 0.141176 add exch dup 0.010000 sub 10.784315 mul 0.066667 add exch dup 0.010000 sub 6.274511 mul 0.498039 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 4.901960 mul 0.254902 add exch dup 0.030000 sub 9.019607 mul 0.282353 add exch dup 0.030000 sub 5.294117 mul 0.623529 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 2.352941 mul 0.352941 add exch dup 0.050000 sub 4.575164 mul 0.462745 add exch dup 0.050000 sub 2.745098 mul 0.729412 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.745097 mul 0.423529 add exch dup 0.080000 sub 4.901960 mul 0.600000 add exch dup 0.080000 sub 2.941176 mul 0.811765 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.568629 mul 0.478431 add exch dup 0.100000 sub 3.137255 mul 0.698039 add exch dup 0.100000 sub 1.764706 mul 0.870588 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.509804 add exch dup 0.120000 sub 1.960785 mul 0.760784 add exch dup 0.120000 sub 1.176471 mul 0.905882 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.156863 mul 0.521569 add exch dup 0.130000 sub 0.588235 mul 0.780392 add exch dup 0.130000 sub 0.274510 mul 0.917647 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 1.960786 mul 0.505882 add exch dup 0.230000 sub 0.000000 mul 0.839216 add exch dup 0.230000 sub 0.392157 mul 0.945098 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 0.980392 mul 0.525490 add exch dup 0.240000 sub 0.000000 mul 0.839216 add exch dup 0.240000 sub 0.392157 mul 0.949020 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub -0.069204 mul 0.545098 add exch dup 0.260000 sub -0.230680 mul 0.839216 add exch dup 0.260000 sub -0.230680 mul 0.956863 add exch } if dup 0.430000 gt { exch pop exch pop exch pop dup 0.430000 sub 0.000000 mul 0.533333 add exch dup 0.430000 sub -0.196079 mul 0.800000 add exch dup 0.430000 sub -0.196079 mul 0.917647 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -1.176471 mul 0.533333 add exch dup 0.450000 sub -0.784313 mul 0.796078 add exch dup 0.450000 sub -0.862745 mul 0.913725 add exch } if dup 0.500000 gt { exch pop exch pop exch pop dup 0.500000 sub -0.891265 mul 0.474510 add exch dup 0.500000 sub -0.570410 mul 0.756863 add exch dup 0.500000 sub -0.677362 mul 0.870588 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -0.588235 mul 0.376471 add exch dup 0.610000 sub -0.392157 mul 0.694118 add exch dup 0.610000 sub -0.457516 mul 0.796078 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.091503 mul 0.341176 add exch dup 0.670000 sub -0.816993 mul 0.670588 add exch dup 0.670000 sub -1.143791 mul 0.768627 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.196079 mul 0.090196 add exch dup 0.790000 sub -3.137259 mul 0.572549 add exch dup 0.790000 sub -0.882354 mul 0.631373 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.484429 mul 0.082353 add exch dup 0.830000 sub -2.629758 mul 0.447059 add exch dup 0.830000 sub -0.991926 mul 0.596078 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

54 0 obj
  3658
endobj

55 0 obj
  << /Length 56 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.101961 exch 0.000000 exch 0.454902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 4.705883 mul 0.101961 add exch dup 0.000000 sub 9.019608 mul 0.000000 add exch dup 0.000000 sub 5.490199 mul 0.454902 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 5.882353 mul 0.149020 add exch dup 0.010000 sub 10.392158 mul 0.090196 add exch dup 0.010000 sub 6.274509 mul 0.509804 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 3.137255 mul 0.266667 add exch dup 0.030000 sub 5.882353 mul 0.298039 add exch dup 0.030000 sub 3.398693 mul 0.635294 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.725490 mul 0.360784 add exch dup 0.060000 sub 6.862746 mul 0.474510 add exch dup 0.060000 sub 4.117647 mul 0.737255 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.745097 mul 0.435294 add exch dup 0.080000 sub 4.901960 mul 0.611765 add exch dup 0.080000 sub 2.941176 mul 0.819608 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.568629 mul 0.490196 add exch dup 0.100000 sub 2.941177 mul 0.709804 add exch dup 0.100000 sub 1.764706 mul 0.878431 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.521569 add exch dup 0.120000 sub 1.960785 mul 0.768627 add exch dup 0.120000 sub 1.176471 mul 0.913725 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.156863 mul 0.533333 add exch dup 0.130000 sub 0.549020 mul 0.788235 add exch dup 0.130000 sub 0.235294 mul 0.925490 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 1.568629 mul 0.517647 add exch dup 0.230000 sub 0.000000 mul 0.843137 add exch dup 0.230000 sub 0.392157 mul 0.949020 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 0.980392 mul 0.533333 add exch dup 0.240000 sub 0.000000 mul 0.843137 add exch dup 0.240000 sub 0.392157 mul 0.952941 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub -0.098039 mul 0.552941 add exch dup 0.260000 sub -0.220588 mul 0.843137 add exch dup 0.260000 sub -0.245098 mul 0.960784 add exch } if dup 0.420000 gt { exch pop exch pop exch pop dup 0.420000 sub -0.130719 mul 0.537255 add exch dup 0.420000 sub -0.261438 mul 0.807843 add exch dup 0.420000 sub -0.261438 mul 0.921569 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -1.176471 mul 0.533333 add exch dup 0.450000 sub -0.718954 mul 0.800000 add exch dup 0.450000 sub -0.849673 mul 0.913725 add exch } if dup 0.510000 gt { exch pop exch pop exch pop dup 0.510000 sub -0.980392 mul 0.462745 add exch dup 0.510000 sub -0.549019 mul 0.756863 add exch dup 0.510000 sub -0.705882 mul 0.862745 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -0.588235 mul 0.364706 add exch dup 0.610000 sub -0.392157 mul 0.701961 add exch dup 0.610000 sub -0.457516 mul 0.792157 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.026144 mul 0.329412 add exch dup 0.670000 sub -0.784314 mul 0.678431 add exch dup 0.670000 sub -1.143791 mul 0.764706 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.196079 mul 0.086275 add exch dup 0.790000 sub -3.235298 mul 0.584314 add exch dup 0.790000 sub -0.882354 mul 0.627451 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.507497 mul 0.078431 add exch dup 0.830000 sub -2.675894 mul 0.454902 add exch dup 0.830000 sub -0.968858 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

56 0 obj
  3659
endobj

57 0 obj
  << /Length 58 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.101961 exch 0.000000 exch 0.454902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 5.882353 mul 0.101961 add exch dup 0.000000 sub 10.980392 mul 0.000000 add exch dup 0.000000 sub 6.666669 mul 0.454902 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 5.882353 mul 0.160784 add exch dup 0.010000 sub 10.392158 mul 0.109804 add exch dup 0.010000 sub 6.078431 mul 0.521569 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 3.137255 mul 0.278431 add exch dup 0.030000 sub 5.751634 mul 0.317647 add exch dup 0.030000 sub 3.398693 mul 0.643137 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.725490 mul 0.372549 add exch dup 0.060000 sub 6.666668 mul 0.490196 add exch dup 0.060000 sub 4.117647 mul 0.745098 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.549019 mul 0.447059 add exch dup 0.080000 sub 4.705881 mul 0.623529 add exch dup 0.080000 sub 2.745097 mul 0.827451 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.568629 mul 0.498039 add exch dup 0.100000 sub 2.941177 mul 0.717647 add exch dup 0.100000 sub 1.764706 mul 0.882353 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.529412 add exch dup 0.120000 sub 1.960785 mul 0.776471 add exch dup 0.120000 sub 1.176471 mul 0.917647 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.117647 mul 0.541176 add exch dup 0.130000 sub 0.509804 mul 0.796078 add exch dup 0.130000 sub 0.235294 mul 0.929412 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 1.176472 mul 0.529412 add exch dup 0.230000 sub 0.000000 mul 0.847059 add exch dup 0.230000 sub 0.392157 mul 0.952941 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 0.980392 mul 0.541176 add exch dup 0.240000 sub 0.000000 mul 0.847059 add exch dup 0.240000 sub 0.392157 mul 0.956863 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub -0.156863 mul 0.560784 add exch dup 0.260000 sub -0.209150 mul 0.847059 add exch dup 0.260000 sub -0.261438 mul 0.964706 add exch } if dup 0.410000 gt { exch pop exch pop exch pop dup 0.410000 sub -0.196078 mul 0.537255 add exch dup 0.410000 sub -0.294118 mul 0.815686 add exch dup 0.410000 sub -0.294118 mul 0.925490 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -1.241830 mul 0.529412 add exch dup 0.450000 sub -0.718954 mul 0.803922 add exch dup 0.450000 sub -0.915033 mul 0.913725 add exch } if dup 0.510000 gt { exch pop exch pop exch pop dup 0.510000 sub -0.980392 mul 0.454902 add exch dup 0.510000 sub -0.549019 mul 0.760784 add exch dup 0.510000 sub -0.705882 mul 0.858824 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -0.588235 mul 0.356863 add exch dup 0.610000 sub -0.326797 mul 0.705882 add exch dup 0.610000 sub -0.457516 mul 0.788235 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.026144 mul 0.321569 add exch dup 0.670000 sub -0.751634 mul 0.686275 add exch dup 0.670000 sub -1.143791 mul 0.760784 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.098039 mul 0.078431 add exch dup 0.790000 sub -3.235298 mul 0.596078 add exch dup 0.790000 sub -0.882354 mul 0.623529 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.530565 mul 0.074510 add exch dup 0.830000 sub -2.745098 mul 0.466667 add exch dup 0.830000 sub -0.945790 mul 0.588235 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

58 0 obj
  3660
endobj

59 0 obj
  << /Length 60 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.137255 exch 0.000000 exch 0.470588 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.588235 mul 0.137255 add exch dup 0.000000 sub 3.921569 mul 0.000000 add exch dup 0.000000 sub 2.091504 mul 0.470588 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.470588 mul 0.172549 add exch dup 0.060000 sub 3.686275 mul 0.235294 add exch dup 0.060000 sub 1.960784 mul 0.596078 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 0.588235 mul 0.196078 add exch dup 0.110000 sub 3.529412 mul 0.419608 add exch dup 0.110000 sub 1.764706 mul 0.694118 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.470588 mul 0.207843 add exch dup 0.130000 sub 1.960784 mul 0.490196 add exch dup 0.130000 sub 0.901961 mul 0.729412 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.529415 mul 0.160784 add exch dup 0.230000 sub 0.000000 mul 0.686275 add exch dup 0.230000 sub 1.176472 mul 0.819608 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274508 mul 0.196078 add exch dup 0.240000 sub -0.392157 mul 0.686275 add exch dup 0.240000 sub 2.352940 mul 0.831373 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.258824 add exch dup 0.250000 sub 0.000000 mul 0.682353 add exch dup 0.250000 sub 0.784314 mul 0.854902 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.278431 add exch dup 0.260000 sub -0.098039 mul 0.682353 add exch dup 0.260000 sub 0.294117 mul 0.862745 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.699346 mul 0.317647 add exch dup 0.300000 sub -0.130719 mul 0.678431 add exch dup 0.300000 sub 0.522876 mul 0.874510 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub 2.352942 mul 0.419608 add exch dup 0.360000 sub -0.280112 mul 0.670588 add exch dup 0.360000 sub 0.728291 mul 0.905882 add exch } if dup 0.430000 gt { exch pop exch pop exch pop dup 0.430000 sub 2.745100 mul 0.584314 add exch dup 0.430000 sub -0.196079 mul 0.650980 add exch dup 0.430000 sub 0.784314 mul 0.956863 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.168067 mul 0.639216 add exch dup 0.450000 sub -1.288515 mul 0.647059 add exch dup 0.450000 sub -0.280112 mul 0.972549 add exch } if dup 0.520000 gt { exch pop exch pop exch pop dup 0.520000 sub 0.174292 mul 0.650980 add exch dup 0.520000 sub -1.089324 mul 0.556863 add exch dup 0.520000 sub -0.217865 mul 0.952941 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub 0.065359 mul 0.666667 add exch dup 0.610000 sub -0.588235 mul 0.458824 add exch dup 0.610000 sub -0.130719 mul 0.933333 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -3.071895 mul 0.670588 add exch dup 0.670000 sub -1.568627 mul 0.423529 add exch dup 0.670000 sub -1.437908 mul 0.925490 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -2.647062 mul 0.301961 add exch dup 0.790000 sub -2.352943 mul 0.235294 add exch dup 0.790000 sub -1.372550 mul 0.752941 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.161476 mul 0.196078 add exch dup 0.830000 sub -0.830450 mul 0.141176 add exch dup 0.830000 sub -1.614763 mul 0.698039 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

60 0 obj
  3461
endobj

61 0 obj
  << /Length 62 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.184314 exch 0.003922 exch 0.490196 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 5.098040 mul 0.184314 add exch dup 0.000000 sub 6.928105 mul 0.003922 add exch dup 0.000000 sub 4.967321 mul 0.490196 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 4.052288 mul 0.337255 add exch dup 0.030000 sub 5.620915 mul 0.211765 add exch dup 0.030000 sub 3.921568 mul 0.639216 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.006536 mul 0.458824 add exch dup 0.060000 sub 3.921568 mul 0.380392 add exch dup 0.060000 sub 2.745097 mul 0.756863 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.699347 mul 0.549020 add exch dup 0.090000 sub 2.352942 mul 0.498039 add exch dup 0.090000 sub 1.699347 mul 0.839216 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.960785 mul 0.600000 add exch dup 0.120000 sub 2.745098 mul 0.568627 add exch dup 0.120000 sub 1.960785 mul 0.890196 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.633484 mul 0.619608 add exch dup 0.130000 sub 0.211161 mul 0.596078 add exch dup 0.130000 sub 0.633484 mul 0.909804 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.196078 mul 0.701961 add exch dup 0.260000 sub 0.196078 mul 0.623529 add exch dup 0.260000 sub 0.196078 mul 0.992157 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.705882 add exch dup 0.280000 sub -0.174292 mul 0.627451 add exch dup 0.280000 sub -0.392157 mul 0.996078 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.279670 mul 0.603922 add exch dup 0.370000 sub -0.206398 mul 0.611765 add exch dup 0.370000 sub -0.433437 mul 0.960784 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.360784 add exch dup 0.560000 sub -0.156863 mul 0.572549 add exch dup 0.560000 sub -0.313725 mul 0.878431 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -0.896359 mul 0.341176 add exch dup 0.610000 sub -0.280112 mul 0.564706 add exch dup 0.610000 sub -0.728291 mul 0.862745 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -1.225491 mul 0.278431 add exch dup 0.680000 sub -0.441177 mul 0.545098 add exch dup 0.680000 sub -1.029412 mul 0.811765 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -1.960782 mul 0.180392 add exch dup 0.760000 sub -0.653595 mul 0.509804 add exch dup 0.760000 sub -1.699345 mul 0.729412 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.298786 mul 0.121569 add exch dup 0.790000 sub -2.334267 mul 0.490196 add exch dup 0.790000 sub -0.971055 mul 0.678431 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.184314 exch 0.000000 exch 0.474510 exch } if pop }
endstream
endobj

62 0 obj
  2878
endobj

63 0 obj
  << /Length 64 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.117647 exch 0.015686 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 7.058825 mul 0.117647 add exch dup 0.000000 sub 10.784314 mul 0.015686 add exch dup 0.000000 sub 6.862746 mul 0.466667 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 6.078431 mul 0.258824 add exch dup 0.020000 sub 9.215687 mul 0.231373 add exch dup 0.020000 sub 5.686275 mul 0.603922 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 4.901960 mul 0.380392 add exch dup 0.040000 sub 7.647060 mul 0.415686 add exch dup 0.040000 sub 4.705882 mul 0.717647 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.725492 mul 0.478431 add exch dup 0.060000 sub 5.882353 mul 0.568627 add exch dup 0.060000 sub 3.725490 mul 0.811765 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.745097 mul 0.552941 add exch dup 0.080000 sub 4.313725 mul 0.686275 add exch dup 0.080000 sub 2.549019 mul 0.886275 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.568628 mul 0.607843 add exch dup 0.100000 sub 2.549020 mul 0.772549 add exch dup 0.100000 sub 1.568628 mul 0.937255 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.639216 add exch dup 0.120000 sub 1.568628 mul 0.823529 add exch dup 0.120000 sub 1.176471 mul 0.968627 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.120664 mul 0.650980 add exch dup 0.130000 sub 0.030166 mul 0.839216 add exch dup 0.130000 sub 0.150830 mul 0.980392 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.000000 mul 0.666667 add exch dup 0.260000 sub 0.196078 mul 0.843137 add exch dup 0.260000 sub -0.196078 mul 1.000000 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.019608 mul 0.666667 add exch dup 0.280000 sub -0.274510 mul 0.847059 add exch dup 0.280000 sub -0.588235 mul 0.996078 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub -1.176471 mul 0.564706 add exch dup 0.380000 sub -0.305011 mul 0.819608 add exch dup 0.380000 sub -0.653595 mul 0.937255 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.490196 mul 0.352941 add exch dup 0.560000 sub -0.196078 mul 0.764706 add exch dup 0.560000 sub -0.392157 mul 0.819608 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -1.045752 mul 0.333333 add exch dup 0.600000 sub -0.261438 mul 0.756863 add exch dup 0.600000 sub -0.653595 mul 0.803922 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -1.633987 mul 0.270588 add exch dup 0.660000 sub -0.457516 mul 0.741176 add exch dup 0.660000 sub -1.111111 mul 0.764706 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -2.072829 mul 0.172549 add exch dup 0.720000 sub -0.616247 mul 0.713726 add exch dup 0.720000 sub -1.400560 mul 0.698039 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.637255 mul 0.027451 add exch dup 0.790000 sub -3.063726 mul 0.670588 add exch dup 0.790000 sub -0.735294 mul 0.600000 add exch } if dup 0.950000 gt { exch pop exch pop exch pop dup 0.950000 sub 0.784313 mul 0.129412 add exch dup 0.950000 sub -3.607842 mul 0.180392 add exch dup 0.950000 sub -0.862745 mul 0.482353 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.439216 exch } if pop }
endstream
endobj

64 0 obj
  3464
endobj

65 0 obj
  << /Length 66 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.101961 exch 0.000000 exch 0.454902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 7.450981 mul 0.101961 add exch dup 0.000000 sub 13.333334 mul 0.000000 add exch dup 0.000000 sub 7.843140 mul 0.454902 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 3.790850 mul 0.176471 add exch dup 0.010000 sub 6.797386 mul 0.133333 add exch dup 0.010000 sub 4.052288 mul 0.533333 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 4.705882 mul 0.290196 add exch dup 0.040000 sub 8.431374 mul 0.337255 add exch dup 0.040000 sub 5.098039 mul 0.654902 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.725490 mul 0.384314 add exch dup 0.060000 sub 6.666667 mul 0.505882 add exch dup 0.060000 sub 3.921568 mul 0.756863 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.549021 mul 0.458824 add exch dup 0.080000 sub 4.705881 mul 0.639216 add exch dup 0.080000 sub 2.745097 mul 0.835294 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.568628 mul 0.509804 add exch dup 0.100000 sub 2.745098 mul 0.733333 add exch dup 0.100000 sub 1.764706 mul 0.890196 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.541176 add exch dup 0.120000 sub 1.960785 mul 0.788235 add exch dup 0.120000 sub 1.176471 mul 0.925490 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.039216 mul 0.552941 add exch dup 0.130000 sub 0.470588 mul 0.807843 add exch dup 0.130000 sub 0.235294 mul 0.937255 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 0.653595 mul 0.549020 add exch dup 0.230000 sub -0.130719 mul 0.854902 add exch dup 0.230000 sub 0.261438 mul 0.960784 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub -0.196078 mul 0.568627 add exch dup 0.260000 sub -0.196078 mul 0.850980 add exch dup 0.260000 sub -0.280112 mul 0.968627 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.313726 mul 0.541176 add exch dup 0.400000 sub -0.313726 mul 0.823529 add exch dup 0.400000 sub -0.392157 mul 0.929412 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -1.176471 mul 0.525490 add exch dup 0.450000 sub -0.616247 mul 0.807843 add exch dup 0.450000 sub -0.840336 mul 0.909804 add exch } if dup 0.520000 gt { exch pop exch pop exch pop dup 0.520000 sub -1.089324 mul 0.443137 add exch dup 0.520000 sub -0.566449 mul 0.764706 add exch dup 0.520000 sub -0.740740 mul 0.850980 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -0.588235 mul 0.345098 add exch dup 0.610000 sub -0.326797 mul 0.713726 add exch dup 0.610000 sub -0.457516 mul 0.784314 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.993464 mul 0.309804 add exch dup 0.670000 sub -0.751634 mul 0.694118 add exch dup 0.670000 sub -1.143791 mul 0.756863 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.000000 mul 0.070588 add exch dup 0.790000 sub -3.235298 mul 0.603922 add exch dup 0.790000 sub -0.882354 mul 0.619608 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.553633 mul 0.070588 add exch dup 0.830000 sub -2.791234 mul 0.474510 add exch dup 0.830000 sub -0.922722 mul 0.584314 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

66 0 obj
  3465
endobj

67 0 obj
  << /Length 68 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.098039 exch 0.000000 exch 0.454902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 5.098040 mul 0.098039 add exch dup 0.000000 sub 8.627451 mul 0.000000 add exch dup 0.000000 sub 5.294119 mul 0.454902 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 5.490197 mul 0.200000 add exch dup 0.020000 sub 9.803922 mul 0.172549 add exch dup 0.020000 sub 5.882353 mul 0.560784 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 4.705882 mul 0.309804 add exch dup 0.040000 sub 8.235295 mul 0.368627 add exch dup 0.040000 sub 4.901960 mul 0.678431 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.725490 mul 0.403922 add exch dup 0.060000 sub 6.274509 mul 0.533333 add exch dup 0.060000 sub 3.725490 mul 0.776471 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.549021 mul 0.478431 add exch dup 0.080000 sub 4.509803 mul 0.658824 add exch dup 0.080000 sub 2.745097 mul 0.850980 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.568628 mul 0.529412 add exch dup 0.100000 sub 2.745098 mul 0.749020 add exch dup 0.100000 sub 1.568628 mul 0.905882 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.560784 add exch dup 0.120000 sub 1.960785 mul 0.803922 add exch dup 0.120000 sub 1.176471 mul 0.937255 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.078431 mul 0.572549 add exch dup 0.130000 sub 0.392157 mul 0.823529 add exch dup 0.130000 sub 0.156863 mul 0.949020 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 0.653595 mul 0.564706 add exch dup 0.230000 sub 0.000000 mul 0.862745 add exch dup 0.230000 sub 0.261438 mul 0.964706 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub -0.301659 mul 0.584314 add exch dup 0.260000 sub -0.180995 mul 0.862745 add exch dup 0.260000 sub -0.301659 mul 0.972549 add exch } if dup 0.390000 gt { exch pop exch pop exch pop dup 0.390000 sub -0.457516 mul 0.545098 add exch dup 0.390000 sub -0.326797 mul 0.839216 add exch dup 0.390000 sub -0.457516 mul 0.933333 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -1.344538 mul 0.517647 add exch dup 0.450000 sub -0.672269 mul 0.819608 add exch dup 0.450000 sub -0.952381 mul 0.905882 add exch } if dup 0.520000 gt { exch pop exch pop exch pop dup 0.520000 sub -1.089324 mul 0.423529 add exch dup 0.520000 sub -0.522876 mul 0.772549 add exch dup 0.520000 sub -0.740740 mul 0.839216 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -0.588235 mul 0.325490 add exch dup 0.610000 sub -0.326797 mul 0.725490 add exch dup 0.610000 sub -0.457516 mul 0.772549 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.928105 mul 0.290196 add exch dup 0.670000 sub -0.653595 mul 0.705882 add exch dup 0.670000 sub -1.111111 mul 0.745098 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.098039 mul 0.058824 add exch dup 0.790000 sub -3.333337 mul 0.627451 add exch dup 0.790000 sub -0.784314 mul 0.611765 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.599769 mul 0.062745 add exch dup 0.830000 sub -2.906574 mul 0.494118 add exch dup 0.830000 sub -0.876586 mul 0.580392 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.431373 exch } if pop }
endstream
endobj

68 0 obj
  3463
endobj

69 0 obj
  << /Length 70 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.113725 exch 0.000000 exch 0.458824 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.333333 mul 0.113725 add exch dup 0.000000 sub 7.058824 mul 0.000000 add exch dup 0.000000 sub 4.117649 mul 0.458824 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 3.267974 mul 0.180392 add exch dup 0.020000 sub 6.797385 mul 0.141176 add exch dup 0.020000 sub 4.052287 mul 0.541176 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 3.725490 mul 0.278431 add exch dup 0.050000 sub 8.039217 mul 0.345098 add exch dup 0.050000 sub 4.705882 mul 0.662745 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 1.830065 mul 0.352941 add exch dup 0.070000 sub 3.921568 mul 0.505882 add exch dup 0.070000 sub 2.222222 mul 0.756863 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.764706 mul 0.407843 add exch dup 0.100000 sub 3.529412 mul 0.623529 add exch dup 0.100000 sub 1.960785 mul 0.823529 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.443137 add exch dup 0.120000 sub 2.352942 mul 0.694118 add exch dup 0.120000 sub 1.568628 mul 0.862745 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.235294 mul 0.454902 add exch dup 0.130000 sub 0.901961 mul 0.717647 add exch dup 0.130000 sub 0.392157 mul 0.878431 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.529415 mul 0.431373 add exch dup 0.230000 sub -0.392157 mul 0.807843 add exch dup 0.230000 sub 1.176472 mul 0.917647 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 0.980392 mul 0.466667 add exch dup 0.240000 sub 0.000000 mul 0.803922 add exch dup 0.240000 sub 0.392157 mul 0.929412 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.326798 mul 0.486275 add exch dup 0.260000 sub -0.163399 mul 0.803922 add exch dup 0.260000 sub -0.032680 mul 0.937255 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub 0.448179 mul 0.525490 add exch dup 0.380000 sub -0.280112 mul 0.784314 add exch dup 0.380000 sub -0.056022 mul 0.933333 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.784313 mul 0.556863 add exch dup 0.450000 sub -0.784313 mul 0.764706 add exch dup 0.450000 sub -0.588235 mul 0.929412 add exch } if dup 0.470000 gt { exch pop exch pop exch pop dup 0.470000 sub -0.784314 mul 0.541176 add exch dup 0.470000 sub -0.816994 mul 0.749020 add exch dup 0.470000 sub -0.686275 mul 0.917647 add exch } if dup 0.590000 gt { exch pop exch pop exch pop dup 0.590000 sub -0.441176 mul 0.447059 add exch dup 0.590000 sub -0.441176 mul 0.650980 add exch dup 0.590000 sub -0.392157 mul 0.835294 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.287581 mul 0.411765 add exch dup 0.670000 sub -0.947712 mul 0.615686 add exch dup 0.670000 sub -1.209150 mul 0.803922 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.784315 mul 0.137255 add exch dup 0.790000 sub -3.039219 mul 0.501961 add exch dup 0.790000 sub -0.980393 mul 0.658824 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.346021 mul 0.105882 add exch dup 0.830000 sub -2.237601 mul 0.380392 add exch dup 0.830000 sub -1.130334 mul 0.619608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

70 0 obj
  3463
endobj

71 0 obj
  << /Length 72 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.098039 exch 0.000000 exch 0.454902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 5.686275 mul 0.098039 add exch dup 0.000000 sub 9.803922 mul 0.000000 add exch dup 0.000000 sub 5.882354 mul 0.454902 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 5.490197 mul 0.211765 add exch dup 0.020000 sub 9.607843 mul 0.196078 add exch dup 0.020000 sub 5.686275 mul 0.572549 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 4.705882 mul 0.321569 add exch dup 0.040000 sub 8.039217 mul 0.388235 add exch dup 0.040000 sub 4.901960 mul 0.686275 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.529412 mul 0.415686 add exch dup 0.060000 sub 6.274509 mul 0.549020 add exch dup 0.060000 sub 3.725490 mul 0.784314 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.549021 mul 0.486275 add exch dup 0.080000 sub 4.509803 mul 0.674510 add exch dup 0.080000 sub 2.549019 mul 0.858824 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.568628 mul 0.537255 add exch dup 0.100000 sub 2.549020 mul 0.764706 add exch dup 0.100000 sub 1.568628 mul 0.909804 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.568627 add exch dup 0.120000 sub 1.960785 mul 0.815686 add exch dup 0.120000 sub 1.176471 mul 0.941176 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.078431 mul 0.580392 add exch dup 0.130000 sub 0.313725 mul 0.835294 add exch dup 0.130000 sub 0.156863 mul 0.952941 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 0.653595 mul 0.572549 add exch dup 0.230000 sub 0.000000 mul 0.866667 add exch dup 0.230000 sub 0.261438 mul 0.968627 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub -0.326797 mul 0.592157 add exch dup 0.260000 sub -0.196078 mul 0.866667 add exch dup 0.260000 sub -0.294118 mul 0.976471 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub -0.504202 mul 0.552941 add exch dup 0.380000 sub -0.280112 mul 0.843137 add exch dup 0.380000 sub -0.504202 mul 0.941176 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -1.323530 mul 0.517647 add exch dup 0.450000 sub -0.588235 mul 0.823529 add exch dup 0.450000 sub -0.882353 mul 0.905882 add exch } if dup 0.530000 gt { exch pop exch pop exch pop dup 0.530000 sub -1.089324 mul 0.411765 add exch dup 0.530000 sub -0.522876 mul 0.776471 add exch dup 0.530000 sub -0.784313 mul 0.835294 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.705882 mul 0.313726 add exch dup 0.620000 sub -0.313725 mul 0.729412 add exch dup 0.620000 sub -0.470588 mul 0.764706 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.895425 mul 0.278431 add exch dup 0.670000 sub -0.653595 mul 0.713726 add exch dup 0.670000 sub -1.111111 mul 0.741176 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.196079 mul 0.050980 add exch dup 0.790000 sub -3.235297 mul 0.635294 add exch dup 0.790000 sub -0.784314 mul 0.607843 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.622837 mul 0.058824 add exch dup 0.830000 sub -2.975778 mul 0.505882 add exch dup 0.830000 sub -0.853518 mul 0.576471 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.431373 exch } if pop }
endstream
endobj

72 0 obj
  3463
endobj

73 0 obj
  << /Length 74 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.105882 exch 0.011765 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 6.470588 mul 0.105882 add exch dup 0.000000 sub 10.980392 mul 0.011765 add exch dup 0.000000 sub 6.470590 mul 0.462745 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 5.490197 mul 0.235294 add exch dup 0.020000 sub 9.411765 mul 0.231373 add exch dup 0.020000 sub 5.686275 mul 0.592157 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 4.705882 mul 0.345098 add exch dup 0.040000 sub 7.843138 mul 0.419608 add exch dup 0.040000 sub 4.705882 mul 0.705882 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.529413 mul 0.439216 add exch dup 0.060000 sub 5.882353 mul 0.576471 add exch dup 0.060000 sub 3.529412 mul 0.800000 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.549019 mul 0.509804 add exch dup 0.080000 sub 4.313725 mul 0.694118 add exch dup 0.080000 sub 2.549019 mul 0.870588 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.372549 mul 0.560784 add exch dup 0.100000 sub 2.745098 mul 0.780392 add exch dup 0.100000 sub 1.568628 mul 0.921569 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.588235 add exch dup 0.120000 sub 1.568628 mul 0.835294 add exch dup 0.120000 sub 1.176471 mul 0.952941 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.078431 mul 0.600000 add exch dup 0.130000 sub 0.274510 mul 0.850980 add exch dup 0.130000 sub 0.117647 mul 0.964706 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 0.522876 mul 0.592157 add exch dup 0.230000 sub 0.000000 mul 0.878431 add exch dup 0.230000 sub 0.130719 mul 0.976471 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub -0.435730 mul 0.607843 add exch dup 0.260000 sub -0.217865 mul 0.878431 add exch dup 0.260000 sub -0.348584 mul 0.980392 add exch } if dup 0.350000 gt { exch pop exch pop exch pop dup 0.350000 sub -0.588235 mul 0.568627 add exch dup 0.350000 sub -0.274510 mul 0.858824 add exch dup 0.350000 sub -0.470588 mul 0.949020 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -1.470589 mul 0.509804 add exch dup 0.450000 sub -0.588235 mul 0.831373 add exch dup 0.450000 sub -0.980392 mul 0.901961 add exch } if dup 0.530000 gt { exch pop exch pop exch pop dup 0.530000 sub -1.089324 mul 0.392157 add exch dup 0.530000 sub -0.435730 mul 0.784314 add exch dup 0.530000 sub -0.784313 mul 0.823529 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.705882 mul 0.294118 add exch dup 0.620000 sub -0.313725 mul 0.745098 add exch dup 0.620000 sub -0.470588 mul 0.752941 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.830065 mul 0.258824 add exch dup 0.670000 sub -0.588235 mul 0.729412 add exch dup 0.670000 sub -1.078431 mul 0.729412 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.392157 mul 0.039216 add exch dup 0.790000 sub -3.431376 mul 0.658824 add exch dup 0.790000 sub -0.784314 mul 0.600000 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.645905 mul 0.054902 add exch dup 0.830000 sub -3.068051 mul 0.521569 add exch dup 0.830000 sub -0.807382 mul 0.568627 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.431373 exch } if pop }
endstream
endobj

74 0 obj
  3464
endobj

75 0 obj
  << /Length 76 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.321569 exch 0.000000 exch 0.537255 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.372549 mul 0.321569 add exch dup 0.000000 sub 0.784314 mul 0.000000 add exch dup 0.000000 sub 1.372549 mul 0.537255 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 1.925134 mul 0.349020 add exch dup 0.020000 sub 0.962567 mul 0.015686 add exch dup 0.020000 sub 1.925134 mul 0.564706 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.568627 mul 0.560784 add exch dup 0.130000 sub 0.573152 mul 0.121569 add exch dup 0.130000 sub 1.538461 mul 0.776471 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.764706 add exch dup 0.260000 sub 0.392157 mul 0.196078 add exch dup 0.260000 sub 1.176470 mul 0.976471 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.784314 add exch dup 0.280000 sub -0.049020 mul 0.203922 add exch dup 0.280000 sub -0.049020 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.545560 mul 0.682353 add exch dup 0.360000 sub -0.046136 mul 0.200000 add exch dup 0.360000 sub -0.023068 mul 0.996078 add exch } if dup 0.530000 gt { exch pop exch pop exch pop dup 0.530000 sub -1.437907 mul 0.419608 add exch dup 0.530000 sub 0.000000 mul 0.192157 add exch dup 0.530000 sub 0.000000 mul 0.992157 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.112045 mul 0.376471 add exch dup 0.560000 sub -0.112045 mul 0.192157 add exch dup 0.560000 sub -0.280112 mul 0.992157 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.305011 mul 0.368627 add exch dup 0.630000 sub -0.217865 mul 0.184314 add exch dup 0.630000 sub -0.697167 mul 0.972549 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -0.504202 mul 0.341176 add exch dup 0.720000 sub -0.392157 mul 0.164706 add exch dup 0.720000 sub -1.064426 mul 0.909804 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.466853 mul 0.305882 add exch dup 0.790000 sub -0.653595 mul 0.137255 add exch dup 0.790000 sub -1.381886 mul 0.835294 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.207843 exch 0.000000 exch 0.545098 exch } if pop }
endstream
endobj

76 0 obj
  2295
endobj

77 0 obj
  << /Length 78 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.113725 exch 0.035294 exch 0.474510 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 6.666667 mul 0.113725 add exch dup 0.000000 sub 10.784315 mul 0.035294 add exch dup 0.000000 sub 6.666668 mul 0.474510 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 5.490197 mul 0.247059 add exch dup 0.020000 sub 9.411764 mul 0.250980 add exch dup 0.020000 sub 5.490196 mul 0.607843 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 4.705882 mul 0.356863 add exch dup 0.040000 sub 7.647060 mul 0.439216 add exch dup 0.040000 sub 4.705882 mul 0.717647 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.529413 mul 0.450980 add exch dup 0.060000 sub 5.882353 mul 0.592157 add exch dup 0.060000 sub 3.529412 mul 0.811765 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.549019 mul 0.521569 add exch dup 0.080000 sub 4.313725 mul 0.709804 add exch dup 0.080000 sub 2.549019 mul 0.882353 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.372549 mul 0.572549 add exch dup 0.100000 sub 2.549020 mul 0.796078 add exch dup 0.100000 sub 1.372549 mul 0.933333 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.600000 add exch dup 0.120000 sub 1.568628 mul 0.847059 add exch dup 0.120000 sub 1.176471 mul 0.960784 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.078431 mul 0.611765 add exch dup 0.130000 sub 0.196078 mul 0.862745 add exch dup 0.130000 sub 0.078431 mul 0.972549 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 0.522876 mul 0.603922 add exch dup 0.230000 sub 0.000000 mul 0.882353 add exch dup 0.230000 sub 0.130719 mul 0.980392 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub -0.435730 mul 0.619608 add exch dup 0.260000 sub -0.174292 mul 0.882353 add exch dup 0.260000 sub -0.305011 mul 0.984314 add exch } if dup 0.350000 gt { exch pop exch pop exch pop dup 0.350000 sub -0.745098 mul 0.580392 add exch dup 0.350000 sub -0.313726 mul 0.866667 add exch dup 0.350000 sub -0.588235 mul 0.956863 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -1.394335 mul 0.505882 add exch dup 0.450000 sub -0.522876 mul 0.835294 add exch dup 0.450000 sub -0.915032 mul 0.898039 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -1.225490 mul 0.380392 add exch dup 0.540000 sub -0.441177 mul 0.788235 add exch dup 0.540000 sub -0.833333 mul 0.815686 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.705882 mul 0.282353 add exch dup 0.620000 sub -0.313725 mul 0.752941 add exch dup 0.620000 sub -0.470588 mul 0.749020 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.797386 mul 0.247059 add exch dup 0.670000 sub -0.555556 mul 0.737255 add exch dup 0.670000 sub -1.078431 mul 0.725490 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.490197 mul 0.031373 add exch dup 0.790000 sub -3.431376 mul 0.670588 add exch dup 0.790000 sub -0.784314 mul 0.596078 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.668973 mul 0.050980 add exch dup 0.830000 sub -3.137255 mul 0.533333 add exch dup 0.830000 sub -0.784314 mul 0.564706 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.431373 exch } if pop }
endstream
endobj

78 0 obj
  3464
endobj

79 0 obj
  << /Length 80 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.121569 exch 0.000000 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.156863 mul 0.121569 add exch dup 0.000000 sub 5.882353 mul 0.000000 add exch dup 0.000000 sub 3.333335 mul 0.466667 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 1.862745 mul 0.164706 add exch dup 0.020000 sub 5.392158 mul 0.117647 add exch dup 0.020000 sub 2.941176 mul 0.533333 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 1.960784 mul 0.239216 add exch dup 0.060000 sub 5.098038 mul 0.333333 add exch dup 0.060000 sub 2.875816 mul 0.650980 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.176471 mul 0.298039 add exch dup 0.090000 sub 3.267975 mul 0.486275 add exch dup 0.090000 sub 1.830066 mul 0.737255 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.333333 add exch dup 0.120000 sub 3.529412 mul 0.584314 add exch dup 0.120000 sub 1.960785 mul 0.792157 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.313725 mul 0.345098 add exch dup 0.130000 sub 1.333333 mul 0.619608 add exch dup 0.130000 sub 0.627451 mul 0.811765 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.137255 mul 0.313726 add exch dup 0.230000 sub -0.196078 mul 0.752941 add exch dup 0.230000 sub 0.980392 mul 0.874510 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.376471 add exch dup 0.250000 sub 0.000000 mul 0.749020 add exch dup 0.250000 sub 0.784314 mul 0.894118 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.653595 mul 0.396078 add exch dup 0.260000 sub -0.130719 mul 0.749020 add exch dup 0.260000 sub 0.130719 mul 0.901961 add exch } if dup 0.320000 gt { exch pop exch pop exch pop dup 0.320000 sub 1.132898 mul 0.435294 add exch dup 0.320000 sub -0.174292 mul 0.741176 add exch dup 0.320000 sub 0.305011 mul 0.909804 add exch } if dup 0.410000 gt { exch pop exch pop exch pop dup 0.410000 sub 1.372549 mul 0.537255 add exch dup 0.410000 sub -0.294118 mul 0.725490 add exch dup 0.410000 sub 0.294118 mul 0.937255 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.392157 mul 0.592157 add exch dup 0.450000 sub -1.176470 mul 0.713726 add exch dup 0.450000 sub -0.588235 mul 0.949020 add exch } if dup 0.490000 gt { exch pop exch pop exch pop dup 0.490000 sub -0.356506 mul 0.576471 add exch dup 0.490000 sub -0.891265 mul 0.666667 add exch dup 0.490000 sub -0.427807 mul 0.925490 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.168067 mul 0.537255 add exch dup 0.600000 sub -0.504202 mul 0.568627 add exch dup 0.600000 sub -0.280112 mul 0.878431 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.614379 mul 0.525490 add exch dup 0.670000 sub -1.241830 mul 0.533333 add exch dup 0.670000 sub -1.339869 mul 0.858824 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.666668 mul 0.211765 add exch dup 0.790000 sub -2.745100 mul 0.384314 add exch dup 0.790000 sub -1.078432 mul 0.698039 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.138408 mul 0.145098 add exch dup 0.830000 sub -1.614763 mul 0.274510 add exch dup 0.830000 sub -1.361015 mul 0.654902 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

80 0 obj
  3462
endobj

81 0 obj
  << /Length 82 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.129412 exch 0.000000 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 7.843137 mul 0.129412 add exch dup 0.000000 sub 11.372549 mul 0.000000 add exch dup 0.000000 sub 7.450983 mul 0.466667 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 6.470589 mul 0.207843 add exch dup 0.010000 sub 10.000001 mul 0.113725 add exch dup 0.010000 sub 6.274509 mul 0.541176 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 3.660131 mul 0.337255 add exch dup 0.030000 sub 5.490196 mul 0.313726 add exch dup 0.030000 sub 3.529412 mul 0.666667 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 4.313727 mul 0.447059 add exch dup 0.060000 sub 6.470590 mul 0.478431 add exch dup 0.060000 sub 4.117647 mul 0.772549 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.941176 mul 0.533333 add exch dup 0.080000 sub 4.509803 mul 0.607843 add exch dup 0.080000 sub 2.941176 mul 0.854902 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.960785 mul 0.592157 add exch dup 0.100000 sub 2.745098 mul 0.698039 add exch dup 0.100000 sub 1.764706 mul 0.913725 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.631373 add exch dup 0.120000 sub 1.960785 mul 0.752941 add exch dup 0.120000 sub 1.176471 mul 0.949020 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.271493 mul 0.643137 add exch dup 0.130000 sub 0.090498 mul 0.772549 add exch dup 0.130000 sub 0.271493 mul 0.960784 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.000000 mul 0.678431 add exch dup 0.260000 sub 0.000000 mul 0.784314 add exch dup 0.260000 sub 0.000000 mul 0.996078 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.019608 mul 0.678431 add exch dup 0.280000 sub -0.235294 mul 0.784314 add exch dup 0.280000 sub -0.509804 mul 0.996078 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub -1.220044 mul 0.576471 add exch dup 0.380000 sub -0.283224 mul 0.760784 add exch dup 0.380000 sub -0.610022 mul 0.945098 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.356863 add exch dup 0.560000 sub -0.156863 mul 0.709804 add exch dup 0.560000 sub -0.313725 mul 0.835294 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.254902 mul 0.337255 add exch dup 0.610000 sub -0.313725 mul 0.701961 add exch dup 0.610000 sub -0.862745 mul 0.819608 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -1.400560 mul 0.274510 add exch dup 0.660000 sub -0.448179 mul 0.686275 add exch dup 0.660000 sub -0.952381 mul 0.776471 add exch } if dup 0.730000 gt { exch pop exch pop exch pop dup 0.730000 sub -2.091503 mul 0.176471 add exch dup 0.730000 sub -0.588235 mul 0.654902 add exch dup 0.730000 sub -1.503268 mul 0.709804 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.576701 mul 0.050980 add exch dup 0.790000 sub -2.883507 mul 0.619608 add exch dup 0.790000 sub -0.784314 mul 0.619608 add exch } if dup 0.960000 gt { exch pop exch pop exch pop dup 0.960000 sub 0.588235 mul 0.149020 add exch dup 0.960000 sub -3.235293 mul 0.129412 add exch dup 0.960000 sub -0.882352 mul 0.486275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.172549 exch 0.000000 exch 0.450980 exch } if pop }
endstream
endobj

82 0 obj
  3464
endobj

83 0 obj
  << /Length 84 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.129412 exch 0.054902 exch 0.486275 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 6.470589 mul 0.129412 add exch dup 0.000000 sub 10.784315 mul 0.054902 add exch dup 0.000000 sub 6.470590 mul 0.486275 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 5.490196 mul 0.258824 add exch dup 0.020000 sub 9.215686 mul 0.270588 add exch dup 0.020000 sub 5.490196 mul 0.615686 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 4.509804 mul 0.368627 add exch dup 0.040000 sub 7.450982 mul 0.454902 add exch dup 0.040000 sub 4.509804 mul 0.725490 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.529413 mul 0.458824 add exch dup 0.060000 sub 5.882353 mul 0.603922 add exch dup 0.060000 sub 3.529412 mul 0.815686 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.549019 mul 0.529412 add exch dup 0.080000 sub 4.117646 mul 0.721569 add exch dup 0.080000 sub 2.549019 mul 0.886275 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.372549 mul 0.580392 add exch dup 0.100000 sub 2.549020 mul 0.803922 add exch dup 0.100000 sub 1.372549 mul 0.937255 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.607843 add exch dup 0.120000 sub 1.568628 mul 0.854902 add exch dup 0.120000 sub 1.176471 mul 0.964706 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.039216 mul 0.619608 add exch dup 0.130000 sub 0.156863 mul 0.870588 add exch dup 0.130000 sub 0.078431 mul 0.976471 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 0.392157 mul 0.615686 add exch dup 0.230000 sub 0.000000 mul 0.886275 add exch dup 0.230000 sub 0.130719 mul 0.984314 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub -0.490196 mul 0.627451 add exch dup 0.260000 sub -0.196078 mul 0.886275 add exch dup 0.260000 sub -0.343137 mul 0.988235 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub -0.784314 mul 0.588235 add exch dup 0.340000 sub -0.285205 mul 0.870588 add exch dup 0.340000 sub -0.570410 mul 0.960784 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -1.437908 mul 0.501961 add exch dup 0.450000 sub -0.522876 mul 0.839216 add exch dup 0.450000 sub -0.958605 mul 0.898039 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -1.225490 mul 0.372549 add exch dup 0.540000 sub -0.441177 mul 0.792157 add exch dup 0.540000 sub -0.833333 mul 0.811765 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.705882 mul 0.274510 add exch dup 0.620000 sub -0.235294 mul 0.756863 add exch dup 0.620000 sub -0.470588 mul 0.745098 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.764706 mul 0.239216 add exch dup 0.670000 sub -0.555556 mul 0.745098 add exch dup 0.670000 sub -1.078431 mul 0.721569 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.490197 mul 0.027451 add exch dup 0.790000 sub -3.431376 mul 0.678431 add exch dup 0.790000 sub -0.784314 mul 0.592157 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.692042 mul 0.047059 add exch dup 0.830000 sub -3.183391 mul 0.541176 add exch dup 0.830000 sub -0.761246 mul 0.560784 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.431373 exch } if pop }
endstream
endobj

84 0 obj
  3464
endobj

85 0 obj
  << /Length 86 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.145098 exch 0.000000 exch 0.474510 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.043573 mul 0.145098 add exch dup 0.000000 sub 3.267974 mul 0.000000 add exch dup 0.000000 sub 1.655774 mul 0.474510 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 0.000000 mul 0.141176 add exch dup 0.090000 sub 3.333334 mul 0.294118 add exch dup 0.090000 sub 1.666667 mul 0.623529 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.549020 mul 0.141176 add exch dup 0.130000 sub 2.274510 mul 0.427451 add exch dup 0.130000 sub 1.019608 mul 0.690196 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 5.490202 mul 0.086275 add exch dup 0.230000 sub -0.392157 mul 0.654902 add exch dup 0.230000 sub 1.960786 mul 0.792157 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274506 mul 0.141176 add exch dup 0.240000 sub -0.392157 mul 0.650980 add exch dup 0.240000 sub 1.960783 mul 0.811765 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.203922 add exch dup 0.250000 sub 0.000000 mul 0.647059 add exch dup 0.250000 sub 0.784314 mul 0.831373 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.307190 mul 0.223529 add exch dup 0.260000 sub -0.130719 mul 0.647059 add exch dup 0.260000 sub 0.392157 mul 0.839216 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 2.039215 mul 0.262745 add exch dup 0.290000 sub -0.156863 mul 0.643137 add exch dup 0.290000 sub 0.705882 mul 0.850980 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub 2.352942 mul 0.364706 add exch dup 0.340000 sub -0.168067 mul 0.635294 add exch dup 0.340000 sub 0.784314 mul 0.886275 add exch } if dup 0.410000 gt { exch pop exch pop exch pop dup 0.410000 sub 3.235295 mul 0.529412 add exch dup 0.410000 sub -0.196078 mul 0.623529 add exch dup 0.410000 sub 1.078431 mul 0.941176 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.490196 mul 0.658824 add exch dup 0.450000 sub -1.372549 mul 0.615686 add exch dup 0.450000 sub -0.147059 mul 0.984314 add exch } if dup 0.530000 gt { exch pop exch pop exch pop dup 0.530000 sub 0.392157 mul 0.698039 add exch dup 0.530000 sub -1.089324 mul 0.505882 add exch dup 0.530000 sub -0.087146 mul 0.972549 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub 0.235294 mul 0.733333 add exch dup 0.620000 sub -0.705882 mul 0.407843 add exch dup 0.620000 sub -0.078431 mul 0.964706 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -3.300653 mul 0.745098 add exch dup 0.670000 sub -1.732026 mul 0.372549 add exch dup 0.670000 sub -1.503268 mul 0.960784 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -3.137258 mul 0.349020 add exch dup 0.790000 sub -2.254904 mul 0.164706 add exch dup 0.790000 sub -1.470590 mul 0.780392 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.322953 mul 0.223529 add exch dup 0.830000 sub -0.438293 mul 0.074510 add exch dup 0.830000 sub -1.776240 mul 0.721569 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.419608 exch } if pop }
endstream
endobj

86 0 obj
  3269
endobj

87 0 obj
  << /Length 88 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.094118 exch 0.000000 exch 0.450980 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 4.705883 mul 0.094118 add exch dup 0.000000 sub 7.843138 mul 0.000000 add exch dup 0.000000 sub 4.705882 mul 0.450980 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 12.941177 mul 0.141176 add exch dup 0.010000 sub 20.784315 mul 0.078431 add exch dup 0.010000 sub 12.549022 mul 0.498039 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 5.490196 mul 0.270588 add exch dup 0.020000 sub 9.019608 mul 0.286275 add exch dup 0.020000 sub 5.490196 mul 0.623529 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 4.509804 mul 0.380392 add exch dup 0.040000 sub 7.450982 mul 0.466667 add exch dup 0.040000 sub 4.509804 mul 0.733333 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.529413 mul 0.470588 add exch dup 0.060000 sub 5.686275 mul 0.615686 add exch dup 0.060000 sub 3.529412 mul 0.823529 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.549019 mul 0.541176 add exch dup 0.080000 sub 4.117646 mul 0.729412 add exch dup 0.080000 sub 2.549019 mul 0.894118 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.372549 mul 0.592157 add exch dup 0.100000 sub 2.549020 mul 0.811765 add exch dup 0.100000 sub 1.372549 mul 0.945098 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.619608 add exch dup 0.120000 sub 1.568628 mul 0.862745 add exch dup 0.120000 sub 1.176471 mul 0.972549 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.039216 mul 0.631373 add exch dup 0.130000 sub 0.117647 mul 0.878431 add exch dup 0.130000 sub 0.039216 mul 0.984314 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 0.261438 mul 0.627451 add exch dup 0.230000 sub 0.000000 mul 0.890196 add exch dup 0.230000 sub 0.130719 mul 0.988235 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub -0.560224 mul 0.635294 add exch dup 0.260000 sub -0.168067 mul 0.890196 add exch dup 0.260000 sub -0.392157 mul 0.992157 add exch } if dup 0.330000 gt { exch pop exch pop exch pop dup 0.330000 sub -0.816994 mul 0.596078 add exch dup 0.330000 sub -0.261438 mul 0.878431 add exch dup 0.330000 sub -0.588235 mul 0.964706 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -1.525054 mul 0.498039 add exch dup 0.450000 sub -0.522876 mul 0.847059 add exch dup 0.450000 sub -1.002178 mul 0.894118 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -1.225490 mul 0.360784 add exch dup 0.540000 sub -0.441177 mul 0.800000 add exch dup 0.540000 sub -0.784314 mul 0.803922 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.705882 mul 0.262745 add exch dup 0.620000 sub -0.235294 mul 0.764706 add exch dup 0.620000 sub -0.470588 mul 0.741176 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.732026 mul 0.227451 add exch dup 0.670000 sub -0.522876 mul 0.752941 add exch dup 0.670000 sub -1.078431 mul 0.717647 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.588236 mul 0.019608 add exch dup 0.790000 sub -3.431376 mul 0.690196 add exch dup 0.790000 sub -0.686275 mul 0.588235 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.715110 mul 0.043137 add exch dup 0.830000 sub -3.252595 mul 0.552941 add exch dup 0.830000 sub -0.761246 mul 0.560784 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.431373 exch } if pop }
endstream
endobj

88 0 obj
  3660
endobj

89 0 obj
  << /Length 90 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.113725 exch 0.000000 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.137255 mul 0.113725 add exch dup 0.000000 sub 7.058824 mul 0.000000 add exch dup 0.000000 sub 3.921571 mul 0.462745 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 3.267974 mul 0.145098 add exch dup 0.010000 sub 7.320262 mul 0.070588 add exch dup 0.010000 sub 4.183006 mul 0.501961 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 2.614379 mul 0.243137 add exch dup 0.040000 sub 5.751634 mul 0.290196 add exch dup 0.040000 sub 3.398692 mul 0.627451 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 1.830065 mul 0.321569 add exch dup 0.070000 sub 4.183007 mul 0.462745 add exch dup 0.070000 sub 2.352941 mul 0.729412 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.764706 mul 0.376471 add exch dup 0.100000 sub 3.725491 mul 0.588235 add exch dup 0.100000 sub 2.156863 mul 0.800000 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.411765 add exch dup 0.120000 sub 2.745098 mul 0.662745 add exch dup 0.120000 sub 1.568628 mul 0.843137 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.235294 mul 0.423529 add exch dup 0.130000 sub 1.019608 mul 0.690196 add exch dup 0.130000 sub 0.470588 mul 0.858824 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 2.156863 mul 0.400000 add exch dup 0.230000 sub -0.196078 mul 0.792157 add exch dup 0.230000 sub 0.784314 mul 0.905882 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.443137 add exch dup 0.250000 sub 0.000000 mul 0.788235 add exch dup 0.250000 sub 0.784314 mul 0.921569 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.435730 mul 0.462745 add exch dup 0.260000 sub -0.174292 mul 0.788235 add exch dup 0.260000 sub 0.000000 mul 0.929412 add exch } if dup 0.350000 gt { exch pop exch pop exch pop dup 0.350000 sub 0.666667 mul 0.501961 add exch dup 0.350000 sub -0.235294 mul 0.772549 add exch dup 0.350000 sub 0.039216 mul 0.929412 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.653595 mul 0.568627 add exch dup 0.450000 sub -0.784314 mul 0.749020 add exch dup 0.450000 sub -0.522876 mul 0.933333 add exch } if dup 0.480000 gt { exch pop exch pop exch pop dup 0.480000 sub -0.653595 mul 0.549020 add exch dup 0.480000 sub -0.816993 mul 0.725490 add exch dup 0.480000 sub -0.588235 mul 0.917647 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.392157 mul 0.470588 add exch dup 0.600000 sub -0.504202 mul 0.627451 add exch dup 0.600000 sub -0.392157 mul 0.847059 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.385621 mul 0.443137 add exch dup 0.670000 sub -1.045752 mul 0.592157 add exch dup 0.670000 sub -1.241830 mul 0.819608 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.980393 mul 0.156863 add exch dup 0.790000 sub -2.843140 mul 0.466667 add exch dup 0.790000 sub -1.078432 mul 0.670588 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.276817 mul 0.117647 add exch dup 0.830000 sub -2.076124 mul 0.352941 add exch dup 0.830000 sub -1.176471 mul 0.627451 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

90 0 obj
  3461
endobj

91 0 obj
  << /Length 92 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.094118 exch 0.000000 exch 0.450980 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 5.882353 mul 0.094118 add exch dup 0.000000 sub 9.803922 mul 0.000000 add exch dup 0.000000 sub 5.882356 mul 0.450980 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 6.470589 mul 0.152941 add exch dup 0.010000 sub 10.392158 mul 0.098039 add exch dup 0.010000 sub 6.274509 mul 0.509804 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 10.980392 mul 0.282353 add exch dup 0.030000 sub 17.647058 mul 0.305882 add exch dup 0.030000 sub 10.980392 mul 0.635294 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 4.313725 mul 0.392157 add exch dup 0.040000 sub 7.254903 mul 0.482353 add exch dup 0.040000 sub 4.313725 mul 0.745098 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.529413 mul 0.478431 add exch dup 0.060000 sub 5.686275 mul 0.627451 add exch dup 0.060000 sub 3.529412 mul 0.831373 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.549019 mul 0.549020 add exch dup 0.080000 sub 4.117646 mul 0.741176 add exch dup 0.080000 sub 2.352941 mul 0.901961 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.372549 mul 0.600000 add exch dup 0.100000 sub 2.352942 mul 0.823529 add exch dup 0.100000 sub 1.568628 mul 0.949020 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.627451 add exch dup 0.120000 sub 1.568628 mul 0.870588 add exch dup 0.120000 sub 0.784314 mul 0.980392 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.039216 mul 0.639216 add exch dup 0.130000 sub 0.117647 mul 0.886275 add exch dup 0.130000 sub 0.039216 mul 0.988235 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 0.261438 mul 0.635294 add exch dup 0.230000 sub 0.000000 mul 0.898039 add exch dup 0.230000 sub 0.000000 mul 0.992157 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub -0.560224 mul 0.643137 add exch dup 0.260000 sub -0.168067 mul 0.898039 add exch dup 0.260000 sub -0.392157 mul 0.992157 add exch } if dup 0.330000 gt { exch pop exch pop exch pop dup 0.330000 sub -0.882353 mul 0.603922 add exch dup 0.330000 sub -0.294118 mul 0.886275 add exch dup 0.330000 sub -0.588235 mul 0.964706 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -1.655773 mul 0.498039 add exch dup 0.450000 sub -0.522876 mul 0.850980 add exch dup 0.450000 sub -1.089324 mul 0.894118 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -1.225490 mul 0.349020 add exch dup 0.540000 sub -0.392157 mul 0.803922 add exch dup 0.540000 sub -0.784314 mul 0.796078 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.705882 mul 0.250980 add exch dup 0.620000 sub -0.235294 mul 0.772549 add exch dup 0.620000 sub -0.470588 mul 0.733333 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.699346 mul 0.215686 add exch dup 0.670000 sub -0.490196 mul 0.760784 add exch dup 0.670000 sub -1.045752 mul 0.709804 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.686275 mul 0.011765 add exch dup 0.790000 sub -3.529415 mul 0.701961 add exch dup 0.790000 sub -0.686275 mul 0.584314 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.738178 mul 0.039216 add exch dup 0.830000 sub -3.298731 mul 0.560784 add exch dup 0.830000 sub -0.738178 mul 0.556863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.431373 exch } if pop }
endstream
endobj

92 0 obj
  3661
endobj

93 0 obj
  << /Length 94 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.137255 exch 0.000000 exch 0.470588 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.392157 mul 0.137255 add exch dup 0.000000 sub 2.745098 mul 0.000000 add exch dup 0.000000 sub 1.568627 mul 0.470588 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 0.784314 mul 0.141176 add exch dup 0.010000 sub 4.313725 mul 0.027451 add exch dup 0.010000 sub 2.287582 mul 0.486275 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 0.686274 mul 0.188235 add exch dup 0.070000 sub 4.019608 mul 0.286275 add exch dup 0.070000 sub 2.156863 mul 0.623529 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 0.588235 mul 0.215686 add exch dup 0.110000 sub 3.137257 mul 0.447059 add exch dup 0.110000 sub 1.568628 mul 0.709804 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.431372 mul 0.227451 add exch dup 0.130000 sub 1.882353 mul 0.509804 add exch dup 0.130000 sub 0.862745 mul 0.741176 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.137258 mul 0.184314 add exch dup 0.230000 sub -0.392157 mul 0.698039 add exch dup 0.230000 sub 1.176472 mul 0.827451 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274508 mul 0.215686 add exch dup 0.240000 sub -0.392157 mul 0.694118 add exch dup 0.240000 sub 1.960783 mul 0.839216 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.278431 add exch dup 0.250000 sub 0.000000 mul 0.690196 add exch dup 0.250000 sub 0.784314 mul 0.858824 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.298039 add exch dup 0.260000 sub -0.098039 mul 0.690196 add exch dup 0.260000 sub 0.294117 mul 0.866667 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.699346 mul 0.337255 add exch dup 0.300000 sub -0.130719 mul 0.686275 add exch dup 0.300000 sub 0.522876 mul 0.878431 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub 2.058824 mul 0.439216 add exch dup 0.360000 sub -0.196078 mul 0.678431 add exch dup 0.360000 sub 0.637255 mul 0.909804 add exch } if dup 0.440000 gt { exch pop exch pop exch pop dup 0.440000 sub 2.745100 mul 0.603922 add exch dup 0.440000 sub -0.392157 mul 0.662745 add exch dup 0.440000 sub 0.784314 mul 0.960784 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.112045 mul 0.631373 add exch dup 0.450000 sub -1.232493 mul 0.658824 add exch dup 0.450000 sub -0.280112 mul 0.968627 add exch } if dup 0.520000 gt { exch pop exch pop exch pop dup 0.520000 sub 0.087146 mul 0.639216 add exch dup 0.520000 sub -1.089324 mul 0.572549 add exch dup 0.520000 sub -0.261438 mul 0.949020 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub 0.065359 mul 0.647059 add exch dup 0.610000 sub -0.588235 mul 0.474510 add exch dup 0.610000 sub -0.130719 mul 0.925490 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -3.006536 mul 0.650980 add exch dup 0.670000 sub -1.503268 mul 0.439216 add exch dup 0.670000 sub -1.437908 mul 0.917647 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -2.549022 mul 0.290196 add exch dup 0.790000 sub -2.450983 mul 0.258824 add exch dup 0.790000 sub -1.274511 mul 0.745098 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.115340 mul 0.188235 add exch dup 0.830000 sub -0.945790 mul 0.160784 add exch dup 0.830000 sub -1.591695 mul 0.694118 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

94 0 obj
  3656
endobj

95 0 obj
  << /Length 96 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.117647 exch 0.000000 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.137255 mul 0.117647 add exch dup 0.000000 sub 7.581699 mul 0.000000 add exch dup 0.000000 sub 4.313726 mul 0.462745 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 2.058824 mul 0.211765 add exch dup 0.030000 sub 4.705883 mul 0.227451 add exch dup 0.030000 sub 2.745098 mul 0.592157 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 2.745097 mul 0.294118 add exch dup 0.070000 sub 6.666667 mul 0.415686 add exch dup 0.070000 sub 3.921568 mul 0.701961 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.176471 mul 0.349020 add exch dup 0.090000 sub 2.745098 mul 0.549020 add exch dup 0.090000 sub 1.568628 mul 0.780392 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.384314 add exch dup 0.120000 sub 3.137255 mul 0.631373 add exch dup 0.120000 sub 1.568628 mul 0.827451 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.274510 mul 0.396078 add exch dup 0.130000 sub 1.137255 mul 0.662745 add exch dup 0.130000 sub 0.509804 mul 0.843137 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 2.352942 mul 0.368627 add exch dup 0.230000 sub -0.196078 mul 0.776471 add exch dup 0.230000 sub 0.784314 mul 0.894118 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.415686 add exch dup 0.250000 sub 0.000000 mul 0.772549 add exch dup 0.250000 sub 0.784314 mul 0.909804 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.560224 mul 0.435294 add exch dup 0.260000 sub -0.112045 mul 0.772549 add exch dup 0.260000 sub 0.056022 mul 0.917647 add exch } if dup 0.330000 gt { exch pop exch pop exch pop dup 0.330000 sub 0.849674 mul 0.474510 add exch dup 0.330000 sub -0.228758 mul 0.764706 add exch dup 0.330000 sub 0.130719 mul 0.921569 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.490196 mul 0.576471 add exch dup 0.450000 sub -0.882352 mul 0.737255 add exch dup 0.450000 sub -0.490196 mul 0.937255 add exch } if dup 0.490000 gt { exch pop exch pop exch pop dup 0.490000 sub -0.534760 mul 0.556863 add exch dup 0.490000 sub -0.891265 mul 0.701961 add exch dup 0.490000 sub -0.534759 mul 0.917647 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.336134 mul 0.498039 add exch dup 0.600000 sub -0.504202 mul 0.603922 add exch dup 0.600000 sub -0.336134 mul 0.858824 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.483660 mul 0.474510 add exch dup 0.670000 sub -1.111111 mul 0.568627 add exch dup 0.670000 sub -1.274510 mul 0.835294 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.176471 add exch dup 0.790000 sub -2.843140 mul 0.435294 add exch dup 0.790000 sub -1.078432 mul 0.682353 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.207612 mul 0.129412 add exch dup 0.830000 sub -1.891580 mul 0.321569 add exch dup 0.830000 sub -1.245675 mul 0.639216 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

96 0 obj
  3267
endobj

97 0 obj
  << /Length 98 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.090196 exch 0.000000 exch 0.450980 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 7.450981 mul 0.090196 add exch dup 0.000000 sub 12.156863 mul 0.000000 add exch dup 0.000000 sub 7.450983 mul 0.450980 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 6.470589 mul 0.164706 add exch dup 0.010000 sub 10.196079 mul 0.121569 add exch dup 0.010000 sub 6.078431 mul 0.525490 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 10.980392 mul 0.294118 add exch dup 0.030000 sub 17.647060 mul 0.325490 add exch dup 0.030000 sub 10.588235 mul 0.647059 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 4.509804 mul 0.403922 add exch dup 0.040000 sub 7.058823 mul 0.501961 add exch dup 0.040000 sub 4.509804 mul 0.752941 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.333335 mul 0.494118 add exch dup 0.060000 sub 5.686275 mul 0.643137 add exch dup 0.060000 sub 3.333333 mul 0.843137 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.549019 mul 0.560784 add exch dup 0.080000 sub 3.921568 mul 0.756863 add exch dup 0.080000 sub 2.352941 mul 0.909804 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.372549 mul 0.611765 add exch dup 0.100000 sub 2.352942 mul 0.835294 add exch dup 0.100000 sub 1.568628 mul 0.956863 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.639216 add exch dup 0.120000 sub 1.568628 mul 0.882353 add exch dup 0.120000 sub 0.784314 mul 0.988235 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.039216 mul 0.650980 add exch dup 0.130000 sub 0.039216 mul 0.898039 add exch dup 0.130000 sub 0.000000 mul 0.996078 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 0.130719 mul 0.647059 add exch dup 0.230000 sub 0.000000 mul 0.901961 add exch dup 0.230000 sub 0.000000 mul 0.996078 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub -0.560224 mul 0.650980 add exch dup 0.260000 sub -0.168067 mul 0.901961 add exch dup 0.260000 sub -0.392157 mul 0.996078 add exch } if dup 0.330000 gt { exch pop exch pop exch pop dup 0.330000 sub -0.926916 mul 0.611765 add exch dup 0.330000 sub -0.285205 mul 0.890196 add exch dup 0.330000 sub -0.606061 mul 0.968627 add exch } if dup 0.440000 gt { exch pop exch pop exch pop dup 0.440000 sub -1.568632 mul 0.509804 add exch dup 0.440000 sub -0.392157 mul 0.858824 add exch dup 0.440000 sub -1.176472 mul 0.901961 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -1.529411 mul 0.494118 add exch dup 0.450000 sub -0.470588 mul 0.854902 add exch dup 0.450000 sub -0.980392 mul 0.890196 add exch } if dup 0.550000 gt { exch pop exch pop exch pop dup 0.550000 sub -1.400560 mul 0.341176 add exch dup 0.550000 sub -0.392157 mul 0.807843 add exch dup 0.550000 sub -0.896359 mul 0.792157 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.705882 mul 0.243137 add exch dup 0.620000 sub -0.235294 mul 0.780392 add exch dup 0.620000 sub -0.470588 mul 0.729412 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.666667 mul 0.207843 add exch dup 0.670000 sub -0.490196 mul 0.768627 add exch dup 0.670000 sub -1.045752 mul 0.705882 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.686275 mul 0.007843 add exch dup 0.790000 sub -3.431376 mul 0.709804 add exch dup 0.790000 sub -0.686275 mul 0.580392 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.761246 mul 0.035294 add exch dup 0.830000 sub -3.367935 mul 0.572549 add exch dup 0.830000 sub -0.715110 mul 0.552941 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.431373 exch } if pop }
endstream
endobj

98 0 obj
  3859
endobj

99 0 obj
  << /Length 100 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.129412 exch 0.000000 exch 0.470588 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.307189 mul 0.129412 add exch dup 0.000000 sub 5.098040 mul 0.000000 add exch dup 0.000000 sub 2.745099 mul 0.470588 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 1.019608 mul 0.168627 add exch dup 0.030000 sub 4.235294 mul 0.152941 add exch dup 0.030000 sub 2.274510 mul 0.552941 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 1.176471 mul 0.219608 add exch dup 0.080000 sub 4.313725 mul 0.364706 add exch dup 0.080000 sub 2.352941 mul 0.666667 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 0.588235 mul 0.254902 add exch dup 0.110000 sub 2.549021 mul 0.494118 add exch dup 0.110000 sub 1.372549 mul 0.737255 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.196079 mul 0.266667 add exch dup 0.130000 sub 1.686274 mul 0.545098 add exch dup 0.130000 sub 0.862745 mul 0.764706 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.137256 mul 0.247059 add exch dup 0.230000 sub -0.196078 mul 0.713726 add exch dup 0.230000 sub 0.980392 mul 0.850980 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.309804 add exch dup 0.250000 sub 0.000000 mul 0.709804 add exch dup 0.250000 sub 0.784314 mul 0.870588 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.329412 add exch dup 0.260000 sub -0.098039 mul 0.709804 add exch dup 0.260000 sub 0.294117 mul 0.878431 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.456583 mul 0.368627 add exch dup 0.300000 sub -0.168067 mul 0.705882 add exch dup 0.300000 sub 0.392157 mul 0.890196 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub 1.862746 mul 0.470588 add exch dup 0.370000 sub -0.245098 mul 0.694118 add exch dup 0.370000 sub 0.539216 mul 0.917647 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.065359 mul 0.619608 add exch dup 0.450000 sub -1.176471 mul 0.674510 add exch dup 0.450000 sub -0.326797 mul 0.960784 add exch } if dup 0.510000 gt { exch pop exch pop exch pop dup 0.510000 sub -0.039216 mul 0.615686 add exch dup 0.510000 sub -0.980392 mul 0.603922 add exch dup 0.510000 sub -0.313725 mul 0.941176 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub 0.000000 mul 0.611765 add exch dup 0.610000 sub -0.588236 mul 0.505882 add exch dup 0.610000 sub -0.196078 mul 0.909804 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.908497 mul 0.611765 add exch dup 0.670000 sub -1.437908 mul 0.470588 add exch dup 0.670000 sub -1.405229 mul 0.898039 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -2.156865 mul 0.262745 add exch dup 0.790000 sub -2.450983 mul 0.298039 add exch dup 0.790000 sub -1.274511 mul 0.729412 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.046136 mul 0.176471 add exch dup 0.830000 sub -1.176471 mul 0.200000 add exch dup 0.830000 sub -1.499423 mul 0.678431 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

100 0 obj
  3268
endobj

101 0 obj
  << /Length 102 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.125490 exch 0.015686 exch 0.474510 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.450980 mul 0.125490 add exch dup 0.000000 sub 5.784314 mul 0.015686 add exch dup 0.000000 sub 3.235295 mul 0.474510 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 2.614379 mul 0.223529 add exch dup 0.040000 sub 6.143791 mul 0.247059 add exch dup 0.040000 sub 3.529411 mul 0.603922 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 2.745097 mul 0.301961 add exch dup 0.070000 sub 6.470588 mul 0.431373 add exch dup 0.070000 sub 3.725489 mul 0.709804 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.176471 mul 0.356863 add exch dup 0.090000 sub 2.745098 mul 0.560784 add exch dup 0.090000 sub 1.568628 mul 0.784314 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.392157 add exch dup 0.120000 sub 2.745098 mul 0.643137 add exch dup 0.120000 sub 1.568628 mul 0.831373 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.274510 mul 0.403922 add exch dup 0.130000 sub 1.098039 mul 0.670588 add exch dup 0.130000 sub 0.509804 mul 0.847059 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 2.352942 mul 0.376471 add exch dup 0.230000 sub 0.000000 mul 0.780392 add exch dup 0.230000 sub 0.784314 mul 0.898039 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.423529 add exch dup 0.250000 sub 0.000000 mul 0.780392 add exch dup 0.250000 sub 0.784314 mul 0.913725 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.490196 mul 0.443137 add exch dup 0.260000 sub -0.147059 mul 0.780392 add exch dup 0.260000 sub 0.049020 mul 0.921569 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub 0.819965 mul 0.482353 add exch dup 0.340000 sub -0.249554 mul 0.768627 add exch dup 0.340000 sub 0.106952 mul 0.925490 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.653595 mul 0.572549 add exch dup 0.450000 sub -1.045752 mul 0.741176 add exch dup 0.450000 sub -0.653595 mul 0.937255 add exch } if dup 0.480000 gt { exch pop exch pop exch pop dup 0.480000 sub -0.522876 mul 0.552941 add exch dup 0.480000 sub -0.816993 mul 0.709804 add exch dup 0.480000 sub -0.555555 mul 0.917647 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.336134 mul 0.490196 add exch dup 0.600000 sub -0.504202 mul 0.611765 add exch dup 0.600000 sub -0.336134 mul 0.850980 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.483660 mul 0.466667 add exch dup 0.670000 sub -1.078431 mul 0.576471 add exch dup 0.670000 sub -1.241830 mul 0.827451 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.078432 mul 0.168627 add exch dup 0.790000 sub -2.843140 mul 0.447059 add exch dup 0.790000 sub -1.078432 mul 0.678431 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.230680 mul 0.125490 add exch dup 0.830000 sub -1.960784 mul 0.333333 add exch dup 0.830000 sub -1.222607 mul 0.635294 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

102 0 obj
  3266
endobj

103 0 obj
  << /Length 104 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.129412 exch 0.039216 exch 0.482353 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 6.862746 mul 0.129412 add exch dup 0.000000 sub 10.588237 mul 0.039216 add exch dup 0.000000 sub 6.666668 mul 0.482353 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 5.882353 mul 0.266667 add exch dup 0.020000 sub 9.215686 mul 0.250980 add exch dup 0.020000 sub 5.686275 mul 0.615686 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 4.901960 mul 0.384314 add exch dup 0.040000 sub 7.450982 mul 0.435294 add exch dup 0.040000 sub 4.509804 mul 0.729412 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.725492 mul 0.482353 add exch dup 0.060000 sub 5.882353 mul 0.584314 add exch dup 0.060000 sub 3.529412 mul 0.819608 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.549019 mul 0.556863 add exch dup 0.080000 sub 4.117646 mul 0.701961 add exch dup 0.080000 sub 2.745097 mul 0.890196 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.568628 mul 0.607843 add exch dup 0.100000 sub 2.549020 mul 0.784314 add exch dup 0.100000 sub 1.372549 mul 0.945098 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.639216 add exch dup 0.120000 sub 1.568628 mul 0.835294 add exch dup 0.120000 sub 1.176471 mul 0.972549 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.120664 mul 0.650980 add exch dup 0.130000 sub 0.060332 mul 0.850980 add exch dup 0.130000 sub 0.120664 mul 0.984314 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub -0.196078 mul 0.666667 add exch dup 0.260000 sub 0.000000 mul 0.858824 add exch dup 0.260000 sub -0.196078 mul 1.000000 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.019608 mul 0.662745 add exch dup 0.280000 sub -0.274510 mul 0.858824 add exch dup 0.280000 sub -0.588235 mul 0.996078 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub -1.154684 mul 0.560784 add exch dup 0.380000 sub -0.305011 mul 0.831373 add exch dup 0.380000 sub -0.675381 mul 0.937255 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.490196 mul 0.352941 add exch dup 0.560000 sub -0.196078 mul 0.776471 add exch dup 0.560000 sub -0.392157 mul 0.815686 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -1.045752 mul 0.333333 add exch dup 0.600000 sub -0.261438 mul 0.768627 add exch dup 0.600000 sub -0.653595 mul 0.800000 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -1.633987 mul 0.270588 add exch dup 0.660000 sub -0.457516 mul 0.752941 add exch dup 0.660000 sub -1.045752 mul 0.760784 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -2.184874 mul 0.172549 add exch dup 0.720000 sub -0.616247 mul 0.725490 add exch dup 0.720000 sub -1.456583 mul 0.698039 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.705883 mul 0.019608 add exch dup 0.790000 sub -3.267975 mul 0.682353 add exch dup 0.790000 sub -0.758170 mul 0.596078 add exch } if dup 0.940000 gt { exch pop exch pop exch pop dup 0.940000 sub 0.718954 mul 0.125490 add exch dup 0.940000 sub -3.202614 mul 0.192157 add exch dup 0.940000 sub -0.718954 mul 0.482353 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.439216 exch } if pop }
endstream
endobj

104 0 obj
  3465
endobj

105 0 obj
  << /Length 106 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.113725 exch 0.000000 exch 0.458824 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 6.666667 mul 0.113725 add exch dup 0.000000 sub 10.392158 mul 0.000000 add exch dup 0.000000 sub 6.470590 mul 0.458824 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 6.078432 mul 0.247059 add exch dup 0.020000 sub 9.411765 mul 0.207843 add exch dup 0.020000 sub 5.882353 mul 0.588235 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 5.098039 mul 0.368627 add exch dup 0.040000 sub 7.647060 mul 0.396078 add exch dup 0.040000 sub 4.901960 mul 0.705882 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.725492 mul 0.470588 add exch dup 0.060000 sub 6.078431 mul 0.549020 add exch dup 0.060000 sub 3.725490 mul 0.803922 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.941176 mul 0.545098 add exch dup 0.080000 sub 4.117646 mul 0.670588 add exch dup 0.080000 sub 2.745097 mul 0.878431 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.568628 mul 0.603922 add exch dup 0.100000 sub 2.745098 mul 0.752941 add exch dup 0.100000 sub 1.568628 mul 0.933333 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.635294 add exch dup 0.120000 sub 1.568628 mul 0.807843 add exch dup 0.120000 sub 1.176471 mul 0.964706 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.180995 mul 0.647059 add exch dup 0.130000 sub 0.060332 mul 0.823529 add exch dup 0.130000 sub 0.150830 mul 0.976471 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub -0.196078 mul 0.670588 add exch dup 0.260000 sub 0.196078 mul 0.831373 add exch dup 0.260000 sub 0.000000 mul 0.996078 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.019608 mul 0.666667 add exch dup 0.280000 sub -0.274510 mul 0.835294 add exch dup 0.280000 sub -0.588235 mul 0.996078 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub -1.154684 mul 0.564706 add exch dup 0.380000 sub -0.305011 mul 0.807843 add exch dup 0.380000 sub -0.631808 mul 0.937255 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.490196 mul 0.356863 add exch dup 0.560000 sub -0.098039 mul 0.752941 add exch dup 0.560000 sub -0.392157 mul 0.823529 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -1.045752 mul 0.337255 add exch dup 0.600000 sub -0.326797 mul 0.749020 add exch dup 0.600000 sub -0.653595 mul 0.807843 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -1.633987 mul 0.274510 add exch dup 0.660000 sub -0.457516 mul 0.729412 add exch dup 0.660000 sub -1.111111 mul 0.768627 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -2.072829 mul 0.176471 add exch dup 0.720000 sub -0.560224 mul 0.701961 add exch dup 0.720000 sub -1.400560 mul 0.701961 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.637255 mul 0.031373 add exch dup 0.790000 sub -3.063726 mul 0.662745 add exch dup 0.790000 sub -0.735294 mul 0.603922 add exch } if dup 0.950000 gt { exch pop exch pop exch pop dup 0.950000 sub 0.705882 mul 0.133333 add exch dup 0.950000 sub -3.450980 mul 0.172549 add exch dup 0.950000 sub -0.862745 mul 0.486275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.443137 exch } if pop }
endstream
endobj

106 0 obj
  3464
endobj

107 0 obj
  << /Length 108 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.117647 exch 0.000000 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 6.078432 mul 0.117647 add exch dup 0.000000 sub 9.411765 mul 0.000000 add exch dup 0.000000 sub 5.882354 mul 0.462745 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 6.078432 mul 0.239216 add exch dup 0.020000 sub 9.411765 mul 0.188235 add exch dup 0.020000 sub 5.882353 mul 0.580392 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 5.294117 mul 0.360784 add exch dup 0.040000 sub 7.843138 mul 0.376471 add exch dup 0.040000 sub 4.901960 mul 0.698039 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.921570 mul 0.466667 add exch dup 0.060000 sub 6.078431 mul 0.533333 add exch dup 0.060000 sub 3.921568 mul 0.796078 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.745097 mul 0.545098 add exch dup 0.080000 sub 4.313725 mul 0.654902 add exch dup 0.080000 sub 2.745097 mul 0.874510 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.764706 mul 0.600000 add exch dup 0.100000 sub 2.549020 mul 0.741176 add exch dup 0.100000 sub 1.568628 mul 0.929412 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.635294 add exch dup 0.120000 sub 1.960785 mul 0.792157 add exch dup 0.120000 sub 1.176471 mul 0.960784 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.180995 mul 0.647059 add exch dup 0.130000 sub 0.060332 mul 0.811765 add exch dup 0.130000 sub 0.180995 mul 0.972549 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.000000 mul 0.670588 add exch dup 0.260000 sub 0.000000 mul 0.819608 add exch dup 0.260000 sub 0.000000 mul 0.996078 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.019608 mul 0.670588 add exch dup 0.280000 sub -0.235294 mul 0.819608 add exch dup 0.280000 sub -0.549020 mul 0.996078 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub -1.176471 mul 0.568627 add exch dup 0.380000 sub -0.283224 mul 0.796078 add exch dup 0.380000 sub -0.631808 mul 0.941176 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.490196 mul 0.356863 add exch dup 0.560000 sub -0.196078 mul 0.745098 add exch dup 0.560000 sub -0.392157 mul 0.827451 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -1.045752 mul 0.337255 add exch dup 0.600000 sub -0.261438 mul 0.737255 add exch dup 0.600000 sub -0.653595 mul 0.811765 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -1.633987 mul 0.274510 add exch dup 0.660000 sub -0.457516 mul 0.721569 add exch dup 0.660000 sub -1.111111 mul 0.772549 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -2.016807 mul 0.176471 add exch dup 0.720000 sub -0.616247 mul 0.694118 add exch dup 0.720000 sub -1.400560 mul 0.705882 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.637255 mul 0.035294 add exch dup 0.790000 sub -3.063726 mul 0.650980 add exch dup 0.790000 sub -0.784314 mul 0.607843 add exch } if dup 0.950000 gt { exch pop exch pop exch pop dup 0.950000 sub 0.627451 mul 0.137255 add exch dup 0.950000 sub -3.215686 mul 0.160784 add exch dup 0.950000 sub -0.784313 mul 0.482353 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.443137 exch } if pop }
endstream
endobj

108 0 obj
  3462
endobj

109 0 obj
  << /Length 110 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.203922 exch 0.000000 exch 0.494118 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 5.490197 mul 0.203922 add exch dup 0.000000 sub 7.058824 mul 0.000000 add exch dup 0.000000 sub 5.490199 mul 0.494118 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 3.823529 mul 0.258824 add exch dup 0.010000 sub 4.705883 mul 0.070588 add exch dup 0.010000 sub 3.627451 mul 0.549020 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 2.745098 mul 0.411765 add exch dup 0.050000 sub 3.529411 mul 0.258824 add exch dup 0.050000 sub 2.647058 mul 0.694118 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 3.333334 mul 0.521569 add exch dup 0.090000 sub 4.117648 mul 0.400000 add exch dup 0.090000 sub 3.137255 mul 0.800000 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 1.176471 mul 0.588235 add exch dup 0.110000 sub 1.568629 mul 0.482353 add exch dup 0.110000 sub 1.176471 mul 0.862745 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.754148 mul 0.611765 add exch dup 0.130000 sub 0.301659 mul 0.513726 add exch dup 0.130000 sub 0.784314 mul 0.886275 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.588235 mul 0.709804 add exch dup 0.260000 sub 0.196078 mul 0.552941 add exch dup 0.260000 sub 0.392157 mul 0.988235 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.721569 add exch dup 0.280000 sub -0.174292 mul 0.556863 add exch dup 0.280000 sub -0.305011 mul 0.996078 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.341589 mul 0.619608 add exch dup 0.370000 sub -0.185759 mul 0.541176 add exch dup 0.370000 sub -0.371517 mul 0.968627 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.326797 mul 0.364706 add exch dup 0.560000 sub -0.130719 mul 0.505882 add exch dup 0.560000 sub -0.326797 mul 0.898039 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.896359 mul 0.345098 add exch dup 0.620000 sub -0.336134 mul 0.498039 add exch dup 0.620000 sub -0.784314 mul 0.878431 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -1.225491 mul 0.282353 add exch dup 0.690000 sub -0.441177 mul 0.474510 add exch dup 0.690000 sub -1.127451 mul 0.823529 add exch } if dup 0.770000 gt { exch pop exch pop exch pop dup 0.770000 sub -1.568624 mul 0.184314 add exch dup 0.770000 sub -0.588234 mul 0.439216 add exch dup 0.770000 sub -1.372546 mul 0.733333 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.168067 mul 0.152941 add exch dup 0.790000 sub -2.035481 mul 0.427451 add exch dup 0.790000 sub -1.045752 mul 0.705882 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.188235 exch 0.000000 exch 0.486275 exch } if pop }
endstream
endobj

110 0 obj
  2878
endobj

111 0 obj
  << /Length 112 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.152941 exch 0.011765 exch 0.478431 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 4.836602 mul 0.152941 add exch dup 0.000000 sub 7.058824 mul 0.011765 add exch dup 0.000000 sub 4.705883 mul 0.478431 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 6.078431 mul 0.298039 add exch dup 0.030000 sub 8.823529 mul 0.223529 add exch dup 0.030000 sub 5.882352 mul 0.619608 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 4.705884 mul 0.419608 add exch dup 0.050000 sub 6.862746 mul 0.400000 add exch dup 0.050000 sub 4.509804 mul 0.737255 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 2.222222 mul 0.513726 add exch dup 0.070000 sub 3.398692 mul 0.537255 add exch dup 0.070000 sub 2.091503 mul 0.827451 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.960785 mul 0.580392 add exch dup 0.100000 sub 2.941177 mul 0.639216 add exch dup 0.100000 sub 2.156863 mul 0.890196 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.568628 mul 0.619608 add exch dup 0.120000 sub 1.960785 mul 0.698039 add exch dup 0.120000 sub 1.176471 mul 0.933333 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.361991 mul 0.635294 add exch dup 0.130000 sub 0.120664 mul 0.717647 add exch dup 0.130000 sub 0.392157 mul 0.945098 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.196078 mul 0.682353 add exch dup 0.260000 sub 0.196078 mul 0.733333 add exch dup 0.260000 sub 0.000000 mul 0.996078 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.019608 mul 0.686275 add exch dup 0.280000 sub -0.235294 mul 0.737255 add exch dup 0.280000 sub -0.470588 mul 0.996078 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub -1.263617 mul 0.584314 add exch dup 0.380000 sub -0.261438 mul 0.713726 add exch dup 0.380000 sub -0.566449 mul 0.949020 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.356863 add exch dup 0.560000 sub -0.156863 mul 0.666667 add exch dup 0.560000 sub -0.313725 mul 0.847059 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.045752 mul 0.337255 add exch dup 0.610000 sub -0.261438 mul 0.658824 add exch dup 0.610000 sub -0.718954 mul 0.831373 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.400560 mul 0.274510 add exch dup 0.670000 sub -0.448179 mul 0.643137 add exch dup 0.670000 sub -1.064426 mul 0.788235 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -2.039215 mul 0.176471 add exch dup 0.740000 sub -0.627451 mul 0.611765 add exch dup 0.740000 sub -1.490196 mul 0.713726 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.479303 mul 0.074510 add exch dup 0.790000 sub -2.723312 mul 0.580392 add exch dup 0.790000 sub -0.849673 mul 0.639216 add exch } if dup 0.970000 gt { exch pop exch pop exch pop dup 0.970000 sub 0.522876 mul 0.160784 add exch dup 0.970000 sub -3.006539 mul 0.090196 add exch dup 0.970000 sub -0.915034 mul 0.486275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.176471 exch 0.000000 exch 0.458824 exch } if pop }
endstream
endobj

112 0 obj
  3268
endobj

113 0 obj
  << /Length 114 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.298039 exch 0.000000 exch 0.529412 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.205882 mul 0.298039 add exch dup 0.000000 sub 1.617647 mul 0.000000 add exch dup 0.000000 sub 2.156863 mul 0.529412 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 1.960785 mul 0.474510 add exch dup 0.080000 sub 1.490196 mul 0.129412 add exch dup 0.080000 sub 1.960784 mul 0.701961 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.387632 mul 0.572549 add exch dup 0.130000 sub 0.512821 mul 0.203922 add exch dup 0.130000 sub 1.387632 mul 0.800000 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.752941 add exch dup 0.260000 sub 0.392157 mul 0.270588 add exch dup 0.260000 sub 0.980392 mul 0.980392 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.772549 add exch dup 0.280000 sub -0.049020 mul 0.278431 add exch dup 0.280000 sub -0.098039 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.459695 mul 0.670588 add exch dup 0.360000 sub -0.087146 mul 0.274510 add exch dup 0.360000 sub -0.087146 mul 0.992157 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -1.764707 mul 0.407843 add exch dup 0.540000 sub 0.000000 mul 0.258824 add exch dup 0.540000 sub -0.196079 mul 0.976471 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.168067 mul 0.372549 add exch dup 0.560000 sub -0.112045 mul 0.258824 add exch dup 0.560000 sub -0.280112 mul 0.972549 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.441177 mul 0.360784 add exch dup 0.630000 sub -0.294118 mul 0.250980 add exch dup 0.630000 sub -0.784314 mul 0.952941 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -0.637255 mul 0.325490 add exch dup 0.710000 sub -0.392157 mul 0.227451 add exch dup 0.710000 sub -1.029411 mul 0.890196 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.336135 mul 0.274510 add exch dup 0.790000 sub -0.933707 mul 0.196078 add exch dup 0.790000 sub -1.307190 mul 0.807843 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.203922 exch 0.000000 exch 0.533333 exch } if pop }
endstream
endobj

114 0 obj
  2296
endobj

115 0 obj
  << /Length 116 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.239216 exch 0.000000 exch 0.505882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.529412 mul 0.239216 add exch dup 0.000000 sub 4.117647 mul 0.000000 add exch dup 0.000000 sub 3.529412 mul 0.505882 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 3.058823 mul 0.309804 add exch dup 0.020000 sub 3.529412 mul 0.082353 add exch dup 0.020000 sub 3.058823 mul 0.576471 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 2.450981 mul 0.462745 add exch dup 0.070000 sub 2.745098 mul 0.258824 add exch dup 0.070000 sub 2.352941 mul 0.729412 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 1.764706 mul 0.560784 add exch dup 0.110000 sub 1.960785 mul 0.368627 add exch dup 0.110000 sub 1.764706 mul 0.823529 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.995475 mul 0.596078 add exch dup 0.130000 sub 0.361991 mul 0.407843 add exch dup 0.130000 sub 0.965309 mul 0.858824 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.588235 mul 0.725490 add exch dup 0.260000 sub 0.196078 mul 0.454902 add exch dup 0.260000 sub 0.784313 mul 0.984314 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.737255 add exch dup 0.280000 sub -0.130719 mul 0.458824 add exch dup 0.280000 sub -0.261438 mul 1.000000 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.403509 mul 0.635294 add exch dup 0.370000 sub -0.144479 mul 0.447059 add exch dup 0.370000 sub -0.288958 mul 0.976471 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.326797 mul 0.368627 add exch dup 0.560000 sub -0.130719 mul 0.419608 add exch dup 0.560000 sub -0.326797 mul 0.921569 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.735294 mul 0.349020 add exch dup 0.620000 sub -0.294118 mul 0.411765 add exch dup 0.620000 sub -0.784314 mul 0.901961 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -1.045751 mul 0.290196 add exch dup 0.700000 sub -0.435730 mul 0.388235 add exch dup 0.700000 sub -1.089324 mul 0.839216 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.018674 mul 0.196078 add exch dup 0.790000 sub -1.661998 mul 0.349020 add exch dup 0.790000 sub -1.139122 mul 0.741176 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.192157 exch 0.000000 exch 0.501961 exch } if pop }
endstream
endobj

116 0 obj
  2488
endobj

117 0 obj
  << /Length 118 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.149020 exch 0.000000 exch 0.474510 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 7.058824 mul 0.149020 add exch dup 0.000000 sub 10.000000 mul 0.000000 add exch dup 0.000000 sub 6.666668 mul 0.474510 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 4.052287 mul 0.290196 add exch dup 0.020000 sub 6.013072 mul 0.200000 add exch dup 0.020000 sub 3.921568 mul 0.607843 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 4.901962 mul 0.411765 add exch dup 0.050000 sub 7.058825 mul 0.380392 add exch dup 0.050000 sub 4.705882 mul 0.725490 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 2.352941 mul 0.509804 add exch dup 0.070000 sub 3.267973 mul 0.521569 add exch dup 0.070000 sub 2.222222 mul 0.819608 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.960785 mul 0.580392 add exch dup 0.100000 sub 3.137255 mul 0.619608 add exch dup 0.100000 sub 1.960785 mul 0.886275 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.568628 mul 0.619608 add exch dup 0.120000 sub 1.960785 mul 0.682353 add exch dup 0.120000 sub 1.568628 mul 0.925490 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.392157 mul 0.635294 add exch dup 0.130000 sub 0.150830 mul 0.701961 add exch dup 0.130000 sub 0.422323 mul 0.941176 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.196078 mul 0.686275 add exch dup 0.260000 sub 0.196078 mul 0.721569 add exch dup 0.260000 sub 0.000000 mul 0.996078 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.690196 add exch dup 0.280000 sub -0.217865 mul 0.725490 add exch dup 0.280000 sub -0.479303 mul 0.996078 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.217750 mul 0.588235 add exch dup 0.370000 sub -0.247678 mul 0.705882 add exch dup 0.370000 sub -0.536636 mul 0.952941 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.356863 add exch dup 0.560000 sub -0.156863 mul 0.658824 add exch dup 0.560000 sub -0.313725 mul 0.850980 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.045752 mul 0.337255 add exch dup 0.610000 sub -0.326797 mul 0.650980 add exch dup 0.610000 sub -0.718954 mul 0.835294 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.400560 mul 0.274510 add exch dup 0.670000 sub -0.448179 mul 0.631373 add exch dup 0.670000 sub -1.064426 mul 0.792157 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -1.960784 mul 0.176471 add exch dup 0.740000 sub -0.627451 mul 0.600000 add exch dup 0.740000 sub -1.490196 mul 0.717647 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.479303 mul 0.078431 add exch dup 0.790000 sub -2.723312 mul 0.568627 add exch dup 0.790000 sub -0.893246 mul 0.643137 add exch } if dup 0.970000 gt { exch pop exch pop exch pop dup 0.970000 sub 0.392157 mul 0.164706 add exch dup 0.970000 sub -2.614382 mul 0.078431 add exch dup 0.970000 sub -0.784314 mul 0.482353 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.176471 exch 0.000000 exch 0.458824 exch } if pop }
endstream
endobj

118 0 obj
  3269
endobj

119 0 obj
  << /Length 120 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.137255 exch 0.000000 exch 0.470588 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.549020 mul 0.137255 add exch dup 0.000000 sub 4.235294 mul 0.000000 add exch dup 0.000000 sub 2.274510 mul 0.470588 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 0.392157 mul 0.164706 add exch dup 0.050000 sub 3.267974 mul 0.211765 add exch dup 0.050000 sub 1.699346 mul 0.584314 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 0.588235 mul 0.188235 add exch dup 0.110000 sub 3.725491 mul 0.407843 add exch dup 0.110000 sub 1.960785 mul 0.686275 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.470588 mul 0.200000 add exch dup 0.130000 sub 2.000000 mul 0.482353 add exch dup 0.130000 sub 0.901961 mul 0.725490 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.529415 mul 0.152941 add exch dup 0.230000 sub -0.392157 mul 0.682353 add exch dup 0.230000 sub 1.176472 mul 0.815686 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274508 mul 0.188235 add exch dup 0.240000 sub -0.392157 mul 0.678431 add exch dup 0.240000 sub 2.352940 mul 0.827451 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.250980 add exch dup 0.250000 sub 0.000000 mul 0.674510 add exch dup 0.250000 sub 0.784314 mul 0.850980 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.270588 add exch dup 0.260000 sub -0.098039 mul 0.674510 add exch dup 0.260000 sub 0.294117 mul 0.858824 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 2.039216 mul 0.309804 add exch dup 0.300000 sub -0.156863 mul 0.670588 add exch dup 0.300000 sub 0.627451 mul 0.870588 add exch } if dup 0.350000 gt { exch pop exch pop exch pop dup 0.350000 sub 2.058823 mul 0.411765 add exch dup 0.350000 sub -0.196078 mul 0.662745 add exch dup 0.350000 sub 0.686274 mul 0.901961 add exch } if dup 0.430000 gt { exch pop exch pop exch pop dup 0.430000 sub 3.333336 mul 0.576471 add exch dup 0.430000 sub -0.196079 mul 0.647059 add exch dup 0.430000 sub 0.980393 mul 0.956863 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.224090 mul 0.643137 add exch dup 0.450000 sub -1.344538 mul 0.643137 add exch dup 0.450000 sub -0.224090 mul 0.976471 add exch } if dup 0.520000 gt { exch pop exch pop exch pop dup 0.520000 sub 0.174292 mul 0.658824 add exch dup 0.520000 sub -1.089324 mul 0.549020 add exch dup 0.520000 sub -0.217865 mul 0.960784 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub 0.130719 mul 0.674510 add exch dup 0.610000 sub -0.588235 mul 0.450980 add exch dup 0.610000 sub -0.130719 mul 0.941176 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -3.104575 mul 0.682353 add exch dup 0.670000 sub -1.568627 mul 0.415686 add exch dup 0.670000 sub -1.470588 mul 0.933333 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -2.745101 mul 0.309804 add exch dup 0.790000 sub -2.352943 mul 0.227451 add exch dup 0.790000 sub -1.372550 mul 0.756863 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.184544 mul 0.200000 add exch dup 0.830000 sub -0.784314 mul 0.133333 add exch dup 0.830000 sub -1.637832 mul 0.701961 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

120 0 obj
  3462
endobj

121 0 obj
  << /Length 122 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.160784 exch 0.000000 exch 0.478431 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 4.705883 mul 0.160784 add exch dup 0.000000 sub 6.666667 mul 0.000000 add exch dup 0.000000 sub 4.509805 mul 0.478431 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 6.470588 mul 0.254902 add exch dup 0.020000 sub 9.411765 mul 0.133333 add exch dup 0.020000 sub 6.470588 mul 0.568627 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 3.529411 mul 0.384314 add exch dup 0.040000 sub 4.967320 mul 0.321569 add exch dup 0.040000 sub 3.267973 mul 0.698039 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 2.483661 mul 0.490196 add exch dup 0.070000 sub 3.529413 mul 0.470588 add exch dup 0.070000 sub 2.483660 mul 0.796078 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 2.352942 mul 0.564706 add exch dup 0.100000 sub 3.137255 mul 0.576471 add exch dup 0.100000 sub 2.156863 mul 0.870588 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.568628 mul 0.611765 add exch dup 0.120000 sub 2.352942 mul 0.639216 add exch dup 0.120000 sub 1.568628 mul 0.913725 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.482655 mul 0.627451 add exch dup 0.130000 sub 0.180995 mul 0.662745 add exch dup 0.130000 sub 0.482655 mul 0.929412 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.196078 mul 0.690196 add exch dup 0.260000 sub 0.196078 mul 0.686275 add exch dup 0.260000 sub 0.196078 mul 0.992157 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.694118 add exch dup 0.280000 sub -0.217865 mul 0.690196 add exch dup 0.280000 sub -0.479303 mul 0.996078 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.217750 mul 0.592157 add exch dup 0.370000 sub -0.247678 mul 0.670588 add exch dup 0.370000 sub -0.474716 mul 0.952941 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.360784 add exch dup 0.560000 sub -0.156863 mul 0.623529 add exch dup 0.560000 sub -0.313725 mul 0.862745 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.045752 mul 0.341176 add exch dup 0.610000 sub -0.261438 mul 0.615686 add exch dup 0.610000 sub -0.784314 mul 0.847059 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.400560 mul 0.278431 add exch dup 0.670000 sub -0.448179 mul 0.600000 add exch dup 0.670000 sub -1.120448 mul 0.800000 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -1.725490 mul 0.180392 add exch dup 0.740000 sub -0.549019 mul 0.568627 add exch dup 0.740000 sub -1.333333 mul 0.721569 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.412797 mul 0.094118 add exch dup 0.790000 sub -2.579980 mul 0.541176 add exch dup 0.790000 sub -0.908153 mul 0.654902 add exch } if dup 0.980000 gt { exch pop exch pop exch pop dup 0.980000 sub 0.392157 mul 0.172549 add exch dup 0.980000 sub -2.549022 mul 0.050980 add exch dup 0.980000 sub -0.784314 mul 0.482353 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.180392 exch 0.000000 exch 0.466667 exch } if pop }
endstream
endobj

122 0 obj
  3268
endobj

123 0 obj
  << /Length 124 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.121569 exch 0.000000 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 5.294118 mul 0.121569 add exch dup 0.000000 sub 8.039216 mul 0.000000 add exch dup 0.000000 sub 5.098041 mul 0.462745 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 6.274510 mul 0.227451 add exch dup 0.020000 sub 9.607843 mul 0.160784 add exch dup 0.020000 sub 6.078431 mul 0.564706 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 5.294117 mul 0.352941 add exch dup 0.040000 sub 8.039217 mul 0.352941 add exch dup 0.040000 sub 5.098039 mul 0.686275 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 4.117649 mul 0.458824 add exch dup 0.060000 sub 6.078431 mul 0.513726 add exch dup 0.060000 sub 3.921568 mul 0.788235 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.941176 mul 0.541176 add exch dup 0.080000 sub 4.509803 mul 0.635294 add exch dup 0.080000 sub 2.745097 mul 0.866667 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.764706 mul 0.600000 add exch dup 0.100000 sub 2.549020 mul 0.725490 add exch dup 0.100000 sub 1.764706 mul 0.921569 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.635294 add exch dup 0.120000 sub 1.960785 mul 0.776471 add exch dup 0.120000 sub 1.176471 mul 0.956863 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.211161 mul 0.647059 add exch dup 0.130000 sub 0.090498 mul 0.796078 add exch dup 0.130000 sub 0.211161 mul 0.968627 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.000000 mul 0.674510 add exch dup 0.260000 sub 0.000000 mul 0.807843 add exch dup 0.260000 sub 0.000000 mul 0.996078 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.019608 mul 0.674510 add exch dup 0.280000 sub -0.235294 mul 0.807843 add exch dup 0.280000 sub -0.549020 mul 0.996078 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub -1.198257 mul 0.572549 add exch dup 0.380000 sub -0.283224 mul 0.784314 add exch dup 0.380000 sub -0.610022 mul 0.941176 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.356863 add exch dup 0.560000 sub -0.156863 mul 0.733333 add exch dup 0.560000 sub -0.313725 mul 0.831373 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.254902 mul 0.337255 add exch dup 0.610000 sub -0.313725 mul 0.725490 add exch dup 0.610000 sub -0.784313 mul 0.815686 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -1.400560 mul 0.274510 add exch dup 0.660000 sub -0.448179 mul 0.709804 add exch dup 0.660000 sub -1.008403 mul 0.776471 add exch } if dup 0.730000 gt { exch pop exch pop exch pop dup 0.730000 sub -2.222222 mul 0.176471 add exch dup 0.730000 sub -0.653595 mul 0.678431 add exch dup 0.730000 sub -1.568627 mul 0.705882 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.612745 mul 0.043137 add exch dup 0.790000 sub -3.063726 mul 0.639216 add exch dup 0.790000 sub -0.784314 mul 0.611765 add exch } if dup 0.950000 gt { exch pop exch pop exch pop dup 0.950000 sub 0.627451 mul 0.141176 add exch dup 0.950000 sub -2.980392 mul 0.149020 add exch dup 0.950000 sub -0.784313 mul 0.486275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.172549 exch 0.000000 exch 0.447059 exch } if pop }
endstream
endobj

124 0 obj
  3462
endobj

125 0 obj
  << /Length 126 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.274510 exch 0.000000 exch 0.517647 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.614379 mul 0.274510 add exch dup 0.000000 sub 2.483660 mul 0.000000 add exch dup 0.000000 sub 2.614379 mul 0.517647 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 2.352942 mul 0.352941 add exch dup 0.030000 sub 2.184874 mul 0.074510 add exch dup 0.030000 sub 2.352941 mul 0.596078 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 2.091504 mul 0.517647 add exch dup 0.100000 sub 1.960785 mul 0.227451 add exch dup 0.100000 sub 2.091504 mul 0.760784 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.236802 mul 0.580392 add exch dup 0.130000 sub 0.452489 mul 0.286275 add exch dup 0.130000 sub 1.206636 mul 0.823529 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.784313 mul 0.741176 add exch dup 0.260000 sub 0.196078 mul 0.345098 add exch dup 0.260000 sub 0.980392 mul 0.980392 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.756863 add exch dup 0.280000 sub -0.098039 mul 0.349020 add exch dup 0.280000 sub -0.147059 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.382869 mul 0.654902 add exch dup 0.360000 sub -0.103199 mul 0.341176 add exch dup 0.360000 sub -0.165119 mul 0.988235 add exch } if dup 0.550000 gt { exch pop exch pop exch pop dup 0.550000 sub -1.960786 mul 0.392157 add exch dup 0.550000 sub 0.000000 mul 0.321569 add exch dup 0.550000 sub -0.392157 mul 0.956863 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.224090 mul 0.372549 add exch dup 0.560000 sub -0.112045 mul 0.321569 add exch dup 0.560000 sub -0.280112 mul 0.952941 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.539216 mul 0.356863 add exch dup 0.630000 sub -0.294118 mul 0.313726 add exch dup 0.630000 sub -0.784314 mul 0.933333 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -0.882353 mul 0.313726 add exch dup 0.710000 sub -0.392157 mul 0.290196 add exch dup 0.710000 sub -1.127450 mul 0.870588 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.205416 mul 0.243137 add exch dup 0.790000 sub -1.232493 mul 0.258824 add exch dup 0.790000 sub -1.232493 mul 0.780392 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.200000 exch 0.000000 exch 0.521569 exch } if pop }
endstream
endobj

126 0 obj
  2490
endobj

127 0 obj
  << /Length 128 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.133333 exch 0.000000 exch 0.470588 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.915033 mul 0.133333 add exch dup 0.000000 sub 4.183007 mul 0.000000 add exch dup 0.000000 sub 2.222223 mul 0.470588 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 1.098039 mul 0.160784 add exch dup 0.030000 sub 4.392157 mul 0.125490 add exch dup 0.030000 sub 2.431373 mul 0.537255 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 1.045752 mul 0.215686 add exch dup 0.080000 sub 4.705882 mul 0.345098 add exch dup 0.080000 sub 2.483660 mul 0.658824 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 0.588236 mul 0.247059 add exch dup 0.110000 sub 2.549021 mul 0.486275 add exch dup 0.110000 sub 1.372549 mul 0.733333 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.196079 mul 0.258824 add exch dup 0.130000 sub 1.725490 mul 0.537255 add exch dup 0.130000 sub 0.862745 mul 0.760784 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.137256 mul 0.239216 add exch dup 0.230000 sub -0.196078 mul 0.709804 add exch dup 0.230000 sub 0.980392 mul 0.847059 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.301961 add exch dup 0.250000 sub 0.000000 mul 0.705882 add exch dup 0.250000 sub 0.784314 mul 0.866667 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.321569 add exch dup 0.260000 sub -0.098039 mul 0.705882 add exch dup 0.260000 sub 0.294117 mul 0.874510 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.456583 mul 0.360784 add exch dup 0.300000 sub -0.168067 mul 0.701961 add exch dup 0.300000 sub 0.448179 mul 0.886275 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub 2.009804 mul 0.462745 add exch dup 0.370000 sub -0.245098 mul 0.690196 add exch dup 0.370000 sub 0.588235 mul 0.917647 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.000000 mul 0.623529 add exch dup 0.450000 sub -1.241830 mul 0.670588 add exch dup 0.450000 sub -0.392157 mul 0.964706 add exch } if dup 0.510000 gt { exch pop exch pop exch pop dup 0.510000 sub -0.039216 mul 0.623529 add exch dup 0.510000 sub -0.980392 mul 0.596078 add exch dup 0.510000 sub -0.274510 mul 0.941176 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub 0.000000 mul 0.619608 add exch dup 0.610000 sub -0.588235 mul 0.498039 add exch dup 0.610000 sub -0.196078 mul 0.913725 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.908497 mul 0.619608 add exch dup 0.670000 sub -1.437908 mul 0.462745 add exch dup 0.670000 sub -1.405229 mul 0.901961 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -2.254904 mul 0.270588 add exch dup 0.790000 sub -2.450983 mul 0.290196 add exch dup 0.790000 sub -1.274511 mul 0.733333 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.069204 mul 0.180392 add exch dup 0.830000 sub -1.130334 mul 0.192157 add exch dup 0.830000 sub -1.522491 mul 0.682353 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

128 0 obj
  3267
endobj

129 0 obj
  << /Length 130 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.121569 exch 0.000000 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.091503 mul 0.121569 add exch dup 0.000000 sub 5.490196 mul 0.000000 add exch dup 0.000000 sub 3.137256 mul 0.462745 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 2.614379 mul 0.184314 add exch dup 0.030000 sub 6.666667 mul 0.164706 add exch dup 0.030000 sub 3.790849 mul 0.556863 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 1.830065 mul 0.262745 add exch dup 0.060000 sub 4.967320 mul 0.364706 add exch dup 0.060000 sub 2.745097 mul 0.670588 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.176471 mul 0.317647 add exch dup 0.090000 sub 3.006536 mul 0.513726 add exch dup 0.090000 sub 1.699347 mul 0.752941 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.352941 add exch dup 0.120000 sub 3.137255 mul 0.603922 add exch dup 0.120000 sub 1.960785 mul 0.803922 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.313725 mul 0.364706 add exch dup 0.130000 sub 1.294117 mul 0.635294 add exch dup 0.130000 sub 0.588235 mul 0.823529 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 2.941177 mul 0.333333 add exch dup 0.230000 sub -0.196078 mul 0.764706 add exch dup 0.230000 sub 0.980392 mul 0.882353 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.392157 add exch dup 0.250000 sub 0.000000 mul 0.760784 add exch dup 0.250000 sub 0.784314 mul 0.901961 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.653595 mul 0.411765 add exch dup 0.260000 sub -0.130719 mul 0.760784 add exch dup 0.260000 sub 0.130719 mul 0.909804 add exch } if dup 0.320000 gt { exch pop exch pop exch pop dup 0.320000 sub 1.019608 mul 0.450980 add exch dup 0.320000 sub -0.235294 mul 0.752941 add exch dup 0.320000 sub 0.196078 mul 0.917647 add exch } if dup 0.420000 gt { exch pop exch pop exch pop dup 0.420000 sub 1.176471 mul 0.552941 add exch dup 0.420000 sub -0.261438 mul 0.729412 add exch dup 0.420000 sub 0.261438 mul 0.937255 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.490196 mul 0.588235 add exch dup 0.450000 sub -1.078431 mul 0.721569 add exch dup 0.450000 sub -0.588235 mul 0.945098 add exch } if dup 0.490000 gt { exch pop exch pop exch pop dup 0.490000 sub -0.427807 mul 0.568627 add exch dup 0.490000 sub -0.891265 mul 0.678431 add exch dup 0.490000 sub -0.499109 mul 0.921569 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.224090 mul 0.521569 add exch dup 0.600000 sub -0.504202 mul 0.580392 add exch dup 0.600000 sub -0.280112 mul 0.866667 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.581700 mul 0.505882 add exch dup 0.670000 sub -1.176471 mul 0.545098 add exch dup 0.670000 sub -1.274510 mul 0.847059 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.372550 mul 0.196078 add exch dup 0.790000 sub -2.745100 mul 0.403922 add exch dup 0.790000 sub -1.176472 mul 0.694118 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.138408 mul 0.141176 add exch dup 0.830000 sub -1.730104 mul 0.294118 add exch dup 0.830000 sub -1.291811 mul 0.647059 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

130 0 obj
  3462
endobj

131 0 obj
  << /Length 132 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.164706 exch 0.000000 exch 0.478431 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 7.843137 mul 0.164706 add exch dup 0.000000 sub 10.980392 mul 0.000000 add exch dup 0.000000 sub 7.450983 mul 0.478431 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 4.575164 mul 0.243137 add exch dup 0.010000 sub 6.405230 mul 0.109804 add exch dup 0.010000 sub 4.444444 mul 0.552941 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 3.529411 mul 0.380392 add exch dup 0.040000 sub 4.967320 mul 0.301961 add exch dup 0.040000 sub 3.398692 mul 0.686275 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 3.921569 mul 0.486275 add exch dup 0.070000 sub 5.490196 mul 0.450980 add exch dup 0.070000 sub 3.725489 mul 0.788235 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.568628 mul 0.564706 add exch dup 0.090000 sub 2.222223 mul 0.560784 add exch dup 0.090000 sub 1.568628 mul 0.862745 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.568628 mul 0.611765 add exch dup 0.120000 sub 2.352942 mul 0.627451 add exch dup 0.120000 sub 1.568628 mul 0.909804 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.512820 mul 0.627451 add exch dup 0.130000 sub 0.180995 mul 0.650980 add exch dup 0.130000 sub 0.512820 mul 0.925490 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.196078 mul 0.694118 add exch dup 0.260000 sub 0.000000 mul 0.674510 add exch dup 0.260000 sub 0.196078 mul 0.992157 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.698039 add exch dup 0.280000 sub -0.217865 mul 0.674510 add exch dup 0.280000 sub -0.435730 mul 0.996078 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.238390 mul 0.596078 add exch dup 0.370000 sub -0.206398 mul 0.654902 add exch dup 0.370000 sub -0.474716 mul 0.956863 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.360784 add exch dup 0.560000 sub -0.156863 mul 0.615686 add exch dup 0.560000 sub -0.313725 mul 0.866667 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -0.896359 mul 0.341176 add exch dup 0.610000 sub -0.280112 mul 0.607843 add exch dup 0.610000 sub -0.728291 mul 0.850980 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -1.400560 mul 0.278431 add exch dup 0.680000 sub -0.448179 mul 0.588235 add exch dup 0.680000 sub -1.120448 mul 0.800000 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.960783 mul 0.180392 add exch dup 0.750000 sub -0.686274 mul 0.556863 add exch dup 0.750000 sub -1.568627 mul 0.721569 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.372549 mul 0.101961 add exch dup 0.790000 sub -2.450981 mul 0.529412 add exch dup 0.790000 sub -0.882353 mul 0.658824 add exch } if dup 0.990000 gt { exch pop exch pop exch pop dup 0.990000 sub 0.392157 mul 0.176471 add exch dup 0.990000 sub -3.921572 mul 0.039216 add exch dup 0.990000 sub -1.568629 mul 0.482353 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.180392 exch 0.000000 exch 0.466667 exch } if pop }
endstream
endobj

132 0 obj
  3269
endobj

133 0 obj
  << /Length 134 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.101961 exch 0.000000 exch 0.454902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 8.627451 mul 0.101961 add exch dup 0.000000 sub 15.294119 mul 0.000000 add exch dup 0.000000 sub 9.019610 mul 0.454902 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 3.790850 mul 0.188235 add exch dup 0.010000 sub 6.666667 mul 0.152941 add exch dup 0.010000 sub 4.052288 mul 0.545098 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 4.705882 mul 0.301961 add exch dup 0.040000 sub 8.431374 mul 0.352941 add exch dup 0.040000 sub 4.901960 mul 0.666667 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.529412 mul 0.396078 add exch dup 0.060000 sub 6.274509 mul 0.521569 add exch dup 0.060000 sub 3.921568 mul 0.764706 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.549021 mul 0.466667 add exch dup 0.080000 sub 4.705881 mul 0.647059 add exch dup 0.080000 sub 2.745097 mul 0.843137 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.568628 mul 0.517647 add exch dup 0.100000 sub 2.745098 mul 0.741176 add exch dup 0.100000 sub 1.568628 mul 0.898039 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.549020 add exch dup 0.120000 sub 1.960785 mul 0.796078 add exch dup 0.120000 sub 1.176471 mul 0.929412 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.039216 mul 0.560784 add exch dup 0.130000 sub 0.431372 mul 0.815686 add exch dup 0.130000 sub 0.196078 mul 0.941176 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 0.653595 mul 0.556863 add exch dup 0.230000 sub 0.000000 mul 0.858824 add exch dup 0.230000 sub 0.261438 mul 0.960784 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub -0.252101 mul 0.576471 add exch dup 0.260000 sub -0.224090 mul 0.858824 add exch dup 0.260000 sub -0.280112 mul 0.968627 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.392157 mul 0.541176 add exch dup 0.400000 sub -0.313726 mul 0.827451 add exch dup 0.400000 sub -0.392157 mul 0.929412 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -1.288516 mul 0.521569 add exch dup 0.450000 sub -0.672269 mul 0.811765 add exch dup 0.450000 sub -0.896359 mul 0.909804 add exch } if dup 0.520000 gt { exch pop exch pop exch pop dup 0.520000 sub -1.089324 mul 0.431373 add exch dup 0.520000 sub -0.522876 mul 0.764706 add exch dup 0.520000 sub -0.784313 mul 0.847059 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -0.588235 mul 0.333333 add exch dup 0.610000 sub -0.326797 mul 0.717647 add exch dup 0.610000 sub -0.457516 mul 0.776471 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.928105 mul 0.298039 add exch dup 0.670000 sub -0.686274 mul 0.698039 add exch dup 0.670000 sub -1.111111 mul 0.749020 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.000000 mul 0.066667 add exch dup 0.790000 sub -3.235298 mul 0.615686 add exch dup 0.790000 sub -0.882354 mul 0.615686 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.576701 mul 0.066667 add exch dup 0.830000 sub -2.860438 mul 0.486275 add exch dup 0.830000 sub -0.876586 mul 0.580392 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.431373 exch } if pop }
endstream
endobj

134 0 obj
  3464
endobj

135 0 obj
  << /Length 136 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.156863 exch 0.000000 exch 0.474510 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 5.490197 mul 0.156863 add exch dup 0.000000 sub 7.647059 mul 0.000000 add exch dup 0.000000 sub 5.294119 mul 0.474510 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 4.313725 mul 0.266667 add exch dup 0.020000 sub 6.143791 mul 0.152941 add exch dup 0.020000 sub 4.183006 mul 0.580392 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 5.098039 mul 0.396078 add exch dup 0.050000 sub 7.450980 mul 0.337255 add exch dup 0.050000 sub 4.901960 mul 0.705882 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 2.483661 mul 0.498039 add exch dup 0.070000 sub 3.398694 mul 0.486275 add exch dup 0.070000 sub 2.352941 mul 0.803922 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 2.156863 mul 0.572549 add exch dup 0.100000 sub 3.137255 mul 0.588235 add exch dup 0.100000 sub 2.156863 mul 0.874510 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.568628 mul 0.615686 add exch dup 0.120000 sub 2.352942 mul 0.650980 add exch dup 0.120000 sub 1.568628 mul 0.917647 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.452489 mul 0.631373 add exch dup 0.130000 sub 0.180995 mul 0.674510 add exch dup 0.130000 sub 0.452489 mul 0.933333 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.196078 mul 0.690196 add exch dup 0.260000 sub 0.196078 mul 0.698039 add exch dup 0.260000 sub 0.196078 mul 0.992157 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.694118 add exch dup 0.280000 sub -0.217865 mul 0.701961 add exch dup 0.280000 sub -0.479303 mul 0.996078 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.217750 mul 0.592157 add exch dup 0.370000 sub -0.247678 mul 0.682353 add exch dup 0.370000 sub -0.495356 mul 0.952941 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.360784 add exch dup 0.560000 sub -0.156863 mul 0.635294 add exch dup 0.560000 sub -0.313725 mul 0.858824 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.045752 mul 0.341176 add exch dup 0.610000 sub -0.326797 mul 0.627451 add exch dup 0.610000 sub -0.784314 mul 0.843137 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.400560 mul 0.278431 add exch dup 0.670000 sub -0.448179 mul 0.607843 add exch dup 0.670000 sub -1.064426 mul 0.796078 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -1.803921 mul 0.180392 add exch dup 0.740000 sub -0.549019 mul 0.576471 add exch dup 0.740000 sub -1.411764 mul 0.721569 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.412797 mul 0.090196 add exch dup 0.790000 sub -2.579980 mul 0.549020 add exch dup 0.790000 sub -0.887513 mul 0.650980 add exch } if dup 0.980000 gt { exch pop exch pop exch pop dup 0.980000 sub 0.392157 mul 0.168627 add exch dup 0.980000 sub -2.941179 mul 0.058824 add exch dup 0.980000 sub -0.980393 mul 0.482353 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.176471 exch 0.000000 exch 0.462745 exch } if pop }
endstream
endobj

136 0 obj
  3268
endobj

137 0 obj
  << /Length 138 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.172549 exch 0.000000 exch 0.482353 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 4.313725 mul 0.172549 add exch dup 0.000000 sub 5.882353 mul 0.000000 add exch dup 0.000000 sub 3.921571 mul 0.482353 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 4.836602 mul 0.215686 add exch dup 0.010000 sub 6.666667 mul 0.058824 add exch dup 0.010000 sub 4.705882 mul 0.521569 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 3.790849 mul 0.360784 add exch dup 0.040000 sub 5.228758 mul 0.258824 add exch dup 0.040000 sub 3.660130 mul 0.662745 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 4.117648 mul 0.474510 add exch dup 0.070000 sub 5.686275 mul 0.415686 add exch dup 0.070000 sub 3.921568 mul 0.772549 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.568628 mul 0.556863 add exch dup 0.090000 sub 2.352942 mul 0.529412 add exch dup 0.090000 sub 1.699347 mul 0.850980 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.960785 mul 0.603922 add exch dup 0.120000 sub 2.352942 mul 0.600000 add exch dup 0.120000 sub 1.568628 mul 0.901961 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.573152 mul 0.623529 add exch dup 0.130000 sub 0.211161 mul 0.623529 add exch dup 0.130000 sub 0.573152 mul 0.917647 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.196078 mul 0.698039 add exch dup 0.260000 sub 0.000000 mul 0.650980 add exch dup 0.260000 sub 0.196078 mul 0.992157 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.701961 add exch dup 0.280000 sub -0.217865 mul 0.650980 add exch dup 0.280000 sub -0.435730 mul 0.996078 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.259030 mul 0.600000 add exch dup 0.370000 sub -0.206398 mul 0.631373 add exch dup 0.370000 sub -0.454076 mul 0.956863 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.360784 add exch dup 0.560000 sub -0.156863 mul 0.592157 add exch dup 0.560000 sub -0.313725 mul 0.870588 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -0.896359 mul 0.341176 add exch dup 0.610000 sub -0.280112 mul 0.584314 add exch dup 0.610000 sub -0.672269 mul 0.854902 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -1.400560 mul 0.278431 add exch dup 0.680000 sub -0.448179 mul 0.564706 add exch dup 0.680000 sub -1.176471 mul 0.807843 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.764705 mul 0.180392 add exch dup 0.750000 sub -0.588235 mul 0.533333 add exch dup 0.750000 sub -1.372548 mul 0.725490 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.333333 mul 0.109804 add exch dup 0.790000 sub -2.450981 mul 0.509804 add exch dup 0.790000 sub -0.960784 mul 0.670588 add exch } if dup 0.990000 gt { exch pop exch pop exch pop dup 0.990000 sub 0.392157 mul 0.176471 add exch dup 0.990000 sub -1.960786 mul 0.019608 add exch dup 0.990000 sub -0.784314 mul 0.478431 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.180392 exch 0.000000 exch 0.470588 exch } if pop }
endstream
endobj

138 0 obj
  3268
endobj

139 0 obj
  << /Length 140 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.098039 exch 0.000000 exch 0.454902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 6.274509 mul 0.098039 add exch dup 0.000000 sub 10.784314 mul 0.000000 add exch dup 0.000000 sub 6.470590 mul 0.454902 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 5.686275 mul 0.223529 add exch dup 0.020000 sub 9.411765 mul 0.215686 add exch dup 0.020000 sub 5.686275 mul 0.584314 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 4.509804 mul 0.337255 add exch dup 0.040000 sub 7.843138 mul 0.403922 add exch dup 0.040000 sub 4.705882 mul 0.698039 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.529412 mul 0.427451 add exch dup 0.060000 sub 6.274509 mul 0.560784 add exch dup 0.060000 sub 3.725490 mul 0.792157 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.549021 mul 0.498039 add exch dup 0.080000 sub 4.313725 mul 0.686275 add exch dup 0.080000 sub 2.549019 mul 0.866667 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.568628 mul 0.549020 add exch dup 0.100000 sub 2.549020 mul 0.772549 add exch dup 0.100000 sub 1.568628 mul 0.917647 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.580392 add exch dup 0.120000 sub 1.960785 mul 0.823529 add exch dup 0.120000 sub 1.176471 mul 0.949020 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.078431 mul 0.592157 add exch dup 0.130000 sub 0.313725 mul 0.843137 add exch dup 0.130000 sub 0.117647 mul 0.960784 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 0.522876 mul 0.584314 add exch dup 0.230000 sub -0.130719 mul 0.874510 add exch dup 0.230000 sub 0.261438 mul 0.972549 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub -0.392157 mul 0.600000 add exch dup 0.260000 sub -0.196078 mul 0.870588 add exch dup 0.260000 sub -0.352941 mul 0.980392 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -0.522876 mul 0.560784 add exch dup 0.360000 sub -0.261438 mul 0.850980 add exch dup 0.360000 sub -0.479303 mul 0.945098 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -1.421569 mul 0.513726 add exch dup 0.450000 sub -0.588235 mul 0.827451 add exch dup 0.450000 sub -0.931373 mul 0.901961 add exch } if dup 0.530000 gt { exch pop exch pop exch pop dup 0.530000 sub -1.089324 mul 0.400000 add exch dup 0.530000 sub -0.479303 mul 0.780392 add exch dup 0.530000 sub -0.740740 mul 0.827451 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.705882 mul 0.301961 add exch dup 0.620000 sub -0.313725 mul 0.737255 add exch dup 0.620000 sub -0.470588 mul 0.760784 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.830065 mul 0.266667 add exch dup 0.670000 sub -0.620915 mul 0.721569 add exch dup 0.670000 sub -1.111111 mul 0.737255 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.196079 mul 0.047059 add exch dup 0.790000 sub -3.333336 mul 0.647059 add exch dup 0.790000 sub -0.784314 mul 0.603922 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.645905 mul 0.054902 add exch dup 0.830000 sub -3.021914 mul 0.513726 add exch dup 0.830000 sub -0.830450 mul 0.572549 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.431373 exch } if pop }
endstream
endobj

140 0 obj
  3465
endobj

141 0 obj
  << /Length 142 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.098039 exch 0.000000 exch 0.454902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 5.882353 mul 0.098039 add exch dup 0.000000 sub 9.019608 mul 0.000000 add exch dup 0.000000 sub 5.490199 mul 0.454902 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 6.470589 mul 0.156863 add exch dup 0.010000 sub 10.392158 mul 0.090196 add exch dup 0.010000 sub 6.274509 mul 0.509804 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 11.372549 mul 0.286275 add exch dup 0.030000 sub 17.647058 mul 0.298039 add exch dup 0.030000 sub 10.980392 mul 0.635294 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 4.509804 mul 0.400000 add exch dup 0.040000 sub 7.254903 mul 0.474510 add exch dup 0.040000 sub 4.509804 mul 0.745098 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.725492 mul 0.490196 add exch dup 0.060000 sub 5.686275 mul 0.619608 add exch dup 0.060000 sub 3.333333 mul 0.835294 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.549019 mul 0.564706 add exch dup 0.080000 sub 4.117646 mul 0.733333 add exch dup 0.080000 sub 2.549019 mul 0.901961 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.372549 mul 0.615686 add exch dup 0.100000 sub 2.352942 mul 0.815686 add exch dup 0.100000 sub 1.372549 mul 0.952941 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.643137 add exch dup 0.120000 sub 1.568628 mul 0.862745 add exch dup 0.120000 sub 1.176471 mul 0.980392 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.060332 mul 0.654902 add exch dup 0.130000 sub 0.030166 mul 0.878431 add exch dup 0.130000 sub 0.060332 mul 0.992157 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub -0.196078 mul 0.662745 add exch dup 0.260000 sub 0.000000 mul 0.882353 add exch dup 0.260000 sub -0.196078 mul 1.000000 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.019608 mul 0.658824 add exch dup 0.280000 sub -0.274510 mul 0.882353 add exch dup 0.280000 sub -0.627451 mul 0.996078 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub -1.132898 mul 0.556863 add exch dup 0.380000 sub -0.326797 mul 0.854902 add exch dup 0.380000 sub -0.675381 mul 0.933333 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.490196 mul 0.352941 add exch dup 0.560000 sub -0.098039 mul 0.796078 add exch dup 0.560000 sub -0.392157 mul 0.811765 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -1.045752 mul 0.333333 add exch dup 0.600000 sub -0.326797 mul 0.792157 add exch dup 0.600000 sub -0.653595 mul 0.796078 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -1.633987 mul 0.270588 add exch dup 0.660000 sub -0.457516 mul 0.772549 add exch dup 0.660000 sub -1.111111 mul 0.756863 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -2.287584 mul 0.172549 add exch dup 0.720000 sub -0.588236 mul 0.745098 add exch dup 0.720000 sub -1.503269 mul 0.690196 add exch } if dup 0.780000 gt { exch pop exch pop exch pop dup 0.780000 sub -2.352930 mul 0.035294 add exch dup 0.780000 sub -0.784310 mul 0.709804 add exch dup 0.780000 sub -1.568619 mul 0.600000 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.705882 mul 0.011765 add exch dup 0.790000 sub -3.267975 mul 0.701961 add exch dup 0.790000 sub -0.705883 mul 0.584314 add exch } if dup 0.940000 gt { exch pop exch pop exch pop dup 0.940000 sub 0.784314 mul 0.117647 add exch dup 0.940000 sub -3.529412 mul 0.211765 add exch dup 0.940000 sub -0.718954 mul 0.478431 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.435294 exch } if pop }
endstream
endobj

142 0 obj
  3859
endobj

143 0 obj
  << /Length 144 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.149020 exch 0.000000 exch 0.478431 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.392157 mul 0.149020 add exch dup 0.000000 sub 2.745098 mul 0.000000 add exch dup 0.000000 sub 1.176471 mul 0.478431 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub -0.457516 mul 0.145098 add exch dup 0.010000 sub 2.973856 mul 0.027451 add exch dup 0.010000 sub 1.405229 mul 0.490196 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.588235 mul 0.090196 add exch dup 0.130000 sub 2.470588 mul 0.384314 add exch dup 0.130000 sub 1.137255 mul 0.658824 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 6.666673 mul 0.031373 add exch dup 0.230000 sub -0.392157 mul 0.631373 add exch dup 0.230000 sub 2.352943 mul 0.772549 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274507 mul 0.098039 add exch dup 0.240000 sub -0.392157 mul 0.627451 add exch dup 0.240000 sub 1.960783 mul 0.796078 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.160784 add exch dup 0.250000 sub 0.000000 mul 0.623529 add exch dup 0.250000 sub 0.784314 mul 0.815686 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.307189 mul 0.180392 add exch dup 0.260000 sub -0.130719 mul 0.623529 add exch dup 0.260000 sub 0.392157 mul 0.823529 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 2.039215 mul 0.219608 add exch dup 0.290000 sub -0.078431 mul 0.619608 add exch dup 0.290000 sub 0.705882 mul 0.835294 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub 3.294119 mul 0.321569 add exch dup 0.340000 sub -0.235294 mul 0.615686 add exch dup 0.340000 sub 1.176471 mul 0.870588 add exch } if dup 0.390000 gt { exch pop exch pop exch pop dup 0.390000 sub 3.202615 mul 0.486275 add exch dup 0.390000 sub -0.196078 mul 0.603922 add exch dup 0.390000 sub 1.111111 mul 0.929412 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.610022 mul 0.678431 add exch dup 0.450000 sub -1.394335 mul 0.592157 add exch dup 0.450000 sub -0.043573 mul 0.996078 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.588235 mul 0.733333 add exch dup 0.540000 sub -1.225490 mul 0.466667 add exch dup 0.540000 sub -0.098039 mul 0.992157 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub 0.313725 mul 0.780392 add exch dup 0.620000 sub -0.705882 mul 0.368627 add exch dup 0.620000 sub 0.000000 mul 0.984314 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -3.464052 mul 0.796078 add exch dup 0.670000 sub -1.862745 mul 0.333333 add exch dup 0.670000 sub -1.535948 mul 0.984314 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -3.529415 mul 0.380392 add exch dup 0.790000 sub -2.058825 mul 0.109804 add exch dup 0.790000 sub -1.568629 mul 0.800000 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.415225 mul 0.239216 add exch dup 0.830000 sub -0.161476 mul 0.027451 add exch dup 0.830000 sub -1.868512 mul 0.737255 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.419608 exch } if pop }
endstream
endobj

144 0 obj
  3269
endobj

145 0 obj
  << /Length 146 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.188235 exch 0.000000 exch 0.486275 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 4.183007 mul 0.188235 add exch dup 0.000000 sub 5.620915 mul 0.000000 add exch dup 0.000000 sub 4.052289 mul 0.486275 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 4.313725 mul 0.313726 add exch dup 0.030000 sub 5.751634 mul 0.168627 add exch dup 0.030000 sub 4.183006 mul 0.607843 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.137255 mul 0.443137 add exch dup 0.060000 sub 4.183006 mul 0.341176 add exch dup 0.060000 sub 3.137254 mul 0.733333 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.960785 mul 0.537255 add exch dup 0.090000 sub 2.483661 mul 0.466667 add exch dup 0.090000 sub 1.830066 mul 0.827451 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.960785 mul 0.596078 add exch dup 0.120000 sub 2.745098 mul 0.541176 add exch dup 0.120000 sub 1.960785 mul 0.882353 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.663650 mul 0.615686 add exch dup 0.130000 sub 0.241327 mul 0.568627 add exch dup 0.130000 sub 0.693816 mul 0.901961 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.392157 mul 0.701961 add exch dup 0.260000 sub 0.196078 mul 0.600000 add exch dup 0.260000 sub 0.196078 mul 0.992157 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.709804 add exch dup 0.280000 sub -0.174292 mul 0.603922 add exch dup 0.280000 sub -0.392157 mul 0.996078 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.300310 mul 0.607843 add exch dup 0.370000 sub -0.206398 mul 0.588235 add exch dup 0.370000 sub -0.412797 mul 0.960784 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.326797 mul 0.360784 add exch dup 0.560000 sub -0.130719 mul 0.549020 add exch dup 0.560000 sub -0.326797 mul 0.882353 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -1.045752 mul 0.341176 add exch dup 0.620000 sub -0.326797 mul 0.541176 add exch dup 0.620000 sub -0.849673 mul 0.862745 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -1.225491 mul 0.278431 add exch dup 0.680000 sub -0.441177 mul 0.521569 add exch dup 0.680000 sub -1.029412 mul 0.811765 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -1.568626 mul 0.180392 add exch dup 0.760000 sub -0.522875 mul 0.486275 add exch dup 0.760000 sub -1.437907 mul 0.729412 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.242764 mul 0.133333 add exch dup 0.790000 sub -2.240897 mul 0.470588 add exch dup 0.790000 sub -0.989729 mul 0.686275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.184314 exch 0.000000 exch 0.478431 exch } if pop }
endstream
endobj

146 0 obj
  2878
endobj

147 0 obj
  << /Length 148 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.200000 exch 0.000000 exch 0.494118 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.725491 mul 0.200000 add exch dup 0.000000 sub 4.901961 mul 0.000000 add exch dup 0.000000 sub 3.725492 mul 0.494118 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 4.836601 mul 0.274510 add exch dup 0.020000 sub 6.143791 mul 0.098039 add exch dup 0.020000 sub 4.575163 mul 0.568627 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 2.647059 mul 0.419608 add exch dup 0.050000 sub 3.333333 mul 0.282353 add exch dup 0.050000 sub 2.549019 mul 0.705882 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 2.091504 mul 0.525490 add exch dup 0.090000 sub 2.745098 mul 0.415686 add exch dup 0.090000 sub 1.960785 mul 0.807843 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 2.352942 mul 0.588235 add exch dup 0.120000 sub 3.137258 mul 0.498039 add exch dup 0.120000 sub 2.352942 mul 0.866667 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.754148 mul 0.611765 add exch dup 0.130000 sub 0.271493 mul 0.529412 add exch dup 0.130000 sub 0.754148 mul 0.890196 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.392157 mul 0.709804 add exch dup 0.260000 sub 0.196078 mul 0.564706 add exch dup 0.260000 sub 0.392157 mul 0.988235 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.717647 add exch dup 0.280000 sub -0.174292 mul 0.568627 add exch dup 0.280000 sub -0.348584 mul 0.996078 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.320950 mul 0.615686 add exch dup 0.370000 sub -0.185759 mul 0.552941 add exch dup 0.370000 sub -0.371517 mul 0.964706 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.326797 mul 0.364706 add exch dup 0.560000 sub -0.130719 mul 0.517647 add exch dup 0.560000 sub -0.326797 mul 0.894118 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.896359 mul 0.345098 add exch dup 0.620000 sub -0.336135 mul 0.509804 add exch dup 0.620000 sub -0.728291 mul 0.874510 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -1.225491 mul 0.282353 add exch dup 0.690000 sub -0.441177 mul 0.486275 add exch dup 0.690000 sub -1.127451 mul 0.823529 add exch } if dup 0.770000 gt { exch pop exch pop exch pop dup 0.770000 sub -1.764702 mul 0.184314 add exch dup 0.770000 sub -0.588234 mul 0.450980 add exch dup 0.770000 sub -1.568624 mul 0.733333 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.186741 mul 0.149020 add exch dup 0.790000 sub -2.091503 mul 0.439216 add exch dup 0.790000 sub -1.027078 mul 0.701961 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.188235 exch 0.000000 exch 0.486275 exch } if pop }
endstream
endobj

148 0 obj
  2878
endobj

149 0 obj
  << /Length 150 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.207843 exch 0.000000 exch 0.494118 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.529412 mul 0.207843 add exch dup 0.000000 sub 4.313725 mul 0.000000 add exch dup 0.000000 sub 3.529415 mul 0.494118 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 3.921569 mul 0.243137 add exch dup 0.010000 sub 4.901961 mul 0.043137 add exch dup 0.010000 sub 3.725490 mul 0.529412 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 2.843138 mul 0.400000 add exch dup 0.050000 sub 3.627451 mul 0.239216 add exch dup 0.050000 sub 2.843137 mul 0.678431 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 3.529412 mul 0.513726 add exch dup 0.090000 sub 4.313726 mul 0.384314 add exch dup 0.090000 sub 3.333334 mul 0.792157 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 1.176471 mul 0.584314 add exch dup 0.110000 sub 1.568629 mul 0.470588 add exch dup 0.110000 sub 1.176471 mul 0.858824 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.814480 mul 0.607843 add exch dup 0.130000 sub 0.301659 mul 0.501961 add exch dup 0.130000 sub 0.814480 mul 0.882353 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.392157 mul 0.713726 add exch dup 0.260000 sub 0.196078 mul 0.541176 add exch dup 0.260000 sub 0.392157 mul 0.988235 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.721569 add exch dup 0.280000 sub -0.174292 mul 0.545098 add exch dup 0.280000 sub -0.305011 mul 0.996078 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.341589 mul 0.619608 add exch dup 0.370000 sub -0.185759 mul 0.529412 add exch dup 0.370000 sub -0.350877 mul 0.968627 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.326797 mul 0.364706 add exch dup 0.560000 sub -0.130719 mul 0.494118 add exch dup 0.560000 sub -0.326797 mul 0.901961 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.896359 mul 0.345098 add exch dup 0.620000 sub -0.280112 mul 0.486275 add exch dup 0.620000 sub -0.784314 mul 0.882353 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -1.225491 mul 0.282353 add exch dup 0.690000 sub -0.441177 mul 0.466667 add exch dup 0.690000 sub -1.127451 mul 0.827451 add exch } if dup 0.770000 gt { exch pop exch pop exch pop dup 0.770000 sub -1.372546 mul 0.184314 add exch dup 0.770000 sub -0.588234 mul 0.431373 add exch dup 0.770000 sub -1.372546 mul 0.737255 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.149393 mul 0.156863 add exch dup 0.790000 sub -1.998133 mul 0.419608 add exch dup 0.790000 sub -1.045752 mul 0.709804 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.188235 exch 0.000000 exch 0.490196 exch } if pop }
endstream
endobj

150 0 obj
  2878
endobj

151 0 obj
  << /Length 152 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.129412 exch 0.000000 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.470588 mul 0.129412 add exch dup 0.000000 sub 5.098040 mul 0.000000 add exch dup 0.000000 sub 2.843138 mul 0.466667 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 1.274510 mul 0.188235 add exch dup 0.040000 sub 4.901961 mul 0.203922 add exch dup 0.040000 sub 2.647059 mul 0.580392 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 1.176471 mul 0.239216 add exch dup 0.080000 sub 3.921569 mul 0.400000 add exch dup 0.080000 sub 2.222222 mul 0.686275 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 0.588235 mul 0.274510 add exch dup 0.110000 sub 2.352942 mul 0.517647 add exch dup 0.110000 sub 1.176471 mul 0.752941 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.235294 mul 0.286275 add exch dup 0.130000 sub 1.607843 mul 0.564706 add exch dup 0.130000 sub 0.823529 mul 0.776471 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.137255 mul 0.262745 add exch dup 0.230000 sub -0.196078 mul 0.725490 add exch dup 0.230000 sub 0.980392 mul 0.858824 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.325490 add exch dup 0.250000 sub 0.000000 mul 0.721569 add exch dup 0.250000 sub 0.784314 mul 0.878431 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.784313 mul 0.345098 add exch dup 0.260000 sub -0.078431 mul 0.721569 add exch dup 0.260000 sub 0.235294 mul 0.886275 add exch } if dup 0.310000 gt { exch pop exch pop exch pop dup 0.310000 sub 1.456583 mul 0.384314 add exch dup 0.310000 sub -0.224090 mul 0.717647 add exch dup 0.310000 sub 0.336134 mul 0.898039 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub 1.792718 mul 0.486275 add exch dup 0.380000 sub -0.224090 mul 0.701961 add exch dup 0.380000 sub 0.504202 mul 0.921569 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.130719 mul 0.611765 add exch dup 0.450000 sub -1.111111 mul 0.686275 add exch dup 0.450000 sub -0.392157 mul 0.956863 add exch } if dup 0.510000 gt { exch pop exch pop exch pop dup 0.510000 sub -0.117647 mul 0.603922 add exch dup 0.510000 sub -0.980392 mul 0.619608 add exch dup 0.510000 sub -0.352941 mul 0.933333 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -0.065359 mul 0.592157 add exch dup 0.610000 sub -0.588236 mul 0.521569 add exch dup 0.610000 sub -0.196078 mul 0.898039 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.810457 mul 0.588235 add exch dup 0.670000 sub -1.372549 mul 0.486275 add exch dup 0.670000 sub -1.372549 mul 0.886275 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -2.058826 mul 0.250980 add exch dup 0.790000 sub -2.549022 mul 0.321569 add exch dup 0.790000 sub -1.176472 mul 0.721569 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.000000 mul 0.168627 add exch dup 0.830000 sub -1.291811 mul 0.219608 add exch dup 0.830000 sub -1.476355 mul 0.674510 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

152 0 obj
  3268
endobj

153 0 obj
  << /Length 154 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.219608 exch 0.000000 exch 0.498039 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 4.019608 mul 0.219608 add exch dup 0.000000 sub 4.901961 mul 0.000000 add exch dup 0.000000 sub 3.921569 mul 0.498039 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 3.039216 mul 0.380392 add exch dup 0.040000 sub 3.823530 mul 0.196078 add exch dup 0.040000 sub 3.039216 mul 0.654902 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.483660 mul 0.501961 add exch dup 0.080000 sub 3.006536 mul 0.349020 add exch dup 0.080000 sub 2.483660 mul 0.776471 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 1.372549 mul 0.576471 add exch dup 0.110000 sub 1.764706 mul 0.439216 add exch dup 0.110000 sub 1.372549 mul 0.850980 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.874811 mul 0.603922 add exch dup 0.130000 sub 0.301659 mul 0.474510 add exch dup 0.130000 sub 0.844646 mul 0.878431 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.392157 mul 0.717647 add exch dup 0.260000 sub 0.196078 mul 0.513726 add exch dup 0.260000 sub 0.588235 mul 0.988235 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.725490 add exch dup 0.280000 sub -0.130719 mul 0.517647 add exch dup 0.280000 sub -0.305011 mul 1.000000 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.362229 mul 0.623529 add exch dup 0.370000 sub -0.165119 mul 0.505882 add exch dup 0.370000 sub -0.350877 mul 0.972549 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.326797 mul 0.364706 add exch dup 0.560000 sub -0.130719 mul 0.474510 add exch dup 0.560000 sub -0.326797 mul 0.905882 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.784314 mul 0.345098 add exch dup 0.620000 sub -0.294118 mul 0.466667 add exch dup 0.620000 sub -0.735294 mul 0.886275 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -1.225491 mul 0.282353 add exch dup 0.700000 sub -0.441177 mul 0.443137 add exch dup 0.700000 sub -1.176471 mul 0.827451 add exch } if dup 0.780000 gt { exch pop exch pop exch pop dup 0.780000 sub -1.568619 mul 0.184314 add exch dup 0.780000 sub -0.784310 mul 0.407843 add exch dup 0.780000 sub -1.568619 mul 0.733333 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.093371 mul 0.168627 add exch dup 0.790000 sub -1.904762 mul 0.400000 add exch dup 0.790000 sub -1.064426 mul 0.717647 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.188235 exch 0.000000 exch 0.494118 exch } if pop }
endstream
endobj

154 0 obj
  2684
endobj

155 0 obj
  << /Length 156 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.133333 exch 0.000000 exch 0.470588 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.980392 mul 0.133333 add exch dup 0.000000 sub 4.901961 mul 0.000000 add exch dup 0.000000 sub 2.549021 mul 0.470588 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 1.019608 mul 0.152941 add exch dup 0.020000 sub 4.627451 mul 0.098039 add exch dup 0.020000 sub 2.509804 mul 0.521569 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 0.784314 mul 0.203922 add exch dup 0.070000 sub 3.627451 mul 0.329412 add exch dup 0.070000 sub 1.862745 mul 0.647059 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 0.588235 mul 0.235294 add exch dup 0.110000 sub 2.745100 mul 0.474510 add exch dup 0.110000 sub 1.568628 mul 0.721569 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.431372 mul 0.247059 add exch dup 0.130000 sub 1.764706 mul 0.529412 add exch dup 0.130000 sub 0.823529 mul 0.752941 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 2.745100 mul 0.203922 add exch dup 0.230000 sub 0.000000 mul 0.705882 add exch dup 0.230000 sub 1.176472 mul 0.835294 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274508 mul 0.231373 add exch dup 0.240000 sub -0.392157 mul 0.705882 add exch dup 0.240000 sub 1.960783 mul 0.847059 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.294118 add exch dup 0.250000 sub 0.000000 mul 0.701961 add exch dup 0.250000 sub 0.784314 mul 0.866667 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.313726 add exch dup 0.260000 sub -0.098039 mul 0.701961 add exch dup 0.260000 sub 0.294117 mul 0.874510 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.456583 mul 0.352941 add exch dup 0.300000 sub -0.168067 mul 0.698039 add exch dup 0.300000 sub 0.392157 mul 0.886275 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub 2.107844 mul 0.454902 add exch dup 0.370000 sub -0.245098 mul 0.686275 add exch dup 0.370000 sub 0.637255 mul 0.913725 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.065359 mul 0.623529 add exch dup 0.450000 sub -1.307189 mul 0.666667 add exch dup 0.450000 sub -0.326797 mul 0.964706 add exch } if dup 0.510000 gt { exch pop exch pop exch pop dup 0.510000 sub 0.039216 mul 0.627451 add exch dup 0.510000 sub -0.980392 mul 0.588235 add exch dup 0.510000 sub -0.274510 mul 0.945098 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub 0.000000 mul 0.631373 add exch dup 0.610000 sub -0.588235 mul 0.490196 add exch dup 0.610000 sub -0.196078 mul 0.917647 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.973856 mul 0.631373 add exch dup 0.670000 sub -1.470588 mul 0.454902 add exch dup 0.670000 sub -1.405229 mul 0.905882 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -2.254904 mul 0.274510 add exch dup 0.790000 sub -2.450983 mul 0.278431 add exch dup 0.790000 sub -1.274511 mul 0.737255 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.092272 mul 0.184314 add exch dup 0.830000 sub -1.061130 mul 0.180392 add exch dup 0.830000 sub -1.545559 mul 0.686275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

156 0 obj
  3460
endobj

157 0 obj
  << /Length 158 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.125490 exch 0.000000 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 9.019608 mul 0.125490 add exch dup 0.000000 sub 13.725492 mul 0.000000 add exch dup 0.000000 sub 9.019610 mul 0.462745 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 4.313726 mul 0.215686 add exch dup 0.010000 sub 6.535948 mul 0.137255 add exch dup 0.010000 sub 4.052288 mul 0.552941 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 5.294117 mul 0.345098 add exch dup 0.040000 sub 8.039215 mul 0.333333 add exch dup 0.040000 sub 5.294117 mul 0.674510 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 4.313727 mul 0.450980 add exch dup 0.060000 sub 6.274511 mul 0.494118 add exch dup 0.060000 sub 3.921568 mul 0.780392 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.941176 mul 0.537255 add exch dup 0.080000 sub 4.509803 mul 0.619608 add exch dup 0.080000 sub 2.941176 mul 0.858824 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.764706 mul 0.596078 add exch dup 0.100000 sub 2.745098 mul 0.709804 add exch dup 0.100000 sub 1.764706 mul 0.917647 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.631373 add exch dup 0.120000 sub 1.960785 mul 0.764706 add exch dup 0.120000 sub 1.176471 mul 0.952941 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.241327 mul 0.643137 add exch dup 0.130000 sub 0.090498 mul 0.784314 add exch dup 0.130000 sub 0.241327 mul 0.964706 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.000000 mul 0.674510 add exch dup 0.260000 sub 0.000000 mul 0.796078 add exch dup 0.260000 sub 0.000000 mul 0.996078 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.019608 mul 0.674510 add exch dup 0.280000 sub -0.235294 mul 0.796078 add exch dup 0.280000 sub -0.549020 mul 0.996078 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub -1.198257 mul 0.572549 add exch dup 0.380000 sub -0.283224 mul 0.772549 add exch dup 0.380000 sub -0.610022 mul 0.941176 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.356863 add exch dup 0.560000 sub -0.156863 mul 0.721569 add exch dup 0.560000 sub -0.313725 mul 0.831373 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.254902 mul 0.337255 add exch dup 0.610000 sub -0.313725 mul 0.713726 add exch dup 0.610000 sub -0.784313 mul 0.815686 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -1.400560 mul 0.274510 add exch dup 0.660000 sub -0.392157 mul 0.698039 add exch dup 0.660000 sub -1.008403 mul 0.776471 add exch } if dup 0.730000 gt { exch pop exch pop exch pop dup 0.730000 sub -2.156863 mul 0.176471 add exch dup 0.730000 sub -0.653595 mul 0.670588 add exch dup 0.730000 sub -1.503268 mul 0.705882 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.612745 mul 0.047059 add exch dup 0.790000 sub -3.063726 mul 0.631373 add exch dup 0.790000 sub -0.808824 mul 0.615686 add exch } if dup 0.950000 gt { exch pop exch pop exch pop dup 0.950000 sub 0.549019 mul 0.145098 add exch dup 0.950000 sub -2.823529 mul 0.141176 add exch dup 0.950000 sub -0.784313 mul 0.486275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.172549 exch 0.000000 exch 0.447059 exch } if pop }
endstream
endobj

158 0 obj
  3463
endobj

159 0 obj
  << /Length 160 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.196078 exch 0.000000 exch 0.490196 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 4.705883 mul 0.196078 add exch dup 0.000000 sub 6.078432 mul 0.000000 add exch dup 0.000000 sub 4.509805 mul 0.490196 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 3.431372 mul 0.290196 add exch dup 0.020000 sub 4.509805 mul 0.121569 add exch dup 0.020000 sub 3.333333 mul 0.580392 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.398693 mul 0.427451 add exch dup 0.060000 sub 4.313725 mul 0.301961 add exch dup 0.060000 sub 3.267973 mul 0.713726 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.960785 mul 0.529412 add exch dup 0.090000 sub 2.745100 mul 0.431373 add exch dup 0.090000 sub 1.960785 mul 0.811765 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 2.352942 mul 0.588235 add exch dup 0.120000 sub 2.745098 mul 0.513726 add exch dup 0.120000 sub 2.352942 mul 0.870588 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.723982 mul 0.611765 add exch dup 0.130000 sub 0.271493 mul 0.541176 add exch dup 0.130000 sub 0.723982 mul 0.894118 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.392157 mul 0.705882 add exch dup 0.260000 sub 0.196078 mul 0.576471 add exch dup 0.260000 sub 0.392157 mul 0.988235 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.713726 add exch dup 0.280000 sub -0.174292 mul 0.580392 add exch dup 0.280000 sub -0.348584 mul 0.996078 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.300310 mul 0.611765 add exch dup 0.370000 sub -0.185759 mul 0.564706 add exch dup 0.370000 sub -0.392157 mul 0.964706 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.326797 mul 0.364706 add exch dup 0.560000 sub -0.130719 mul 0.529412 add exch dup 0.560000 sub -0.326797 mul 0.890196 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.896359 mul 0.345098 add exch dup 0.620000 sub -0.280112 mul 0.521569 add exch dup 0.620000 sub -0.728291 mul 0.870588 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -1.400560 mul 0.282353 add exch dup 0.690000 sub -0.504202 mul 0.501961 add exch dup 0.690000 sub -1.176471 mul 0.819608 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -1.437907 mul 0.184314 add exch dup 0.760000 sub -0.522875 mul 0.466667 add exch dup 0.760000 sub -1.307188 mul 0.737255 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.205416 mul 0.141176 add exch dup 0.790000 sub -2.147526 mul 0.450980 add exch dup 0.790000 sub -1.027078 mul 0.698039 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.184314 exch 0.000000 exch 0.482353 exch } if pop }
endstream
endobj

160 0 obj
  2878
endobj

161 0 obj
  << /Length 162 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.164706 exch 0.035294 exch 0.494118 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 4.705883 mul 0.164706 add exch dup 0.000000 sub 7.058824 mul 0.035294 add exch dup 0.000000 sub 4.575164 mul 0.494118 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 5.882352 mul 0.305882 add exch dup 0.030000 sub 8.627451 mul 0.247059 add exch dup 0.030000 sub 5.686274 mul 0.631373 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 3.137256 mul 0.423529 add exch dup 0.050000 sub 4.444446 mul 0.419608 add exch dup 0.050000 sub 3.006536 mul 0.745098 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 3.137254 mul 0.517647 add exch dup 0.080000 sub 4.901960 mul 0.552941 add exch dup 0.080000 sub 3.137254 mul 0.835294 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 2.156863 mul 0.580392 add exch dup 0.100000 sub 2.941177 mul 0.650980 add exch dup 0.100000 sub 1.960785 mul 0.898039 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.623529 add exch dup 0.120000 sub 1.960785 mul 0.709804 add exch dup 0.120000 sub 1.176471 mul 0.937255 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.361991 mul 0.635294 add exch dup 0.130000 sub 0.150830 mul 0.729412 add exch dup 0.130000 sub 0.361991 mul 0.949020 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.000000 mul 0.682353 add exch dup 0.260000 sub 0.000000 mul 0.749020 add exch dup 0.260000 sub 0.000000 mul 0.996078 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.019608 mul 0.682353 add exch dup 0.280000 sub -0.235294 mul 0.749020 add exch dup 0.280000 sub -0.470588 mul 0.996078 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub -1.241830 mul 0.580392 add exch dup 0.380000 sub -0.261438 mul 0.725490 add exch dup 0.380000 sub -0.566449 mul 0.949020 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.356863 add exch dup 0.560000 sub -0.156863 mul 0.678431 add exch dup 0.560000 sub -0.313725 mul 0.847059 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.045752 mul 0.337255 add exch dup 0.610000 sub -0.261438 mul 0.670588 add exch dup 0.610000 sub -0.718954 mul 0.831373 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.633987 mul 0.274510 add exch dup 0.670000 sub -0.522876 mul 0.654902 add exch dup 0.670000 sub -1.176471 mul 0.788235 add exch } if dup 0.730000 gt { exch pop exch pop exch pop dup 0.730000 sub -1.830065 mul 0.176471 add exch dup 0.730000 sub -0.522876 mul 0.623529 add exch dup 0.730000 sub -1.372549 mul 0.717647 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.501089 mul 0.066667 add exch dup 0.790000 sub -2.723312 mul 0.592157 add exch dup 0.790000 sub -0.827887 mul 0.635294 add exch } if dup 0.970000 gt { exch pop exch pop exch pop dup 0.970000 sub 0.653595 mul 0.156863 add exch dup 0.970000 sub -3.398696 mul 0.101961 add exch dup 0.970000 sub -1.045753 mul 0.486275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.176471 exch 0.000000 exch 0.454902 exch } if pop }
endstream
endobj

162 0 obj
  3268
endobj

163 0 obj
  << /Length 164 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.145098 exch 0.000000 exch 0.474510 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.147059 mul 0.145098 add exch dup 0.000000 sub 3.333333 mul 0.000000 add exch dup 0.000000 sub 1.666667 mul 0.474510 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub -0.078431 mul 0.133333 add exch dup 0.080000 sub 3.058824 mul 0.266667 add exch dup 0.080000 sub 1.490196 mul 0.607843 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.549020 mul 0.129412 add exch dup 0.130000 sub 2.274510 mul 0.419608 add exch dup 0.130000 sub 1.058823 mul 0.682353 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 5.882359 mul 0.074510 add exch dup 0.230000 sub 0.000000 mul 0.647059 add exch dup 0.230000 sub 1.960786 mul 0.788235 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274506 mul 0.133333 add exch dup 0.240000 sub -0.392157 mul 0.647059 add exch dup 0.240000 sub 1.960783 mul 0.807843 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.196078 add exch dup 0.250000 sub 0.000000 mul 0.643137 add exch dup 0.250000 sub 0.784314 mul 0.827451 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.307190 mul 0.215686 add exch dup 0.260000 sub -0.130719 mul 0.643137 add exch dup 0.260000 sub 0.392157 mul 0.835294 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 2.039215 mul 0.254902 add exch dup 0.290000 sub -0.156863 mul 0.639216 add exch dup 0.290000 sub 0.705882 mul 0.847059 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub 2.745098 mul 0.356863 add exch dup 0.340000 sub -0.130719 mul 0.631373 add exch dup 0.340000 sub 0.980392 mul 0.882353 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub 2.823530 mul 0.521569 add exch dup 0.400000 sub -0.235294 mul 0.623529 add exch dup 0.400000 sub 0.941177 mul 0.941176 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.539216 mul 0.662745 add exch dup 0.450000 sub -1.421569 mul 0.611765 add exch dup 0.450000 sub -0.147059 mul 0.988235 add exch } if dup 0.530000 gt { exch pop exch pop exch pop dup 0.530000 sub 0.392157 mul 0.705882 add exch dup 0.530000 sub -1.089324 mul 0.498039 add exch dup 0.530000 sub -0.087146 mul 0.976471 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub 0.313725 mul 0.741176 add exch dup 0.620000 sub -0.705882 mul 0.400000 add exch dup 0.620000 sub -0.078431 mul 0.968627 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -3.366013 mul 0.756863 add exch dup 0.670000 sub -1.764706 mul 0.364706 add exch dup 0.670000 sub -1.503268 mul 0.964706 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -3.137258 mul 0.352941 add exch dup 0.790000 sub -2.156865 mul 0.152941 add exch dup 0.790000 sub -1.470590 mul 0.784314 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.346021 mul 0.227451 add exch dup 0.830000 sub -0.392157 mul 0.066667 add exch dup 0.830000 sub -1.799308 mul 0.725490 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.419608 exch } if pop }
endstream
endobj

164 0 obj
  3269
endobj

165 0 obj
  << /Length 166 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.262745 exch 0.000000 exch 0.513726 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.666667 mul 0.262745 add exch dup 0.000000 sub 2.666667 mul 0.000000 add exch dup 0.000000 sub 2.588235 mul 0.513726 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 2.745098 mul 0.396078 add exch dup 0.050000 sub 2.745098 mul 0.133333 add exch dup 0.050000 sub 2.823529 mul 0.643137 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.830066 mul 0.533333 add exch dup 0.100000 sub 1.830066 mul 0.270588 add exch dup 0.100000 sub 1.699347 mul 0.784314 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.146305 mul 0.588235 add exch dup 0.130000 sub 0.422323 mul 0.325490 add exch dup 0.130000 sub 1.146305 mul 0.835294 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.784313 mul 0.737255 add exch dup 0.260000 sub 0.196078 mul 0.380392 add exch dup 0.260000 sub 0.784313 mul 0.984314 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.752941 add exch dup 0.280000 sub -0.098039 mul 0.384314 add exch dup 0.280000 sub -0.196078 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.382869 mul 0.650980 add exch dup 0.360000 sub -0.103199 mul 0.376471 add exch dup 0.360000 sub -0.206398 mul 0.984314 add exch } if dup 0.550000 gt { exch pop exch pop exch pop dup 0.550000 sub -1.960786 mul 0.388235 add exch dup 0.550000 sub 0.000000 mul 0.356863 add exch dup 0.550000 sub -0.392157 mul 0.945098 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.224090 mul 0.368627 add exch dup 0.560000 sub -0.112045 mul 0.356863 add exch dup 0.560000 sub -0.280112 mul 0.941176 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.637255 mul 0.352941 add exch dup 0.630000 sub -0.294118 mul 0.349020 add exch dup 0.630000 sub -0.784314 mul 0.921569 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -0.931372 mul 0.301961 add exch dup 0.710000 sub -0.490196 mul 0.325490 add exch dup 0.710000 sub -1.127450 mul 0.858824 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.149393 mul 0.227451 add exch dup 0.790000 sub -1.363212 mul 0.286275 add exch dup 0.790000 sub -1.213819 mul 0.768627 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.196078 exch 0.000000 exch 0.513726 exch } if pop }
endstream
endobj

166 0 obj
  2490
endobj

167 0 obj
  << /Length 168 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.109804 exch 0.000000 exch 0.458824 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 4.509804 mul 0.109804 add exch dup 0.000000 sub 9.215687 mul 0.000000 add exch dup 0.000000 sub 5.294119 mul 0.458824 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 3.267974 mul 0.200000 add exch dup 0.020000 sub 6.405229 mul 0.184314 add exch dup 0.020000 sub 3.921568 mul 0.564706 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 3.725490 mul 0.298039 add exch dup 0.050000 sub 7.843138 mul 0.376471 add exch dup 0.050000 sub 4.509804 mul 0.682353 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 1.830065 mul 0.372549 add exch dup 0.070000 sub 3.660130 mul 0.533333 add exch dup 0.070000 sub 2.091503 mul 0.772549 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.764706 mul 0.427451 add exch dup 0.100000 sub 3.333334 mul 0.643137 add exch dup 0.100000 sub 1.960785 mul 0.835294 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.462745 add exch dup 0.120000 sub 2.352942 mul 0.709804 add exch dup 0.120000 sub 1.568628 mul 0.874510 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.196078 mul 0.474510 add exch dup 0.130000 sub 0.823529 mul 0.733333 add exch dup 0.130000 sub 0.352941 mul 0.890196 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 2.745100 mul 0.454902 add exch dup 0.230000 sub -0.392157 mul 0.815686 add exch dup 0.230000 sub 0.784314 mul 0.925490 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 0.980394 mul 0.482353 add exch dup 0.240000 sub 0.000000 mul 0.811765 add exch dup 0.240000 sub 0.392157 mul 0.933333 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.261438 mul 0.501961 add exch dup 0.260000 sub -0.183007 mul 0.811765 add exch dup 0.260000 sub -0.078431 mul 0.941176 add exch } if dup 0.410000 gt { exch pop exch pop exch pop dup 0.410000 sub 0.294118 mul 0.541176 add exch dup 0.410000 sub -0.294118 mul 0.784314 add exch dup 0.410000 sub -0.098039 mul 0.929412 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.915033 mul 0.552941 add exch dup 0.450000 sub -0.784314 mul 0.772549 add exch dup 0.450000 sub -0.653595 mul 0.925490 add exch } if dup 0.480000 gt { exch pop exch pop exch pop dup 0.480000 sub -0.816993 mul 0.525490 add exch dup 0.480000 sub -0.718954 mul 0.749020 add exch dup 0.480000 sub -0.686274 mul 0.905882 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.504202 mul 0.427451 add exch dup 0.600000 sub -0.448179 mul 0.662745 add exch dup 0.600000 sub -0.392157 mul 0.823529 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.222222 mul 0.392157 add exch dup 0.670000 sub -0.915033 mul 0.631373 add exch dup 0.670000 sub -1.209150 mul 0.796078 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.686275 mul 0.125490 add exch dup 0.790000 sub -3.039219 mul 0.521569 add exch dup 0.790000 sub -0.980393 mul 0.650980 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.392157 mul 0.098039 add exch dup 0.830000 sub -2.352941 mul 0.400000 add exch dup 0.830000 sub -1.084198 mul 0.611765 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

168 0 obj
  3463
endobj

169 0 obj
  << /Length 170 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.301961 exch 0.000000 exch 0.529412 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.296919 mul 0.301961 add exch dup 0.000000 sub 1.624650 mul 0.000000 add exch dup 0.000000 sub 2.296919 mul 0.529412 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 1.764706 mul 0.462745 add exch dup 0.070000 sub 1.307190 mul 0.113725 add exch dup 0.070000 sub 1.764706 mul 0.690196 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.417798 mul 0.568627 add exch dup 0.130000 sub 0.512821 mul 0.192157 add exch dup 0.130000 sub 1.417798 mul 0.796078 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.752941 add exch dup 0.260000 sub 0.392157 mul 0.258824 add exch dup 0.260000 sub 0.980392 mul 0.980392 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.772549 add exch dup 0.280000 sub -0.049020 mul 0.266667 add exch dup 0.280000 sub -0.098039 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.459695 mul 0.670588 add exch dup 0.360000 sub -0.087146 mul 0.262745 add exch dup 0.360000 sub -0.087146 mul 0.992157 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -1.764707 mul 0.407843 add exch dup 0.540000 sub 0.000000 mul 0.247059 add exch dup 0.540000 sub -0.196079 mul 0.976471 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.168067 mul 0.372549 add exch dup 0.560000 sub -0.112045 mul 0.247059 add exch dup 0.560000 sub -0.280112 mul 0.972549 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.441177 mul 0.360784 add exch dup 0.630000 sub -0.294118 mul 0.239216 add exch dup 0.630000 sub -0.784314 mul 0.952941 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -0.588235 mul 0.325490 add exch dup 0.710000 sub -0.343137 mul 0.215686 add exch dup 0.710000 sub -0.980392 mul 0.890196 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.354809 mul 0.278431 add exch dup 0.790000 sub -0.896359 mul 0.188235 add exch dup 0.790000 sub -1.325864 mul 0.811765 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.203922 exch 0.000000 exch 0.533333 exch } if pop }
endstream
endobj

170 0 obj
  2296
endobj

171 0 obj
  << /Length 172 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.247059 exch 0.000000 exch 0.509804 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.352942 mul 0.247059 add exch dup 0.000000 sub 2.745098 mul 0.000000 add exch dup 0.000000 sub 2.352941 mul 0.509804 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 3.450980 mul 0.270588 add exch dup 0.010000 sub 3.843138 mul 0.027451 add exch dup 0.010000 sub 3.450980 mul 0.533333 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 2.196079 mul 0.443137 add exch dup 0.060000 sub 2.352941 mul 0.219608 add exch dup 0.060000 sub 2.117647 mul 0.705882 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 1.960785 mul 0.552941 add exch dup 0.110000 sub 2.156863 mul 0.337255 add exch dup 0.110000 sub 1.960785 mul 0.811765 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.055807 mul 0.592157 add exch dup 0.130000 sub 0.392157 mul 0.380392 add exch dup 0.130000 sub 1.025641 mul 0.850980 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.588235 mul 0.729412 add exch dup 0.260000 sub 0.196078 mul 0.431373 add exch dup 0.260000 sub 0.784313 mul 0.984314 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.741176 add exch dup 0.280000 sub -0.098039 mul 0.435294 add exch dup 0.280000 sub -0.245098 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.382869 mul 0.639216 add exch dup 0.360000 sub -0.144479 mul 0.427451 add exch dup 0.360000 sub -0.268318 mul 0.980392 add exch } if dup 0.550000 gt { exch pop exch pop exch pop dup 0.550000 sub -0.784314 mul 0.376471 add exch dup 0.550000 sub 0.000000 mul 0.400000 add exch dup 0.550000 sub 0.000000 mul 0.929412 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.326797 mul 0.368627 add exch dup 0.560000 sub -0.130719 mul 0.400000 add exch dup 0.560000 sub -0.326797 mul 0.929412 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.686275 mul 0.349020 add exch dup 0.620000 sub -0.294118 mul 0.392157 add exch dup 0.620000 sub -0.784314 mul 0.909804 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -1.002178 mul 0.294118 add exch dup 0.700000 sub -0.435730 mul 0.368627 add exch dup 0.700000 sub -1.089324 mul 0.847059 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.037348 mul 0.203922 add exch dup 0.790000 sub -1.568628 mul 0.329412 add exch dup 0.790000 sub -1.157797 mul 0.749020 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.196078 exch 0.000000 exch 0.505882 exch } if pop }
endstream
endobj

172 0 obj
  2683
endobj

173 0 obj
  << /Length 174 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.227451 exch 0.000000 exch 0.501961 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.235294 mul 0.227451 add exch dup 0.000000 sub 3.823530 mul 0.000000 add exch dup 0.000000 sub 3.137255 mul 0.501961 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 3.333333 mul 0.356863 add exch dup 0.040000 sub 4.019608 mul 0.152941 add exch dup 0.040000 sub 3.333333 mul 0.627451 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.745099 mul 0.490196 add exch dup 0.080000 sub 3.267973 mul 0.313726 add exch dup 0.080000 sub 2.614379 mul 0.760784 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 1.568628 mul 0.572549 add exch dup 0.110000 sub 1.764706 mul 0.411765 add exch dup 0.110000 sub 1.568628 mul 0.839216 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.904977 mul 0.603922 add exch dup 0.130000 sub 0.331825 mul 0.447059 add exch dup 0.130000 sub 0.904977 mul 0.870588 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.588235 mul 0.721569 add exch dup 0.260000 sub 0.196078 mul 0.490196 add exch dup 0.260000 sub 0.588235 mul 0.988235 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.733333 add exch dup 0.280000 sub -0.130719 mul 0.494118 add exch dup 0.280000 sub -0.261438 mul 1.000000 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.403509 mul 0.631373 add exch dup 0.370000 sub -0.165119 mul 0.482353 add exch dup 0.370000 sub -0.330237 mul 0.976471 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.326797 mul 0.364706 add exch dup 0.560000 sub -0.130719 mul 0.450980 add exch dup 0.560000 sub -0.326797 mul 0.913725 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.735294 mul 0.345098 add exch dup 0.620000 sub -0.294118 mul 0.443137 add exch dup 0.620000 sub -0.784314 mul 0.894118 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -1.176470 mul 0.286275 add exch dup 0.700000 sub -0.479303 mul 0.419608 add exch dup 0.700000 sub -1.176470 mul 0.831373 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.056022 mul 0.180392 add exch dup 0.790000 sub -1.792717 mul 0.376471 add exch dup 0.790000 sub -1.083100 mul 0.725490 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.192157 exch 0.000000 exch 0.498039 exch } if pop }
endstream
endobj

174 0 obj
  2487
endobj

175 0 obj
  << /Length 176 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.254902 exch 0.000000 exch 0.509804 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.810457 mul 0.254902 add exch dup 0.000000 sub 2.941177 mul 0.000000 add exch dup 0.000000 sub 2.745098 mul 0.509804 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 2.431373 mul 0.423529 add exch dup 0.060000 sub 2.588235 mul 0.176471 add exch dup 0.060000 sub 2.431372 mul 0.674510 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 2.352942 mul 0.545098 add exch dup 0.110000 sub 2.352942 mul 0.305882 add exch dup 0.110000 sub 2.352942 mul 0.796078 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.085973 mul 0.592157 add exch dup 0.130000 sub 0.392157 mul 0.352941 add exch dup 0.130000 sub 1.085973 mul 0.843137 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.784313 mul 0.733333 add exch dup 0.260000 sub 0.392157 mul 0.403922 add exch dup 0.260000 sub 0.784313 mul 0.984314 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.749020 add exch dup 0.280000 sub -0.098039 mul 0.411765 add exch dup 0.280000 sub -0.196078 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.382869 mul 0.647059 add exch dup 0.360000 sub -0.144479 mul 0.403922 add exch dup 0.360000 sub -0.227038 mul 0.984314 add exch } if dup 0.550000 gt { exch pop exch pop exch pop dup 0.550000 sub -1.568629 mul 0.384314 add exch dup 0.550000 sub 0.000000 mul 0.376471 add exch dup 0.550000 sub -0.392157 mul 0.941176 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.326797 mul 0.368627 add exch dup 0.560000 sub -0.130719 mul 0.376471 add exch dup 0.560000 sub -0.326797 mul 0.937255 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.588235 mul 0.349020 add exch dup 0.620000 sub -0.294118 mul 0.368627 add exch dup 0.620000 sub -0.784314 mul 0.917647 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -0.958605 mul 0.301961 add exch dup 0.700000 sub -0.435730 mul 0.345098 add exch dup 0.700000 sub -1.089324 mul 0.854902 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.093371 mul 0.215686 add exch dup 0.790000 sub -1.456583 mul 0.305882 add exch dup 0.790000 sub -1.176471 mul 0.756863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.196078 exch 0.000000 exch 0.509804 exch } if pop }
endstream
endobj

176 0 obj
  2490
endobj

177 0 obj
  << /Length 178 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.101961 exch 0.000000 exch 0.454902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 4.313726 mul 0.101961 add exch dup 0.000000 sub 6.666667 mul 0.000000 add exch dup 0.000000 sub 3.921568 mul 0.454902 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 13.333334 mul 0.145098 add exch dup 0.010000 sub 20.784315 mul 0.066667 add exch dup 0.010000 sub 12.941179 mul 0.494118 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 5.686275 mul 0.278431 add exch dup 0.020000 sub 9.215686 mul 0.274510 add exch dup 0.020000 sub 5.686275 mul 0.623529 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 4.705882 mul 0.392157 add exch dup 0.040000 sub 7.254903 mul 0.458824 add exch dup 0.040000 sub 4.509804 mul 0.737255 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.725492 mul 0.486275 add exch dup 0.060000 sub 5.686275 mul 0.603922 add exch dup 0.060000 sub 3.529412 mul 0.827451 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.549019 mul 0.560784 add exch dup 0.080000 sub 4.117646 mul 0.717647 add exch dup 0.080000 sub 2.549019 mul 0.898039 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.568628 mul 0.611765 add exch dup 0.100000 sub 2.549020 mul 0.800000 add exch dup 0.100000 sub 1.372549 mul 0.949020 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.643137 add exch dup 0.120000 sub 1.568628 mul 0.850980 add exch dup 0.120000 sub 1.176471 mul 0.976471 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.060332 mul 0.654902 add exch dup 0.130000 sub 0.030166 mul 0.866667 add exch dup 0.130000 sub 0.090498 mul 0.988235 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.000000 mul 0.662745 add exch dup 0.260000 sub 0.000000 mul 0.870588 add exch dup 0.260000 sub -0.196078 mul 1.000000 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.019608 mul 0.662745 add exch dup 0.280000 sub -0.274510 mul 0.870588 add exch dup 0.280000 sub -0.627451 mul 0.996078 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub -1.154684 mul 0.560784 add exch dup 0.380000 sub -0.305011 mul 0.843137 add exch dup 0.380000 sub -0.675381 mul 0.933333 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.490196 mul 0.352941 add exch dup 0.560000 sub -0.196078 mul 0.788235 add exch dup 0.560000 sub -0.392157 mul 0.811765 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -1.045752 mul 0.333333 add exch dup 0.600000 sub -0.261438 mul 0.780392 add exch dup 0.600000 sub -0.653595 mul 0.796078 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -1.633987 mul 0.270588 add exch dup 0.660000 sub -0.457516 mul 0.764706 add exch dup 0.660000 sub -1.045752 mul 0.756863 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -2.287584 mul 0.172549 add exch dup 0.720000 sub -0.718955 mul 0.737255 add exch dup 0.720000 sub -1.568629 mul 0.694118 add exch } if dup 0.780000 gt { exch pop exch pop exch pop dup 0.780000 sub -1.960775 mul 0.035294 add exch dup 0.780000 sub -0.392155 mul 0.694118 add exch dup 0.780000 sub -1.176465 mul 0.600000 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.732026 mul 0.015686 add exch dup 0.790000 sub -3.267975 mul 0.690196 add exch dup 0.790000 sub -0.732026 mul 0.588235 add exch } if dup 0.940000 gt { exch pop exch pop exch pop dup 0.940000 sub 0.718954 mul 0.125490 add exch dup 0.940000 sub -3.333333 mul 0.200000 add exch dup 0.940000 sub -0.718954 mul 0.478431 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.435294 exch } if pop }
endstream
endobj

178 0 obj
  3857
endobj

179 0 obj
  << /Length 180 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.270588 exch 0.000000 exch 0.517647 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.450980 mul 0.270588 add exch dup 0.000000 sub 2.352941 mul 0.000000 add exch dup 0.000000 sub 2.450980 mul 0.517647 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 2.614379 mul 0.368627 add exch dup 0.040000 sub 2.483660 mul 0.094118 add exch dup 0.040000 sub 2.549019 mul 0.615686 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.960785 mul 0.525490 add exch dup 0.100000 sub 1.830066 mul 0.243137 add exch dup 0.100000 sub 1.960785 mul 0.768627 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.206636 mul 0.584314 add exch dup 0.130000 sub 0.452489 mul 0.298039 add exch dup 0.130000 sub 1.206636 mul 0.827451 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.784313 mul 0.741176 add exch dup 0.260000 sub 0.196078 mul 0.356863 add exch dup 0.260000 sub 0.784313 mul 0.984314 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.756863 add exch dup 0.280000 sub -0.098039 mul 0.360784 add exch dup 0.280000 sub -0.147059 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.459695 mul 0.654902 add exch dup 0.360000 sub -0.108932 mul 0.352941 add exch dup 0.360000 sub -0.196078 mul 0.988235 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -1.176472 mul 0.392157 add exch dup 0.540000 sub 0.000000 mul 0.333333 add exch dup 0.540000 sub -0.196079 mul 0.952941 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.224090 mul 0.368627 add exch dup 0.560000 sub -0.112045 mul 0.333333 add exch dup 0.560000 sub -0.280112 mul 0.949020 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.588235 mul 0.352941 add exch dup 0.630000 sub -0.294118 mul 0.325490 add exch dup 0.630000 sub -0.784314 mul 0.929412 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -0.882353 mul 0.305882 add exch dup 0.710000 sub -0.441176 mul 0.301961 add exch dup 0.710000 sub -1.127450 mul 0.866667 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.168067 mul 0.235294 add exch dup 0.790000 sub -1.269841 mul 0.266667 add exch dup 0.790000 sub -1.232493 mul 0.776471 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.200000 exch 0.000000 exch 0.517647 exch } if pop }
endstream
endobj

180 0 obj
  2490
endobj

181 0 obj
  << /Length 182 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.231373 exch 0.000000 exch 0.501961 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.660131 mul 0.231373 add exch dup 0.000000 sub 4.313726 mul 0.000000 add exch dup 0.000000 sub 3.660131 mul 0.501961 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 2.823529 mul 0.341176 add exch dup 0.030000 sub 3.294118 mul 0.129412 add exch dup 0.030000 sub 2.745098 mul 0.611765 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.875818 mul 0.482353 add exch dup 0.080000 sub 3.398692 mul 0.294118 add exch dup 0.080000 sub 2.875817 mul 0.749020 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 1.568628 mul 0.568627 add exch dup 0.110000 sub 1.960785 mul 0.396078 add exch dup 0.110000 sub 1.568628 mul 0.835294 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.935143 mul 0.600000 add exch dup 0.130000 sub 0.331825 mul 0.435294 add exch dup 0.130000 sub 0.935143 mul 0.866667 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.588235 mul 0.721569 add exch dup 0.260000 sub 0.196078 mul 0.478431 add exch dup 0.260000 sub 0.588235 mul 0.988235 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.733333 add exch dup 0.280000 sub -0.130719 mul 0.482353 add exch dup 0.280000 sub -0.261438 mul 1.000000 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.403509 mul 0.631373 add exch dup 0.370000 sub -0.144479 mul 0.470588 add exch dup 0.370000 sub -0.309598 mul 0.976471 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.326797 mul 0.364706 add exch dup 0.560000 sub -0.130719 mul 0.443137 add exch dup 0.560000 sub -0.326797 mul 0.917647 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.735294 mul 0.345098 add exch dup 0.620000 sub -0.294118 mul 0.435294 add exch dup 0.620000 sub -0.784314 mul 0.898039 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -1.132897 mul 0.286275 add exch dup 0.700000 sub -0.479303 mul 0.411765 add exch dup 0.700000 sub -1.132897 mul 0.835294 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.037348 mul 0.184314 add exch dup 0.790000 sub -1.755369 mul 0.368627 add exch dup 0.790000 sub -1.120448 mul 0.733333 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.192157 exch 0.000000 exch 0.498039 exch } if pop }
endstream
endobj

182 0 obj
  2487
endobj

183 0 obj
  << /Length 184 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.192157 exch 0.000000 exch 0.490196 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 5.490197 mul 0.192157 add exch dup 0.000000 sub 7.058824 mul 0.000000 add exch dup 0.000000 sub 5.294119 mul 0.490196 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 3.333333 mul 0.301961 add exch dup 0.020000 sub 4.411765 mul 0.141176 add exch dup 0.020000 sub 3.235294 mul 0.596078 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.267974 mul 0.435294 add exch dup 0.060000 sub 4.313725 mul 0.317647 add exch dup 0.060000 sub 3.137254 mul 0.725490 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 2.091504 mul 0.533333 add exch dup 0.090000 sub 2.614380 mul 0.447059 add exch dup 0.090000 sub 1.960785 mul 0.819608 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.960785 mul 0.596078 add exch dup 0.120000 sub 2.745098 mul 0.525490 add exch dup 0.120000 sub 1.960785 mul 0.878431 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.693816 mul 0.615686 add exch dup 0.130000 sub 0.271493 mul 0.552941 add exch dup 0.130000 sub 0.693816 mul 0.898039 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.392157 mul 0.705882 add exch dup 0.260000 sub 0.196078 mul 0.588235 add exch dup 0.260000 sub 0.392157 mul 0.988235 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.713726 add exch dup 0.280000 sub -0.174292 mul 0.592157 add exch dup 0.280000 sub -0.348584 mul 0.996078 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.300310 mul 0.611765 add exch dup 0.370000 sub -0.206398 mul 0.576471 add exch dup 0.370000 sub -0.412797 mul 0.964706 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.326797 mul 0.364706 add exch dup 0.560000 sub -0.130719 mul 0.537255 add exch dup 0.560000 sub -0.326797 mul 0.886275 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -1.045752 mul 0.345098 add exch dup 0.620000 sub -0.326797 mul 0.529412 add exch dup 0.620000 sub -0.849673 mul 0.866667 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -1.225491 mul 0.282353 add exch dup 0.680000 sub -0.441177 mul 0.509804 add exch dup 0.680000 sub -1.029412 mul 0.815686 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -1.568626 mul 0.184314 add exch dup 0.760000 sub -0.522875 mul 0.474510 add exch dup 0.760000 sub -1.437907 mul 0.733333 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.224090 mul 0.137255 add exch dup 0.790000 sub -2.184874 mul 0.458824 add exch dup 0.790000 sub -0.989729 mul 0.690196 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.184314 exch 0.000000 exch 0.482353 exch } if pop }
endstream
endobj

184 0 obj
  2878
endobj

185 0 obj
  << /Length 186 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.184314 exch 0.000000 exch 0.486275 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 4.705883 mul 0.184314 add exch dup 0.000000 sub 6.405229 mul 0.000000 add exch dup 0.000000 sub 4.575164 mul 0.486275 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 4.183006 mul 0.325490 add exch dup 0.030000 sub 5.490196 mul 0.192157 add exch dup 0.030000 sub 4.052288 mul 0.623529 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.137255 mul 0.450980 add exch dup 0.060000 sub 4.052287 mul 0.356863 add exch dup 0.060000 sub 2.875816 mul 0.745098 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.830066 mul 0.545098 add exch dup 0.090000 sub 2.483661 mul 0.478431 add exch dup 0.090000 sub 1.830066 mul 0.831373 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.960785 mul 0.600000 add exch dup 0.120000 sub 2.745098 mul 0.552941 add exch dup 0.120000 sub 1.960785 mul 0.886275 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.633484 mul 0.619608 add exch dup 0.130000 sub 0.241327 mul 0.580392 add exch dup 0.130000 sub 0.663650 mul 0.905882 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.392157 mul 0.701961 add exch dup 0.260000 sub 0.196078 mul 0.611765 add exch dup 0.260000 sub 0.196078 mul 0.992157 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.709804 add exch dup 0.280000 sub -0.174292 mul 0.615686 add exch dup 0.280000 sub -0.392157 mul 0.996078 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.300310 mul 0.607843 add exch dup 0.370000 sub -0.206398 mul 0.600000 add exch dup 0.370000 sub -0.412797 mul 0.960784 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.360784 add exch dup 0.560000 sub -0.156863 mul 0.560784 add exch dup 0.560000 sub -0.392157 mul 0.882353 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -0.896359 mul 0.341176 add exch dup 0.610000 sub -0.280112 mul 0.552941 add exch dup 0.610000 sub -0.728291 mul 0.862745 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -1.225491 mul 0.278431 add exch dup 0.680000 sub -0.441177 mul 0.533333 add exch dup 0.680000 sub -1.029412 mul 0.811765 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -1.830063 mul 0.180392 add exch dup 0.760000 sub -0.653594 mul 0.498039 add exch dup 0.760000 sub -1.568626 mul 0.729412 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.280112 mul 0.125490 add exch dup 0.790000 sub -2.278245 mul 0.478431 add exch dup 0.790000 sub -0.971055 mul 0.682353 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.184314 exch 0.000000 exch 0.478431 exch } if pop }
endstream
endobj

186 0 obj
  2878
endobj

187 0 obj
  << /Length 188 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.235294 exch 0.000000 exch 0.505882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.006536 mul 0.235294 add exch dup 0.000000 sub 3.529412 mul 0.000000 add exch dup 0.000000 sub 3.006536 mul 0.505882 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 3.725490 mul 0.325490 add exch dup 0.030000 sub 4.215687 mul 0.105882 add exch dup 0.030000 sub 3.627451 mul 0.596078 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 2.254903 mul 0.474510 add exch dup 0.070000 sub 2.647059 mul 0.274510 add exch dup 0.070000 sub 2.156863 mul 0.741176 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 1.764706 mul 0.564706 add exch dup 0.110000 sub 1.960785 mul 0.380392 add exch dup 0.110000 sub 1.764706 mul 0.827451 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.965309 mul 0.600000 add exch dup 0.130000 sub 0.361991 mul 0.419608 add exch dup 0.130000 sub 0.935143 mul 0.862745 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.588235 mul 0.725490 add exch dup 0.260000 sub 0.196078 mul 0.466667 add exch dup 0.260000 sub 0.784313 mul 0.984314 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.737255 add exch dup 0.280000 sub -0.130719 mul 0.470588 add exch dup 0.280000 sub -0.261438 mul 1.000000 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.403509 mul 0.635294 add exch dup 0.370000 sub -0.144479 mul 0.458824 add exch dup 0.370000 sub -0.288958 mul 0.976471 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.326797 mul 0.368627 add exch dup 0.560000 sub -0.130719 mul 0.431373 add exch dup 0.560000 sub -0.326797 mul 0.921569 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.735294 mul 0.349020 add exch dup 0.620000 sub -0.294118 mul 0.423529 add exch dup 0.620000 sub -0.784314 mul 0.901961 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -1.132897 mul 0.290196 add exch dup 0.700000 sub -0.479303 mul 0.400000 add exch dup 0.700000 sub -1.132897 mul 0.839216 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.018674 mul 0.188235 add exch dup 0.790000 sub -1.699347 mul 0.356863 add exch dup 0.790000 sub -1.120448 mul 0.737255 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.192157 exch 0.000000 exch 0.501961 exch } if pop }
endstream
endobj

188 0 obj
  2487
endobj

189 0 obj
  << /Length 190 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.278431 exch 0.000000 exch 0.521569 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.941176 mul 0.278431 add exch dup 0.000000 sub 2.745098 mul 0.000000 add exch dup 0.000000 sub 2.941176 mul 0.521569 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 2.205883 mul 0.337255 add exch dup 0.020000 sub 1.960784 mul 0.054902 add exch dup 0.020000 sub 2.156863 mul 0.580392 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 2.222223 mul 0.513726 add exch dup 0.100000 sub 1.960785 mul 0.211765 add exch dup 0.100000 sub 2.222223 mul 0.752941 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.266968 mul 0.580392 add exch dup 0.130000 sub 0.482655 mul 0.270588 add exch dup 0.130000 sub 1.236802 mul 0.819608 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.784313 mul 0.745098 add exch dup 0.260000 sub 0.196078 mul 0.333333 add exch dup 0.260000 sub 0.980392 mul 0.980392 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.760784 add exch dup 0.280000 sub -0.098039 mul 0.337255 add exch dup 0.280000 sub -0.147059 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.459695 mul 0.658824 add exch dup 0.360000 sub -0.087146 mul 0.329412 add exch dup 0.360000 sub -0.152505 mul 0.988235 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -1.176472 mul 0.396078 add exch dup 0.540000 sub 0.000000 mul 0.313726 add exch dup 0.540000 sub -0.196079 mul 0.960784 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.224090 mul 0.372549 add exch dup 0.560000 sub -0.112045 mul 0.313726 add exch dup 0.560000 sub -0.280112 mul 0.956863 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.539216 mul 0.356863 add exch dup 0.630000 sub -0.294118 mul 0.305882 add exch dup 0.630000 sub -0.784314 mul 0.937255 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -0.833333 mul 0.313726 add exch dup 0.710000 sub -0.441176 mul 0.282353 add exch dup 0.710000 sub -1.127450 mul 0.874510 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.224090 mul 0.247059 add exch dup 0.790000 sub -1.176471 mul 0.247059 add exch dup 0.790000 sub -1.251167 mul 0.784314 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.200000 exch 0.000000 exch 0.521569 exch } if pop }
endstream
endobj

190 0 obj
  2490
endobj

191 0 obj
  << /Length 192 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.329412 exch 0.000000 exch 0.541176 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.749623 mul 0.329412 add exch dup 0.000000 sub 0.723982 mul 0.000000 add exch dup 0.000000 sub 1.749623 mul 0.541176 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.628959 mul 0.556863 add exch dup 0.130000 sub 0.603318 mul 0.094118 add exch dup 0.130000 sub 1.598793 mul 0.768627 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.768627 add exch dup 0.260000 sub 0.392157 mul 0.172549 add exch dup 0.260000 sub 1.176470 mul 0.976471 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.788235 add exch dup 0.280000 sub -0.049020 mul 0.180392 add exch dup 0.280000 sub 0.000000 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.545560 mul 0.686275 add exch dup 0.360000 sub -0.023068 mul 0.176471 add exch dup 0.360000 sub -0.023068 mul 1.000000 add exch } if dup 0.530000 gt { exch pop exch pop exch pop dup 0.530000 sub -1.568626 mul 0.423529 add exch dup 0.530000 sub 0.000000 mul 0.172549 add exch dup 0.530000 sub 0.000000 mul 0.996078 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.112045 mul 0.376471 add exch dup 0.560000 sub -0.112045 mul 0.172549 add exch dup 0.560000 sub -0.280112 mul 0.996078 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.261438 mul 0.368627 add exch dup 0.630000 sub -0.217865 mul 0.164706 add exch dup 0.630000 sub -0.697167 mul 0.976471 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -0.392157 mul 0.345098 add exch dup 0.720000 sub -0.392157 mul 0.145098 add exch dup 0.720000 sub -1.008403 mul 0.913725 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.504202 mul 0.317647 add exch dup 0.790000 sub -0.560224 mul 0.117647 add exch dup 0.790000 sub -1.400560 mul 0.843137 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.211765 exch 0.000000 exch 0.549020 exch } if pop }
endstream
endobj

192 0 obj
  2100
endobj

193 0 obj
  << /Length 194 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.094118 exch 0.000000 exch 0.450980 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 7.450981 mul 0.094118 add exch dup 0.000000 sub 11.764707 mul 0.000000 add exch dup 0.000000 sub 7.058826 mul 0.450980 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 6.470589 mul 0.168627 add exch dup 0.010000 sub 10.196079 mul 0.117647 add exch dup 0.010000 sub 6.274509 mul 0.521569 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 10.980392 mul 0.298039 add exch dup 0.030000 sub 17.647058 mul 0.321569 add exch dup 0.030000 sub 10.588235 mul 0.647059 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 4.509804 mul 0.407843 add exch dup 0.040000 sub 7.058825 mul 0.498039 add exch dup 0.040000 sub 4.509804 mul 0.752941 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.529413 mul 0.498039 add exch dup 0.060000 sub 5.686275 mul 0.639216 add exch dup 0.060000 sub 3.333333 mul 0.843137 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.549019 mul 0.568627 add exch dup 0.080000 sub 3.921568 mul 0.752941 add exch dup 0.080000 sub 2.352941 mul 0.909804 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.372549 mul 0.619608 add exch dup 0.100000 sub 2.352942 mul 0.831373 add exch dup 0.100000 sub 1.568628 mul 0.956863 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.647059 add exch dup 0.120000 sub 1.568628 mul 0.878431 add exch dup 0.120000 sub 0.784314 mul 0.988235 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.000000 mul 0.658824 add exch dup 0.130000 sub 0.000000 mul 0.894118 add exch dup 0.130000 sub 0.030166 mul 0.996078 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.000000 mul 0.658824 add exch dup 0.260000 sub 0.000000 mul 0.894118 add exch dup 0.260000 sub -0.196078 mul 1.000000 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.019608 mul 0.658824 add exch dup 0.280000 sub -0.274510 mul 0.894118 add exch dup 0.280000 sub -0.627451 mul 0.996078 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub -1.132898 mul 0.556863 add exch dup 0.380000 sub -0.326797 mul 0.866667 add exch dup 0.380000 sub -0.697168 mul 0.933333 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.490196 mul 0.352941 add exch dup 0.560000 sub -0.098039 mul 0.807843 add exch dup 0.560000 sub -0.294117 mul 0.807843 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -1.045752 mul 0.333333 add exch dup 0.600000 sub -0.326797 mul 0.803922 add exch dup 0.600000 sub -0.653595 mul 0.796078 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -1.633987 mul 0.270588 add exch dup 0.660000 sub -0.457516 mul 0.784314 add exch dup 0.660000 sub -1.111111 mul 0.756863 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -2.287584 mul 0.172549 add exch dup 0.720000 sub -0.653595 mul 0.756863 add exch dup 0.720000 sub -1.503269 mul 0.690196 add exch } if dup 0.780000 gt { exch pop exch pop exch pop dup 0.780000 sub -3.137239 mul 0.035294 add exch dup 0.780000 sub -0.784310 mul 0.717647 add exch dup 0.780000 sub -1.960774 mul 0.600000 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.732026 mul 0.003922 add exch dup 0.790000 sub -3.267975 mul 0.709804 add exch dup 0.790000 sub -0.679739 mul 0.580392 add exch } if dup 0.940000 gt { exch pop exch pop exch pop dup 0.940000 sub 0.849673 mul 0.113725 add exch dup 0.940000 sub -3.660131 mul 0.219608 add exch dup 0.940000 sub -0.784314 mul 0.478431 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.431373 exch } if pop }
endstream
endobj

194 0 obj
  3859
endobj

195 0 obj
  << /Length 196 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.090196 exch 0.000000 exch 0.450980 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 8.627451 mul 0.090196 add exch dup 0.000000 sub 14.117648 mul 0.000000 add exch dup 0.000000 sub 8.627454 mul 0.450980 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 6.470589 mul 0.176471 add exch dup 0.010000 sub 10.000000 mul 0.141176 add exch dup 0.010000 sub 6.078431 mul 0.537255 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 5.294117 mul 0.305882 add exch dup 0.030000 sub 8.627451 mul 0.341176 add exch dup 0.030000 sub 5.098039 mul 0.658824 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 9.019612 mul 0.411765 add exch dup 0.050000 sub 14.117649 mul 0.513726 add exch dup 0.050000 sub 8.627452 mul 0.760784 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 3.529412 mul 0.501961 add exch dup 0.060000 sub 5.490196 mul 0.654902 add exch dup 0.060000 sub 3.333333 mul 0.847059 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.352941 mul 0.572549 add exch dup 0.080000 sub 3.921568 mul 0.764706 add exch dup 0.080000 sub 2.352941 mul 0.913725 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.568628 mul 0.619608 add exch dup 0.100000 sub 2.352942 mul 0.843137 add exch dup 0.100000 sub 1.568628 mul 0.960784 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.784314 mul 0.650980 add exch dup 0.120000 sub 1.568628 mul 0.890196 add exch dup 0.120000 sub 0.784314 mul 0.992157 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.000000 mul 0.658824 add exch dup 0.130000 sub 0.000000 mul 0.905882 add exch dup 0.130000 sub 0.000000 mul 1.000000 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub -0.653595 mul 0.658824 add exch dup 0.260000 sub -0.196078 mul 0.905882 add exch dup 0.260000 sub -0.392157 mul 1.000000 add exch } if dup 0.320000 gt { exch pop exch pop exch pop dup 0.320000 sub -0.926916 mul 0.619608 add exch dup 0.320000 sub -0.249554 mul 0.894118 add exch dup 0.320000 sub -0.606061 mul 0.976471 add exch } if dup 0.430000 gt { exch pop exch pop exch pop dup 0.430000 sub -1.266968 mul 0.517647 add exch dup 0.430000 sub -0.361991 mul 0.866667 add exch dup 0.430000 sub -0.814480 mul 0.909804 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -1.446078 mul 0.352941 add exch dup 0.560000 sub -0.392157 mul 0.819608 add exch dup 0.560000 sub -0.931372 mul 0.803922 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -1.736695 mul 0.121569 add exch dup 0.720000 sub -0.504202 mul 0.756863 add exch dup 0.720000 sub -1.120448 mul 0.654902 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.812325 mul 0.000000 add exch dup 0.790000 sub -3.501401 mul 0.721569 add exch dup 0.790000 sub -0.700280 mul 0.576471 add exch } if dup 0.930000 gt { exch pop exch pop exch pop dup 0.930000 sub 0.728291 mul 0.113725 add exch dup 0.930000 sub -3.305322 mul 0.231373 add exch dup 0.930000 sub -0.672269 mul 0.478431 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.431373 exch } if pop }
endstream
endobj

196 0 obj
  3268
endobj

197 0 obj
  << /Length 198 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.286275 exch 0.000000 exch 0.521569 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.568627 mul 0.286275 add exch dup 0.000000 sub 1.176471 mul 0.000000 add exch dup 0.000000 sub 1.568627 mul 0.521569 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 2.450980 mul 0.301961 add exch dup 0.010000 sub 2.107843 mul 0.011765 add exch dup 0.010000 sub 2.450980 mul 0.537255 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.960785 mul 0.498039 add exch dup 0.090000 sub 1.568628 mul 0.180392 add exch dup 0.090000 sub 1.960785 mul 0.733333 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.297134 mul 0.576471 add exch dup 0.130000 sub 0.482655 mul 0.243137 add exch dup 0.130000 sub 1.297134 mul 0.811765 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.745098 add exch dup 0.260000 sub 0.392157 mul 0.305882 add exch dup 0.260000 sub 0.980392 mul 0.980392 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.764706 add exch dup 0.280000 sub -0.098039 mul 0.313726 add exch dup 0.280000 sub -0.147059 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.459695 mul 0.662745 add exch dup 0.360000 sub -0.087146 mul 0.305882 add exch dup 0.360000 sub -0.130719 mul 0.988235 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -1.372550 mul 0.400000 add exch dup 0.540000 sub 0.000000 mul 0.290196 add exch dup 0.540000 sub -0.196079 mul 0.964706 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.224090 mul 0.372549 add exch dup 0.560000 sub -0.112045 mul 0.290196 add exch dup 0.560000 sub -0.280112 mul 0.960784 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.490196 mul 0.356863 add exch dup 0.630000 sub -0.294118 mul 0.282353 add exch dup 0.630000 sub -0.784314 mul 0.941176 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -0.735294 mul 0.317647 add exch dup 0.710000 sub -0.392157 mul 0.258824 add exch dup 0.710000 sub -1.078431 mul 0.878431 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.261438 mul 0.258824 add exch dup 0.790000 sub -1.083100 mul 0.227451 add exch dup 0.790000 sub -1.269841 mul 0.792157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.203922 exch 0.000000 exch 0.525490 exch } if pop }
endstream
endobj

198 0 obj
  2490
endobj

199 0 obj
  << /Length 200 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.290196 exch 0.000000 exch 0.525490 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.265795 mul 0.290196 add exch dup 0.000000 sub 1.830065 mul 0.000000 add exch dup 0.000000 sub 2.222222 mul 0.525490 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 2.058825 mul 0.494118 add exch dup 0.090000 sub 1.666667 mul 0.164706 add exch dup 0.090000 sub 2.058824 mul 0.725490 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.327300 mul 0.576471 add exch dup 0.130000 sub 0.482655 mul 0.231373 add exch dup 0.130000 sub 1.327300 mul 0.807843 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.749020 add exch dup 0.260000 sub 0.392157 mul 0.294118 add exch dup 0.260000 sub 0.980392 mul 0.980392 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.768627 add exch dup 0.280000 sub -0.098039 mul 0.301961 add exch dup 0.280000 sub -0.098039 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.459695 mul 0.666667 add exch dup 0.360000 sub -0.087146 mul 0.294118 add exch dup 0.360000 sub -0.130719 mul 0.992157 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -1.568629 mul 0.403922 add exch dup 0.540000 sub 0.000000 mul 0.278431 add exch dup 0.540000 sub -0.196079 mul 0.968627 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.224090 mul 0.372549 add exch dup 0.560000 sub -0.112045 mul 0.278431 add exch dup 0.560000 sub -0.280112 mul 0.964706 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.490196 mul 0.356863 add exch dup 0.630000 sub -0.294118 mul 0.270588 add exch dup 0.630000 sub -0.784314 mul 0.945098 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -0.686274 mul 0.317647 add exch dup 0.710000 sub -0.392157 mul 0.247059 add exch dup 0.710000 sub -1.029411 mul 0.882353 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.280112 mul 0.262745 add exch dup 0.790000 sub -1.027078 mul 0.215686 add exch dup 0.790000 sub -1.288515 mul 0.800000 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.203922 exch 0.000000 exch 0.529412 exch } if pop }
endstream
endobj

200 0 obj
  2296
endobj

201 0 obj
  << /Length 202 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.145098 exch 0.000000 exch 0.474510 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.000000 mul 0.145098 add exch dup 0.000000 sub 1.960784 mul 0.000000 add exch dup 0.000000 sub 1.176471 mul 0.474510 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 0.049020 mul 0.145098 add exch dup 0.010000 sub 3.774510 mul 0.019608 add exch dup 0.010000 sub 1.862745 mul 0.486275 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 0.000000 mul 0.149020 add exch dup 0.090000 sub 2.941177 mul 0.321569 add exch dup 0.090000 sub 1.470588 mul 0.635294 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.509804 mul 0.149020 add exch dup 0.130000 sub 2.196078 mul 0.439216 add exch dup 0.130000 sub 1.019608 mul 0.694118 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 5.098044 mul 0.098039 add exch dup 0.230000 sub -0.392157 mul 0.658824 add exch dup 0.230000 sub 1.960786 mul 0.796078 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274506 mul 0.149020 add exch dup 0.240000 sub -0.392157 mul 0.654902 add exch dup 0.240000 sub 1.960783 mul 0.815686 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.211765 add exch dup 0.250000 sub 0.000000 mul 0.650980 add exch dup 0.250000 sub 0.784314 mul 0.835294 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.307190 mul 0.231373 add exch dup 0.260000 sub -0.130719 mul 0.650980 add exch dup 0.260000 sub 0.392157 mul 0.843137 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 2.039215 mul 0.270588 add exch dup 0.290000 sub -0.156863 mul 0.647059 add exch dup 0.290000 sub 0.705882 mul 0.854902 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub 2.352942 mul 0.372549 add exch dup 0.340000 sub -0.168067 mul 0.639216 add exch dup 0.340000 sub 0.784314 mul 0.890196 add exch } if dup 0.410000 gt { exch pop exch pop exch pop dup 0.410000 sub 3.039216 mul 0.537255 add exch dup 0.410000 sub -0.196078 mul 0.627451 add exch dup 0.410000 sub 0.980392 mul 0.945098 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.392157 mul 0.658824 add exch dup 0.450000 sub -1.323530 mul 0.619608 add exch dup 0.450000 sub -0.147059 mul 0.984314 add exch } if dup 0.530000 gt { exch pop exch pop exch pop dup 0.530000 sub 0.348584 mul 0.690196 add exch dup 0.530000 sub -1.089324 mul 0.513726 add exch dup 0.530000 sub -0.130719 mul 0.972549 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub 0.235294 mul 0.721569 add exch dup 0.620000 sub -0.705882 mul 0.415686 add exch dup 0.620000 sub -0.078431 mul 0.960784 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -3.267974 mul 0.733333 add exch dup 0.670000 sub -1.732026 mul 0.380392 add exch dup 0.670000 sub -1.503268 mul 0.956863 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -3.039219 mul 0.341176 add exch dup 0.790000 sub -2.156865 mul 0.172549 add exch dup 0.790000 sub -1.470590 mul 0.776471 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.299885 mul 0.219608 add exch dup 0.830000 sub -0.507497 mul 0.086275 add exch dup 0.830000 sub -1.753172 mul 0.717647 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.419608 exch } if pop }
endstream
endobj

202 0 obj
  3462
endobj

203 0 obj
  << /Length 204 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.137255 exch 0.000000 exch 0.470588 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 4.313725 mul 0.137255 add exch dup 0.000000 sub 6.274510 mul 0.000000 add exch dup 0.000000 sub 4.313728 mul 0.470588 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 6.862746 mul 0.180392 add exch dup 0.010000 sub 10.392158 mul 0.062745 add exch dup 0.010000 sub 6.666667 mul 0.513726 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 5.882352 mul 0.317647 add exch dup 0.030000 sub 8.431372 mul 0.270588 add exch dup 0.030000 sub 5.490195 mul 0.647059 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 2.875818 mul 0.435294 add exch dup 0.050000 sub 4.444446 mul 0.439216 add exch dup 0.050000 sub 2.875817 mul 0.756863 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 3.333333 mul 0.521569 add exch dup 0.080000 sub 4.705881 mul 0.572549 add exch dup 0.080000 sub 2.941176 mul 0.843137 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.960785 mul 0.588235 add exch dup 0.100000 sub 2.941177 mul 0.666667 add exch dup 0.100000 sub 1.960785 mul 0.901961 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.627451 add exch dup 0.120000 sub 1.960785 mul 0.725490 add exch dup 0.120000 sub 1.176471 mul 0.941176 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.331825 mul 0.639216 add exch dup 0.130000 sub 0.120664 mul 0.745098 add exch dup 0.130000 sub 0.331825 mul 0.952941 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.000000 mul 0.682353 add exch dup 0.260000 sub 0.000000 mul 0.760784 add exch dup 0.260000 sub 0.000000 mul 0.996078 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.019608 mul 0.682353 add exch dup 0.280000 sub -0.235294 mul 0.760784 add exch dup 0.280000 sub -0.470588 mul 0.996078 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub -1.241830 mul 0.580392 add exch dup 0.380000 sub -0.261438 mul 0.737255 add exch dup 0.380000 sub -0.588235 mul 0.949020 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.356863 add exch dup 0.560000 sub -0.156863 mul 0.690196 add exch dup 0.560000 sub -0.313725 mul 0.843137 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.045752 mul 0.337255 add exch dup 0.610000 sub -0.261438 mul 0.682353 add exch dup 0.610000 sub -0.718954 mul 0.827451 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.633987 mul 0.274510 add exch dup 0.670000 sub -0.522876 mul 0.666667 add exch dup 0.670000 sub -1.176471 mul 0.784314 add exch } if dup 0.730000 gt { exch pop exch pop exch pop dup 0.730000 sub -1.895425 mul 0.176471 add exch dup 0.730000 sub -0.588235 mul 0.635294 add exch dup 0.730000 sub -1.372549 mul 0.713726 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.530565 mul 0.062745 add exch dup 0.790000 sub -2.883507 mul 0.600000 add exch dup 0.790000 sub -0.853518 mul 0.631373 add exch } if dup 0.960000 gt { exch pop exch pop exch pop dup 0.960000 sub 0.490196 mul 0.152941 add exch dup 0.960000 sub -2.745097 mul 0.109804 add exch dup 0.960000 sub -0.784313 mul 0.486275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.172549 exch 0.000000 exch 0.454902 exch } if pop }
endstream
endobj

204 0 obj
  3463
endobj

205 0 obj
  << /Length 206 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.258824 exch 0.000000 exch 0.513726 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.980392 mul 0.258824 add exch dup 0.000000 sub 3.058824 mul 0.000000 add exch dup 0.000000 sub 2.980392 mul 0.513726 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 2.588236 mul 0.407843 add exch dup 0.050000 sub 2.666667 mul 0.152941 add exch dup 0.050000 sub 2.509804 mul 0.662745 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.699347 mul 0.537255 add exch dup 0.100000 sub 1.699347 mul 0.286275 add exch dup 0.100000 sub 1.699347 mul 0.788235 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.116139 mul 0.588235 add exch dup 0.130000 sub 0.422323 mul 0.337255 add exch dup 0.130000 sub 1.116139 mul 0.839216 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.784313 mul 0.733333 add exch dup 0.260000 sub 0.392157 mul 0.392157 add exch dup 0.260000 sub 0.784313 mul 0.984314 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.749020 add exch dup 0.280000 sub -0.098039 mul 0.400000 add exch dup 0.280000 sub -0.196078 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.382869 mul 0.647059 add exch dup 0.360000 sub -0.144479 mul 0.392157 add exch dup 0.360000 sub -0.227038 mul 0.984314 add exch } if dup 0.550000 gt { exch pop exch pop exch pop dup 0.550000 sub -1.568629 mul 0.384314 add exch dup 0.550000 sub 0.000000 mul 0.364706 add exch dup 0.550000 sub -0.392157 mul 0.941176 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.280112 mul 0.368627 add exch dup 0.560000 sub -0.112045 mul 0.364706 add exch dup 0.560000 sub -0.280112 mul 0.937255 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.637255 mul 0.349020 add exch dup 0.630000 sub -0.294118 mul 0.356863 add exch dup 0.630000 sub -0.784314 mul 0.917647 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -0.980392 mul 0.298039 add exch dup 0.710000 sub -0.441176 mul 0.333333 add exch dup 0.710000 sub -1.127450 mul 0.854902 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.112045 mul 0.219608 add exch dup 0.790000 sub -1.419235 mul 0.298039 add exch dup 0.790000 sub -1.195145 mul 0.764706 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.196078 exch 0.000000 exch 0.513726 exch } if pop }
endstream
endobj

206 0 obj
  2490
endobj

207 0 obj
  << /Length 208 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.152941 exch 0.000000 exch 0.474510 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 6.274510 mul 0.152941 add exch dup 0.000000 sub 9.019608 mul 0.000000 add exch dup 0.000000 sub 6.078433 mul 0.474510 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 4.183006 mul 0.278431 add exch dup 0.020000 sub 6.013072 mul 0.180392 add exch dup 0.020000 sub 4.052287 mul 0.596078 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 4.901962 mul 0.403922 add exch dup 0.050000 sub 7.254903 mul 0.360784 add exch dup 0.050000 sub 4.705882 mul 0.717647 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 2.352941 mul 0.501961 add exch dup 0.070000 sub 3.398692 mul 0.505882 add exch dup 0.070000 sub 2.352941 mul 0.811765 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 2.156863 mul 0.572549 add exch dup 0.100000 sub 2.941177 mul 0.607843 add exch dup 0.100000 sub 1.960785 mul 0.882353 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.568628 mul 0.615686 add exch dup 0.120000 sub 2.352942 mul 0.666667 add exch dup 0.120000 sub 1.568628 mul 0.921569 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.422323 mul 0.631373 add exch dup 0.130000 sub 0.150830 mul 0.690196 add exch dup 0.130000 sub 0.422323 mul 0.937255 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.196078 mul 0.686275 add exch dup 0.260000 sub 0.196078 mul 0.709804 add exch dup 0.260000 sub 0.196078 mul 0.992157 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.019608 mul 0.690196 add exch dup 0.280000 sub -0.196078 mul 0.713726 add exch dup 0.280000 sub -0.431373 mul 0.996078 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub -1.263617 mul 0.588235 add exch dup 0.380000 sub -0.261438 mul 0.694118 add exch dup 0.380000 sub -0.544662 mul 0.952941 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.360784 add exch dup 0.560000 sub -0.156863 mul 0.647059 add exch dup 0.560000 sub -0.313725 mul 0.854902 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.045752 mul 0.341176 add exch dup 0.610000 sub -0.261438 mul 0.639216 add exch dup 0.610000 sub -0.784314 mul 0.839216 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.400560 mul 0.278431 add exch dup 0.670000 sub -0.448179 mul 0.623529 add exch dup 0.670000 sub -1.064426 mul 0.792157 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -1.882352 mul 0.180392 add exch dup 0.740000 sub -0.627451 mul 0.592157 add exch dup 0.740000 sub -1.411764 mul 0.717647 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.435730 mul 0.086275 add exch dup 0.790000 sub -2.723312 mul 0.560784 add exch dup 0.790000 sub -0.893246 mul 0.647059 add exch } if dup 0.970000 gt { exch pop exch pop exch pop dup 0.970000 sub 0.392157 mul 0.164706 add exch dup 0.970000 sub -2.352943 mul 0.070588 add exch dup 0.970000 sub -0.784314 mul 0.486275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.176471 exch 0.000000 exch 0.462745 exch } if pop }
endstream
endobj

208 0 obj
  3268
endobj

209 0 obj
  << /Length 210 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.152941 exch 0.000000 exch 0.478431 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.664962 mul 0.152941 add exch dup 0.000000 sub 2.676897 mul 0.000000 add exch dup 0.000000 sub 1.227622 mul 0.478431 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 4.803921 mul 0.000000 add exch dup 0.230000 sub -0.294118 mul 0.615686 add exch dup 0.230000 sub 1.666666 mul 0.760784 add exch } if dup 0.270000 gt { exch pop exch pop exch pop dup 0.270000 sub 4.411766 mul 0.192157 add exch dup 0.270000 sub -0.196078 mul 0.603922 add exch dup 0.270000 sub 1.568628 mul 0.827451 add exch } if dup 0.310000 gt { exch pop exch pop exch pop dup 0.310000 sub 3.431374 mul 0.368627 add exch dup 0.310000 sub -0.196078 mul 0.596078 add exch dup 0.310000 sub 1.176471 mul 0.890196 add exch } if dup 0.350000 gt { exch pop exch pop exch pop dup 0.350000 sub 2.450981 mul 0.505882 add exch dup 0.350000 sub -0.098039 mul 0.588235 add exch dup 0.350000 sub 0.882353 mul 0.937255 add exch } if dup 0.390000 gt { exch pop exch pop exch pop dup 0.390000 sub 2.091503 mul 0.603922 add exch dup 0.390000 sub -0.130719 mul 0.584314 add exch dup 0.390000 sub 0.653595 mul 0.972549 add exch } if dup 0.420000 gt { exch pop exch pop exch pop dup 0.420000 sub 0.653595 mul 0.666667 add exch dup 0.420000 sub 0.000000 mul 0.580392 add exch dup 0.420000 sub 0.261438 mul 0.992157 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.784313 mul 0.686275 add exch dup 0.450000 sub -1.525054 mul 0.580392 add exch dup 0.450000 sub 0.000000 mul 1.000000 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.637255 mul 0.756863 add exch dup 0.540000 sub -1.225490 mul 0.443137 add exch dup 0.540000 sub 0.000000 mul 1.000000 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub 0.392157 mul 0.807843 add exch dup 0.620000 sub -0.705882 mul 0.345098 add exch dup 0.620000 sub 0.000000 mul 1.000000 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -3.501401 mul 0.827451 add exch dup 0.670000 sub -1.876751 mul 0.309804 add exch dup 0.670000 sub -1.512605 mul 1.000000 add exch } if dup 0.810000 gt { exch pop exch pop exch pop dup 0.810000 sub -4.313729 mul 0.337255 add exch dup 0.810000 sub -2.352943 mul 0.047059 add exch dup 0.810000 sub -1.960786 mul 0.788235 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.484429 mul 0.250980 add exch dup 0.830000 sub 0.000000 mul 0.000000 add exch dup 0.830000 sub -1.937716 mul 0.749020 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.419608 exch } if pop }
endstream
endobj

210 0 obj
  2681
endobj

211 0 obj
  << /Length 212 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.333333 exch 0.000000 exch 0.541176 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.638655 mul 0.333333 add exch dup 0.000000 sub 0.602241 mul 0.000000 add exch dup 0.000000 sub 1.638655 mul 0.541176 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.792157 add exch dup 0.280000 sub 0.000000 mul 0.168627 add exch dup 0.280000 sub 0.000000 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.545560 mul 0.690196 add exch dup 0.360000 sub -0.046136 mul 0.168627 add exch dup 0.360000 sub 0.000000 mul 1.000000 add exch } if dup 0.530000 gt { exch pop exch pop exch pop dup 0.530000 sub -1.699345 mul 0.427451 add exch dup 0.530000 sub 0.000000 mul 0.160784 add exch dup 0.530000 sub 0.000000 mul 1.000000 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.112045 mul 0.376471 add exch dup 0.560000 sub -0.112045 mul 0.160784 add exch dup 0.560000 sub -0.280112 mul 1.000000 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.261438 mul 0.368627 add exch dup 0.630000 sub -0.217865 mul 0.152941 add exch dup 0.630000 sub -0.697167 mul 0.980392 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -0.392157 mul 0.345098 add exch dup 0.720000 sub -0.392157 mul 0.133333 add exch dup 0.720000 sub -1.089325 mul 0.917647 add exch } if dup 0.810000 gt { exch pop exch pop exch pop dup 0.810000 sub -0.463458 mul 0.309804 add exch dup 0.810000 sub -0.463458 mul 0.098039 add exch dup 0.810000 sub -1.247772 mul 0.819608 add exch } if dup 0.920000 gt { exch pop exch pop exch pop dup 0.920000 sub -0.588236 mul 0.258824 add exch dup 0.920000 sub -0.588235 mul 0.047059 add exch dup 0.920000 sub -1.666667 mul 0.682353 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.211765 exch 0.000000 exch 0.549020 exch } if pop }
endstream
endobj

212 0 obj
  1907
endobj

213 0 obj
  << /Length 214 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.317647 exch 0.000000 exch 0.533333 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.764706 mul 0.317647 add exch dup 0.000000 sub 0.980392 mul 0.000000 add exch dup 0.000000 sub 1.764706 mul 0.533333 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 1.960785 mul 0.388235 add exch dup 0.040000 sub 1.089325 mul 0.039216 add exch dup 0.040000 sub 1.960784 mul 0.603922 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.508296 mul 0.564706 add exch dup 0.130000 sub 0.542986 mul 0.137255 add exch dup 0.130000 sub 1.508296 mul 0.780392 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.176470 mul 0.760784 add exch dup 0.260000 sub 0.392157 mul 0.207843 add exch dup 0.260000 sub 1.176470 mul 0.976471 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.784314 add exch dup 0.280000 sub -0.049020 mul 0.215686 add exch dup 0.280000 sub -0.049020 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.545560 mul 0.682353 add exch dup 0.360000 sub -0.046136 mul 0.211765 add exch dup 0.360000 sub -0.046136 mul 0.996078 add exch } if dup 0.530000 gt { exch pop exch pop exch pop dup 0.530000 sub -1.437907 mul 0.419608 add exch dup 0.530000 sub 0.000000 mul 0.203922 add exch dup 0.530000 sub 0.000000 mul 0.988235 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.112045 mul 0.376471 add exch dup 0.560000 sub -0.112045 mul 0.203922 add exch dup 0.560000 sub -0.280112 mul 0.988235 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.392157 mul 0.368627 add exch dup 0.630000 sub -0.294118 mul 0.196078 add exch dup 0.630000 sub -0.784314 mul 0.968627 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -0.441176 mul 0.337255 add exch dup 0.710000 sub -0.343137 mul 0.172549 add exch dup 0.710000 sub -0.980392 mul 0.905882 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.448179 mul 0.301961 add exch dup 0.790000 sub -0.690943 mul 0.145098 add exch dup 0.790000 sub -1.363212 mul 0.827451 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.207843 exch 0.000000 exch 0.541176 exch } if pop }
endstream
endobj

214 0 obj
  2295
endobj

215 0 obj
  << /Length 216 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.305882 exch 0.000000 exch 0.529412 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.072829 mul 0.305882 add exch dup 0.000000 sub 1.400560 mul 0.000000 add exch dup 0.000000 sub 2.072829 mul 0.529412 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 1.960785 mul 0.450980 add exch dup 0.070000 sub 1.307190 mul 0.098039 add exch dup 0.070000 sub 1.960784 mul 0.674510 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.447964 mul 0.568627 add exch dup 0.130000 sub 0.542986 mul 0.176471 add exch dup 0.130000 sub 1.447964 mul 0.792157 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.756863 add exch dup 0.260000 sub 0.392157 mul 0.247059 add exch dup 0.260000 sub 0.980392 mul 0.980392 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.776471 add exch dup 0.280000 sub -0.049020 mul 0.254902 add exch dup 0.280000 sub -0.098039 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.459695 mul 0.674510 add exch dup 0.360000 sub -0.087146 mul 0.250980 add exch dup 0.360000 sub -0.065359 mul 0.992157 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -1.960786 mul 0.411765 add exch dup 0.540000 sub 0.000000 mul 0.235294 add exch dup 0.540000 sub -0.196079 mul 0.980392 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.168067 mul 0.372549 add exch dup 0.560000 sub -0.112045 mul 0.235294 add exch dup 0.560000 sub -0.280112 mul 0.976471 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.392157 mul 0.360784 add exch dup 0.630000 sub -0.294118 mul 0.227451 add exch dup 0.630000 sub -0.784314 mul 0.956863 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -0.539215 mul 0.329412 add exch dup 0.710000 sub -0.343137 mul 0.203922 add exch dup 0.710000 sub -0.980392 mul 0.894118 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.373483 mul 0.286275 add exch dup 0.790000 sub -0.840336 mul 0.176471 add exch dup 0.790000 sub -1.325864 mul 0.815686 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.207843 exch 0.000000 exch 0.537255 exch } if pop }
endstream
endobj

216 0 obj
  2296
endobj

217 0 obj
  << /Length 218 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.168627 exch 0.000000 exch 0.482353 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 5.882353 mul 0.168627 add exch dup 0.000000 sub 8.235294 mul 0.000000 add exch dup 0.000000 sub 5.490199 mul 0.482353 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 4.705883 mul 0.227451 add exch dup 0.010000 sub 6.535948 mul 0.082353 add exch dup 0.010000 sub 4.575163 mul 0.537255 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 3.660130 mul 0.368627 add exch dup 0.040000 sub 5.098039 mul 0.278431 add exch dup 0.040000 sub 3.529411 mul 0.674510 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 3.921569 mul 0.478431 add exch dup 0.070000 sub 5.686275 mul 0.431373 add exch dup 0.070000 sub 3.921568 mul 0.780392 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.699347 mul 0.556863 add exch dup 0.090000 sub 2.222223 mul 0.545098 add exch dup 0.090000 sub 1.568628 mul 0.858824 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.568628 mul 0.607843 add exch dup 0.120000 sub 2.352942 mul 0.611765 add exch dup 0.120000 sub 1.568628 mul 0.905882 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.542986 mul 0.623529 add exch dup 0.130000 sub 0.211161 mul 0.635294 add exch dup 0.130000 sub 0.542986 mul 0.921569 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.196078 mul 0.694118 add exch dup 0.260000 sub 0.000000 mul 0.662745 add exch dup 0.260000 sub 0.196078 mul 0.992157 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.698039 add exch dup 0.280000 sub -0.217865 mul 0.662745 add exch dup 0.280000 sub -0.435730 mul 0.996078 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.238390 mul 0.596078 add exch dup 0.370000 sub -0.206398 mul 0.643137 add exch dup 0.370000 sub -0.474716 mul 0.956863 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.360784 add exch dup 0.560000 sub -0.156863 mul 0.603922 add exch dup 0.560000 sub -0.313725 mul 0.866667 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -0.896359 mul 0.341176 add exch dup 0.610000 sub -0.280112 mul 0.596078 add exch dup 0.610000 sub -0.672269 mul 0.850980 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -1.400560 mul 0.278431 add exch dup 0.680000 sub -0.448179 mul 0.576471 add exch dup 0.680000 sub -1.120448 mul 0.803922 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.862744 mul 0.180392 add exch dup 0.750000 sub -0.588235 mul 0.545098 add exch dup 0.750000 sub -1.470587 mul 0.725490 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.352941 mul 0.105882 add exch dup 0.790000 sub -2.450981 mul 0.521569 add exch dup 0.790000 sub -0.921569 mul 0.666667 add exch } if dup 0.990000 gt { exch pop exch pop exch pop dup 0.990000 sub 0.392157 mul 0.176471 add exch dup 0.990000 sub -3.137258 mul 0.031373 add exch dup 0.990000 sub -1.176472 mul 0.482353 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.180392 exch 0.000000 exch 0.470588 exch } if pop }
endstream
endobj

218 0 obj
  3268
endobj

219 0 obj
  << /Length 220 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.294118 exch 0.000000 exch 0.525490 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.352941 mul 0.294118 add exch dup 0.000000 sub 1.813726 mul 0.000000 add exch dup 0.000000 sub 2.352941 mul 0.525490 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 1.803922 mul 0.482353 add exch dup 0.080000 sub 1.411765 mul 0.145098 add exch dup 0.080000 sub 1.803922 mul 0.713726 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.357466 mul 0.572549 add exch dup 0.130000 sub 0.512821 mul 0.215686 add exch dup 0.130000 sub 1.357466 mul 0.803922 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.749020 add exch dup 0.260000 sub 0.392157 mul 0.282353 add exch dup 0.260000 sub 0.980392 mul 0.980392 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.768627 add exch dup 0.280000 sub -0.049020 mul 0.290196 add exch dup 0.280000 sub -0.098039 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.459695 mul 0.666667 add exch dup 0.360000 sub -0.087146 mul 0.286275 add exch dup 0.360000 sub -0.108932 mul 0.992157 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -1.568629 mul 0.403922 add exch dup 0.540000 sub 0.000000 mul 0.270588 add exch dup 0.540000 sub -0.196079 mul 0.972549 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.168067 mul 0.372549 add exch dup 0.560000 sub -0.112045 mul 0.270588 add exch dup 0.560000 sub -0.280112 mul 0.968627 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.490196 mul 0.360784 add exch dup 0.630000 sub -0.294118 mul 0.262745 add exch dup 0.630000 sub -0.784314 mul 0.949020 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -0.637255 mul 0.321569 add exch dup 0.710000 sub -0.392157 mul 0.239216 add exch dup 0.710000 sub -1.029411 mul 0.886275 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.317460 mul 0.270588 add exch dup 0.790000 sub -0.989729 mul 0.207843 add exch dup 0.790000 sub -1.307190 mul 0.803922 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.203922 exch 0.000000 exch 0.529412 exch } if pop }
endstream
endobj

220 0 obj
  2296
endobj

221 0 obj
  << /Length 222 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.145098 exch 0.000000 exch 0.474510 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.168067 mul 0.145098 add exch dup 0.000000 sub 3.305322 mul 0.000000 add exch dup 0.000000 sub 1.624650 mul 0.474510 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub -0.196079 mul 0.133333 add exch dup 0.070000 sub 3.006536 mul 0.231373 add exch dup 0.070000 sub 1.503268 mul 0.588235 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.549020 mul 0.121569 add exch dup 0.130000 sub 2.313725 mul 0.411765 add exch dup 0.130000 sub 1.058823 mul 0.678431 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 5.882359 mul 0.066667 add exch dup 0.230000 sub -0.392157 mul 0.643137 add exch dup 0.230000 sub 2.352943 mul 0.784314 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 6.274506 mul 0.125490 add exch dup 0.240000 sub -0.392157 mul 0.639216 add exch dup 0.240000 sub 1.960783 mul 0.807843 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.188235 add exch dup 0.250000 sub 0.000000 mul 0.635294 add exch dup 0.250000 sub 0.784314 mul 0.827451 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.307189 mul 0.207843 add exch dup 0.260000 sub -0.130719 mul 0.635294 add exch dup 0.260000 sub 0.392157 mul 0.835294 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 2.039215 mul 0.247059 add exch dup 0.290000 sub -0.078431 mul 0.631373 add exch dup 0.290000 sub 0.705882 mul 0.847059 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub 2.745098 mul 0.349020 add exch dup 0.340000 sub -0.196078 mul 0.627451 add exch dup 0.340000 sub 0.915033 mul 0.882353 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub 3.058825 mul 0.513726 add exch dup 0.400000 sub -0.156863 mul 0.615686 add exch dup 0.400000 sub 1.019608 mul 0.937255 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub 0.588235 mul 0.666667 add exch dup 0.450000 sub -1.470589 mul 0.607843 add exch dup 0.450000 sub -0.098039 mul 0.988235 add exch } if dup 0.530000 gt { exch pop exch pop exch pop dup 0.530000 sub 0.392157 mul 0.713726 add exch dup 0.530000 sub -1.089324 mul 0.490196 add exch dup 0.530000 sub -0.043573 mul 0.980392 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub 0.313725 mul 0.749020 add exch dup 0.620000 sub -0.705882 mul 0.392157 add exch dup 0.620000 sub -0.078431 mul 0.976471 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -3.366013 mul 0.764706 add exch dup 0.670000 sub -1.797386 mul 0.356863 add exch dup 0.670000 sub -1.535948 mul 0.972549 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -3.333337 mul 0.360784 add exch dup 0.790000 sub -2.058826 mul 0.141176 add exch dup 0.790000 sub -1.470590 mul 0.788235 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.346021 mul 0.227451 add exch dup 0.830000 sub -0.346021 mul 0.058824 add exch dup 0.830000 sub -1.822376 mul 0.729412 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.419608 exch } if pop }
endstream
endobj

222 0 obj
  3270
endobj

223 0 obj
  << /Length 224 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.282353 exch 0.000000 exch 0.521569 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.960784 mul 0.282353 add exch dup 0.000000 sub 1.764706 mul 0.000000 add exch dup 0.000000 sub 1.960784 mul 0.521569 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 2.689076 mul 0.321569 add exch dup 0.020000 sub 2.296919 mul 0.035294 add exch dup 0.020000 sub 2.633053 mul 0.560784 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.764706 mul 0.509804 add exch dup 0.090000 sub 1.568628 mul 0.196078 add exch dup 0.090000 sub 1.764706 mul 0.745098 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.266968 mul 0.580392 add exch dup 0.130000 sub 0.452489 mul 0.258824 add exch dup 0.130000 sub 1.266968 mul 0.815686 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.745098 add exch dup 0.260000 sub 0.392157 mul 0.317647 add exch dup 0.260000 sub 0.980392 mul 0.980392 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.764706 add exch dup 0.280000 sub -0.098039 mul 0.325490 add exch dup 0.280000 sub -0.147059 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.459695 mul 0.662745 add exch dup 0.360000 sub -0.087146 mul 0.317647 add exch dup 0.360000 sub -0.152505 mul 0.988235 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -1.372550 mul 0.400000 add exch dup 0.540000 sub 0.000000 mul 0.301961 add exch dup 0.540000 sub -0.196079 mul 0.960784 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.224090 mul 0.372549 add exch dup 0.560000 sub -0.112045 mul 0.301961 add exch dup 0.560000 sub -0.280112 mul 0.956863 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.490196 mul 0.356863 add exch dup 0.630000 sub -0.294118 mul 0.294118 add exch dup 0.630000 sub -0.784314 mul 0.937255 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -0.784313 mul 0.317647 add exch dup 0.710000 sub -0.441176 mul 0.270588 add exch dup 0.710000 sub -1.078431 mul 0.874510 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.261438 mul 0.254902 add exch dup 0.790000 sub -1.120448 mul 0.235294 add exch dup 0.790000 sub -1.251167 mul 0.788235 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.200000 exch 0.000000 exch 0.525490 exch } if pop }
endstream
endobj

224 0 obj
  2490
endobj

225 0 obj
  << /Length 226 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.309804 exch 0.000000 exch 0.533333 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.091503 mul 0.309804 add exch dup 0.000000 sub 1.307190 mul 0.000000 add exch dup 0.000000 sub 2.026144 mul 0.533333 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 1.904762 mul 0.435294 add exch dup 0.060000 sub 1.232493 mul 0.078431 add exch dup 0.060000 sub 1.904762 mul 0.654902 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.447964 mul 0.568627 add exch dup 0.130000 sub 0.542986 mul 0.164706 add exch dup 0.130000 sub 1.478130 mul 0.788235 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.176470 mul 0.756863 add exch dup 0.260000 sub 0.196078 mul 0.235294 add exch dup 0.260000 sub 0.980392 mul 0.980392 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.780392 add exch dup 0.280000 sub -0.049020 mul 0.239216 add exch dup 0.280000 sub -0.049020 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.545560 mul 0.678431 add exch dup 0.360000 sub -0.046136 mul 0.235294 add exch dup 0.360000 sub -0.069204 mul 0.996078 add exch } if dup 0.530000 gt { exch pop exch pop exch pop dup 0.530000 sub -1.437907 mul 0.415686 add exch dup 0.530000 sub 0.000000 mul 0.227451 add exch dup 0.530000 sub -0.130719 mul 0.984314 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.168067 mul 0.372549 add exch dup 0.560000 sub -0.112045 mul 0.227451 add exch dup 0.560000 sub -0.280112 mul 0.980392 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.392157 mul 0.360784 add exch dup 0.630000 sub -0.294118 mul 0.219608 add exch dup 0.630000 sub -0.784314 mul 0.960784 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -0.490196 mul 0.329412 add exch dup 0.710000 sub -0.392157 mul 0.196078 add exch dup 0.710000 sub -0.980392 mul 0.898039 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.392157 mul 0.290196 add exch dup 0.790000 sub -0.784314 mul 0.164706 add exch dup 0.790000 sub -1.344538 mul 0.819608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.207843 exch 0.000000 exch 0.537255 exch } if pop }
endstream
endobj

226 0 obj
  2296
endobj

227 0 obj
  << /Length 228 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.227451 exch 0.015686 exch 0.509804 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.294118 mul 0.227451 add exch dup 0.000000 sub 4.000000 mul 0.015686 add exch dup 0.000000 sub 3.215686 mul 0.509804 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 3.921570 mul 0.392157 add exch dup 0.050000 sub 4.967321 mul 0.215686 add exch dup 0.050000 sub 3.790850 mul 0.670588 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 2.352941 mul 0.509804 add exch dup 0.080000 sub 3.006536 mul 0.364706 add exch dup 0.080000 sub 2.352941 mul 0.784314 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 1.372549 mul 0.580392 add exch dup 0.110000 sub 1.568628 mul 0.454902 add exch dup 0.110000 sub 1.372549 mul 0.854902 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.814480 mul 0.607843 add exch dup 0.130000 sub 0.301659 mul 0.486275 add exch dup 0.130000 sub 0.814480 mul 0.882353 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.588235 mul 0.713726 add exch dup 0.260000 sub 0.196078 mul 0.525490 add exch dup 0.260000 sub 0.588235 mul 0.988235 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.132897 mul 0.725490 add exch dup 0.280000 sub -0.130719 mul 0.529412 add exch dup 0.280000 sub -0.305011 mul 1.000000 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub -1.362229 mul 0.623529 add exch dup 0.370000 sub -0.165119 mul 0.517647 add exch dup 0.370000 sub -0.371517 mul 0.972549 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.326797 mul 0.364706 add exch dup 0.560000 sub -0.130719 mul 0.486275 add exch dup 0.560000 sub -0.326797 mul 0.901961 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.896359 mul 0.345098 add exch dup 0.620000 sub -0.336134 mul 0.478431 add exch dup 0.620000 sub -0.784314 mul 0.882353 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -1.089325 mul 0.282353 add exch dup 0.690000 sub -0.435730 mul 0.454902 add exch dup 0.690000 sub -1.045752 mul 0.827451 add exch } if dup 0.780000 gt { exch pop exch pop exch pop dup 0.780000 sub -1.960774 mul 0.184314 add exch dup 0.780000 sub -0.784310 mul 0.415686 add exch dup 0.780000 sub -1.960774 mul 0.733333 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.112045 mul 0.164706 add exch dup 0.790000 sub -1.942110 mul 0.407843 add exch dup 0.790000 sub -1.064426 mul 0.713726 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.188235 exch 0.000000 exch 0.490196 exch } if pop }
endstream
endobj

228 0 obj
  2684
endobj

229 0 obj
  << /Length 230 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.113725 exch 0.000000 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 4.313726 mul 0.113725 add exch dup 0.000000 sub 9.411765 mul 0.000000 add exch dup 0.000000 sub 5.490199 mul 0.462745 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 3.267974 mul 0.156863 add exch dup 0.010000 sub 7.058824 mul 0.094118 add exch dup 0.010000 sub 4.052288 mul 0.517647 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 2.614379 mul 0.254902 add exch dup 0.040000 sub 5.620914 mul 0.305882 add exch dup 0.040000 sub 3.267973 mul 0.639216 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 1.830065 mul 0.333333 add exch dup 0.070000 sub 4.052288 mul 0.474510 add exch dup 0.070000 sub 2.352941 mul 0.737255 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.764706 mul 0.388235 add exch dup 0.100000 sub 3.725491 mul 0.596078 add exch dup 0.100000 sub 2.156863 mul 0.807843 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.423529 add exch dup 0.120000 sub 2.745098 mul 0.670588 add exch dup 0.120000 sub 1.568628 mul 0.850980 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.235294 mul 0.435294 add exch dup 0.130000 sub 0.980392 mul 0.698039 add exch dup 0.130000 sub 0.431372 mul 0.866667 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.921572 mul 0.411765 add exch dup 0.230000 sub -0.392157 mul 0.796078 add exch dup 0.230000 sub 1.176472 mul 0.909804 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 0.980392 mul 0.450980 add exch dup 0.240000 sub 0.000000 mul 0.792157 add exch dup 0.240000 sub 0.392157 mul 0.921569 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.392157 mul 0.470588 add exch dup 0.260000 sub -0.156863 mul 0.792157 add exch dup 0.260000 sub 0.000000 mul 0.929412 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub 0.610022 mul 0.509804 add exch dup 0.360000 sub -0.261438 mul 0.776471 add exch dup 0.360000 sub 0.043573 mul 0.929412 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.784313 mul 0.564706 add exch dup 0.450000 sub -0.980392 mul 0.752941 add exch dup 0.450000 sub -0.784313 mul 0.933333 add exch } if dup 0.470000 gt { exch pop exch pop exch pop dup 0.470000 sub -0.686275 mul 0.549020 add exch dup 0.470000 sub -0.816994 mul 0.733333 add exch dup 0.470000 sub -0.620915 mul 0.917647 add exch } if dup 0.590000 gt { exch pop exch pop exch pop dup 0.590000 sub -0.392157 mul 0.466667 add exch dup 0.590000 sub -0.441176 mul 0.635294 add exch dup 0.590000 sub -0.343137 mul 0.843137 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.385621 mul 0.435294 add exch dup 0.670000 sub -1.013072 mul 0.600000 add exch dup 0.670000 sub -1.241830 mul 0.815686 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.882354 mul 0.149020 add exch dup 0.790000 sub -2.941179 mul 0.478431 add exch dup 0.790000 sub -1.078432 mul 0.666667 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.299885 mul 0.113725 add exch dup 0.830000 sub -2.122261 mul 0.360784 add exch dup 0.830000 sub -1.153403 mul 0.623529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

230 0 obj
  3461
endobj

231 0 obj
  << /Length 232 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.121569 exch 0.000000 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.483660 mul 0.121569 add exch dup 0.000000 sub 6.143791 mul 0.000000 add exch dup 0.000000 sub 3.529413 mul 0.462745 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 2.614379 mul 0.196078 add exch dup 0.030000 sub 6.535948 mul 0.184314 add exch dup 0.030000 sub 3.790849 mul 0.568627 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 1.830065 mul 0.274510 add exch dup 0.060000 sub 4.836601 mul 0.380392 add exch dup 0.060000 sub 2.745097 mul 0.682353 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub 1.176471 mul 0.329412 add exch dup 0.090000 sub 2.875818 mul 0.525490 add exch dup 0.090000 sub 1.568628 mul 0.764706 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.364706 add exch dup 0.120000 sub 3.137255 mul 0.611765 add exch dup 0.120000 sub 1.960785 mul 0.811765 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.313725 mul 0.376471 add exch dup 0.130000 sub 1.254902 mul 0.643137 add exch dup 0.130000 sub 0.549020 mul 0.831373 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 2.745098 mul 0.345098 add exch dup 0.230000 sub -0.196078 mul 0.768627 add exch dup 0.230000 sub 0.980392 mul 0.886275 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.400000 add exch dup 0.250000 sub 0.000000 mul 0.764706 add exch dup 0.250000 sub 0.784314 mul 0.905882 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.653595 mul 0.419608 add exch dup 0.260000 sub -0.130719 mul 0.764706 add exch dup 0.260000 sub 0.130719 mul 0.913725 add exch } if dup 0.320000 gt { exch pop exch pop exch pop dup 0.320000 sub 0.926916 mul 0.458824 add exch dup 0.320000 sub -0.213904 mul 0.756863 add exch dup 0.320000 sub 0.142602 mul 0.921569 add exch } if dup 0.430000 gt { exch pop exch pop exch pop dup 0.430000 sub 1.176472 mul 0.560784 add exch dup 0.430000 sub -0.392157 mul 0.733333 add exch dup 0.430000 sub 0.196079 mul 0.937255 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.490196 mul 0.584314 add exch dup 0.450000 sub -0.980392 mul 0.725490 add exch dup 0.450000 sub -0.588235 mul 0.941176 add exch } if dup 0.490000 gt { exch pop exch pop exch pop dup 0.490000 sub -0.427807 mul 0.564706 add exch dup 0.490000 sub -0.891265 mul 0.686275 add exch dup 0.490000 sub -0.499109 mul 0.917647 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.280112 mul 0.517647 add exch dup 0.600000 sub -0.504202 mul 0.588235 add exch dup 0.600000 sub -0.280112 mul 0.862745 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.581699 mul 0.498039 add exch dup 0.670000 sub -1.143791 mul 0.552941 add exch dup 0.670000 sub -1.274510 mul 0.843137 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.274511 mul 0.188235 add exch dup 0.790000 sub -2.745100 mul 0.415686 add exch dup 0.790000 sub -1.176472 mul 0.690196 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.161476 mul 0.137255 add exch dup 0.830000 sub -1.799308 mul 0.305882 add exch dup 0.830000 sub -1.268743 mul 0.643137 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

232 0 obj
  3462
endobj

233 0 obj
  << /Length 234 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.129412 exch 0.000000 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.666667 mul 0.129412 add exch dup 0.000000 sub 5.686275 mul 0.000000 add exch dup 0.000000 sub 3.137255 mul 0.466667 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 1.372549 mul 0.196078 add exch dup 0.040000 sub 4.705883 mul 0.227451 add exch dup 0.040000 sub 2.647059 mul 0.592157 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 0.882353 mul 0.250980 add exch dup 0.080000 sub 2.843138 mul 0.415686 add exch dup 0.080000 sub 1.568627 mul 0.698039 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.286275 add exch dup 0.120000 sub 4.313726 mul 0.529412 add exch dup 0.120000 sub 2.352942 mul 0.760784 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.274510 mul 0.298039 add exch dup 0.130000 sub 1.568627 mul 0.572549 add exch dup 0.130000 sub 0.745098 mul 0.784314 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 3.137255 mul 0.270588 add exch dup 0.230000 sub -0.196078 mul 0.729412 add exch dup 0.230000 sub 0.980392 mul 0.858824 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.333333 add exch dup 0.250000 sub 0.000000 mul 0.725490 add exch dup 0.250000 sub 0.784314 mul 0.878431 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.784313 mul 0.352941 add exch dup 0.260000 sub -0.078431 mul 0.725490 add exch dup 0.260000 sub 0.235294 mul 0.886275 add exch } if dup 0.310000 gt { exch pop exch pop exch pop dup 0.310000 sub 1.456583 mul 0.392157 add exch dup 0.310000 sub -0.224090 mul 0.721569 add exch dup 0.310000 sub 0.392157 mul 0.898039 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub 1.624650 mul 0.494118 add exch dup 0.380000 sub -0.224090 mul 0.705882 add exch dup 0.380000 sub 0.448179 mul 0.925490 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.130719 mul 0.607843 add exch dup 0.450000 sub -1.045752 mul 0.690196 add exch dup 0.450000 sub -0.392157 mul 0.956863 add exch } if dup 0.510000 gt { exch pop exch pop exch pop dup 0.510000 sub -0.156863 mul 0.600000 add exch dup 0.510000 sub -0.980392 mul 0.627451 add exch dup 0.510000 sub -0.352941 mul 0.933333 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -0.065359 mul 0.584314 add exch dup 0.610000 sub -0.588236 mul 0.529412 add exch dup 0.610000 sub -0.261438 mul 0.898039 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.810458 mul 0.580392 add exch dup 0.670000 sub -1.339869 mul 0.494118 add exch dup 0.670000 sub -1.372549 mul 0.882353 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.960786 mul 0.243137 add exch dup 0.790000 sub -2.647062 mul 0.333333 add exch dup 0.790000 sub -1.176472 mul 0.717647 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.023068 mul 0.164706 add exch dup 0.830000 sub -1.337947 mul 0.227451 add exch dup 0.830000 sub -1.453287 mul 0.670588 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

234 0 obj
  3268
endobj

235 0 obj
  << /Length 236 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.117647 exch 0.000000 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.960785 mul 0.117647 add exch dup 0.000000 sub 4.705883 mul 0.000000 add exch dup 0.000000 sub 2.745098 mul 0.462745 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 3.267974 mul 0.137255 add exch dup 0.010000 sub 7.450981 mul 0.047059 add exch dup 0.010000 sub 4.313726 mul 0.490196 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 2.614379 mul 0.235294 add exch dup 0.040000 sub 5.882352 mul 0.270588 add exch dup 0.040000 sub 3.398692 mul 0.619608 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 1.830065 mul 0.313726 add exch dup 0.070000 sub 4.313726 mul 0.447059 add exch dup 0.070000 sub 2.352941 mul 0.721569 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.764706 mul 0.368627 add exch dup 0.100000 sub 3.921569 mul 0.576471 add exch dup 0.100000 sub 2.352942 mul 0.792157 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.403922 add exch dup 0.120000 sub 2.745098 mul 0.654902 add exch dup 0.120000 sub 1.568628 mul 0.839216 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.274510 mul 0.415686 add exch dup 0.130000 sub 1.058823 mul 0.682353 add exch dup 0.130000 sub 0.470588 mul 0.854902 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 2.352942 mul 0.388235 add exch dup 0.230000 sub -0.196078 mul 0.788235 add exch dup 0.230000 sub 0.784314 mul 0.901961 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.960786 mul 0.435294 add exch dup 0.250000 sub 0.000000 mul 0.784314 add exch dup 0.250000 sub 0.784314 mul 0.917647 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.435730 mul 0.454902 add exch dup 0.260000 sub -0.130719 mul 0.784314 add exch dup 0.260000 sub 0.043573 mul 0.925490 add exch } if dup 0.350000 gt { exch pop exch pop exch pop dup 0.350000 sub 0.745098 mul 0.494118 add exch dup 0.350000 sub -0.274510 mul 0.772549 add exch dup 0.350000 sub 0.039216 mul 0.929412 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.653595 mul 0.568627 add exch dup 0.450000 sub -0.915033 mul 0.745098 add exch dup 0.450000 sub -0.653595 mul 0.933333 add exch } if dup 0.480000 gt { exch pop exch pop exch pop dup 0.480000 sub -0.555556 mul 0.549020 add exch dup 0.480000 sub -0.816993 mul 0.717647 add exch dup 0.480000 sub -0.555555 mul 0.913725 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.392157 mul 0.482353 add exch dup 0.600000 sub -0.504202 mul 0.619608 add exch dup 0.600000 sub -0.336134 mul 0.847059 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.418300 mul 0.454902 add exch dup 0.670000 sub -1.045752 mul 0.584314 add exch dup 0.670000 sub -1.241830 mul 0.823529 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.078433 mul 0.164706 add exch dup 0.790000 sub -2.941179 mul 0.458824 add exch dup 0.790000 sub -1.078432 mul 0.674510 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub 0.253749 mul 0.121569 add exch dup 0.830000 sub -2.006920 mul 0.341176 add exch dup 0.830000 sub -1.199539 mul 0.631373 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

236 0 obj
  3461
endobj

237 0 obj
  << /Length 238 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.266667 exch 0.000000 exch 0.517647 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.843137 mul 0.266667 add exch dup 0.000000 sub 2.843137 mul 0.000000 add exch dup 0.000000 sub 2.843137 mul 0.517647 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 2.483660 mul 0.380392 add exch dup 0.040000 sub 2.418301 mul 0.113725 add exch dup 0.040000 sub 2.418300 mul 0.631373 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.830066 mul 0.529412 add exch dup 0.100000 sub 1.830066 mul 0.258824 add exch dup 0.100000 sub 1.830066 mul 0.776471 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.176471 mul 0.584314 add exch dup 0.130000 sub 0.422323 mul 0.313726 add exch dup 0.130000 sub 1.176471 mul 0.831373 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.784313 mul 0.737255 add exch dup 0.260000 sub 0.196078 mul 0.368627 add exch dup 0.260000 sub 0.784313 mul 0.984314 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.752941 add exch dup 0.280000 sub -0.098039 mul 0.372549 add exch dup 0.280000 sub -0.196078 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.382869 mul 0.650980 add exch dup 0.360000 sub -0.103199 mul 0.364706 add exch dup 0.360000 sub -0.185759 mul 0.984314 add exch } if dup 0.550000 gt { exch pop exch pop exch pop dup 0.550000 sub -1.960786 mul 0.388235 add exch dup 0.550000 sub 0.000000 mul 0.345098 add exch dup 0.550000 sub -0.392157 mul 0.949020 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.224090 mul 0.368627 add exch dup 0.560000 sub -0.112045 mul 0.345098 add exch dup 0.560000 sub -0.280112 mul 0.945098 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.588235 mul 0.352941 add exch dup 0.630000 sub -0.294118 mul 0.337255 add exch dup 0.630000 sub -0.784314 mul 0.925490 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -0.931372 mul 0.305882 add exch dup 0.710000 sub -0.441176 mul 0.313726 add exch dup 0.710000 sub -1.127450 mul 0.862745 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.149393 mul 0.231373 add exch dup 0.790000 sub -1.325864 mul 0.278431 add exch dup 0.790000 sub -1.213819 mul 0.772549 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.200000 exch 0.000000 exch 0.517647 exch } if pop }
endstream
endobj

238 0 obj
  2490
endobj

239 0 obj
  << /Length 240 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.243137 exch 0.000000 exch 0.505882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 4.705884 mul 0.243137 add exch dup 0.000000 sub 5.098040 mul 0.000000 add exch dup 0.000000 sub 4.705882 mul 0.505882 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 2.745098 mul 0.290196 add exch dup 0.010000 sub 3.071895 mul 0.050980 add exch dup 0.010000 sub 2.745098 mul 0.552941 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 2.549020 mul 0.454902 add exch dup 0.070000 sub 2.843138 mul 0.235294 add exch dup 0.070000 sub 2.450980 mul 0.717647 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 1.960785 mul 0.556863 add exch dup 0.110000 sub 2.156863 mul 0.349020 add exch dup 0.110000 sub 1.960785 mul 0.815686 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.995475 mul 0.596078 add exch dup 0.130000 sub 0.392157 mul 0.392157 add exch dup 0.130000 sub 0.995475 mul 0.854902 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.784313 mul 0.725490 add exch dup 0.260000 sub 0.196078 mul 0.443137 add exch dup 0.260000 sub 0.784313 mul 0.984314 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.741176 add exch dup 0.280000 sub -0.147059 mul 0.447059 add exch dup 0.280000 sub -0.245098 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.382869 mul 0.639216 add exch dup 0.360000 sub -0.144479 mul 0.435294 add exch dup 0.360000 sub -0.288958 mul 0.980392 add exch } if dup 0.550000 gt { exch pop exch pop exch pop dup 0.550000 sub -0.784314 mul 0.376471 add exch dup 0.550000 sub 0.000000 mul 0.407843 add exch dup 0.550000 sub 0.000000 mul 0.925490 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.326797 mul 0.368627 add exch dup 0.560000 sub -0.130719 mul 0.407843 add exch dup 0.560000 sub -0.326797 mul 0.925490 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -0.686275 mul 0.349020 add exch dup 0.620000 sub -0.294118 mul 0.400000 add exch dup 0.620000 sub -0.784314 mul 0.905882 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -1.045751 mul 0.294118 add exch dup 0.700000 sub -0.435730 mul 0.376471 add exch dup 0.700000 sub -1.089324 mul 0.843137 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.037348 mul 0.200000 add exch dup 0.790000 sub -1.605976 mul 0.337255 add exch dup 0.790000 sub -1.139122 mul 0.745098 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.192157 exch 0.000000 exch 0.505882 exch } if pop }
endstream
endobj

240 0 obj
  2683
endobj

241 0 obj
  << /Length 242 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.133333 exch 0.000000 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 5.882353 mul 0.133333 add exch dup 0.000000 sub 9.019608 mul 0.000000 add exch dup 0.000000 sub 5.882356 mul 0.466667 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 6.666667 mul 0.192157 add exch dup 0.010000 sub 10.000001 mul 0.090196 add exch dup 0.010000 sub 6.470588 mul 0.525490 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 5.686274 mul 0.325490 add exch dup 0.030000 sub 8.431372 mul 0.290196 add exch dup 0.030000 sub 5.490195 mul 0.654902 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 2.875818 mul 0.439216 add exch dup 0.050000 sub 4.313726 mul 0.458824 add exch dup 0.050000 sub 2.745098 mul 0.764706 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 3.137254 mul 0.525490 add exch dup 0.080000 sub 4.705881 mul 0.588235 add exch dup 0.080000 sub 3.137254 mul 0.847059 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.960785 mul 0.588235 add exch dup 0.100000 sub 2.745098 mul 0.682353 add exch dup 0.100000 sub 1.764706 mul 0.909804 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 1.176471 mul 0.627451 add exch dup 0.120000 sub 1.960785 mul 0.737255 add exch dup 0.120000 sub 1.176471 mul 0.945098 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 0.301659 mul 0.639216 add exch dup 0.130000 sub 0.120664 mul 0.756863 add exch dup 0.130000 sub 0.301659 mul 0.956863 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.000000 mul 0.678431 add exch dup 0.260000 sub 0.000000 mul 0.772549 add exch dup 0.260000 sub 0.000000 mul 0.996078 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.019608 mul 0.678431 add exch dup 0.280000 sub -0.235294 mul 0.772549 add exch dup 0.280000 sub -0.509804 mul 0.996078 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub -1.220044 mul 0.576471 add exch dup 0.380000 sub -0.261438 mul 0.749020 add exch dup 0.380000 sub -0.588235 mul 0.945098 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.356863 add exch dup 0.560000 sub -0.156863 mul 0.701961 add exch dup 0.560000 sub -0.313725 mul 0.839216 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.045752 mul 0.337255 add exch dup 0.610000 sub -0.261438 mul 0.694118 add exch dup 0.610000 sub -0.718954 mul 0.823529 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.633987 mul 0.274510 add exch dup 0.670000 sub -0.522876 mul 0.678431 add exch dup 0.670000 sub -1.176471 mul 0.780392 add exch } if dup 0.730000 gt { exch pop exch pop exch pop dup 0.730000 sub -1.960784 mul 0.176471 add exch dup 0.730000 sub -0.588235 mul 0.647059 add exch dup 0.730000 sub -1.437908 mul 0.709804 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub 0.530565 mul 0.058824 add exch dup 0.790000 sub -2.883507 mul 0.611765 add exch dup 0.790000 sub -0.807382 mul 0.623529 add exch } if dup 0.960000 gt { exch pop exch pop exch pop dup 0.960000 sub 0.588235 mul 0.149020 add exch dup 0.960000 sub -3.039214 mul 0.121569 add exch dup 0.960000 sub -0.882352 mul 0.486275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.172549 exch 0.000000 exch 0.450980 exch } if pop }
endstream
endobj

242 0 obj
  3463
endobj

243 0 obj
  << /Length 244 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.325490 exch 0.000000 exch 0.537255 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.809955 mul 0.325490 add exch dup 0.000000 sub 0.844646 mul 0.000000 add exch dup 0.000000 sub 1.809955 mul 0.537255 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.568627 mul 0.560784 add exch dup 0.130000 sub 0.573152 mul 0.109804 add exch dup 0.130000 sub 1.568627 mul 0.772549 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.176470 mul 0.764706 add exch dup 0.260000 sub 0.392157 mul 0.184314 add exch dup 0.260000 sub 1.176470 mul 0.976471 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.788235 add exch dup 0.280000 sub -0.049020 mul 0.192157 add exch dup 0.280000 sub -0.049020 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.545560 mul 0.686275 add exch dup 0.360000 sub -0.023068 mul 0.188235 add exch dup 0.360000 sub -0.023068 mul 0.996078 add exch } if dup 0.530000 gt { exch pop exch pop exch pop dup 0.530000 sub -1.568626 mul 0.423529 add exch dup 0.530000 sub 0.000000 mul 0.184314 add exch dup 0.530000 sub 0.000000 mul 0.992157 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.112045 mul 0.376471 add exch dup 0.560000 sub -0.112045 mul 0.184314 add exch dup 0.560000 sub -0.280112 mul 0.992157 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.305011 mul 0.368627 add exch dup 0.630000 sub -0.261438 mul 0.176471 add exch dup 0.630000 sub -0.697167 mul 0.972549 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -0.448179 mul 0.341176 add exch dup 0.720000 sub -0.392157 mul 0.152941 add exch dup 0.720000 sub -1.008403 mul 0.909804 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.466853 mul 0.309804 add exch dup 0.790000 sub -0.597572 mul 0.125490 add exch dup 0.790000 sub -1.400560 mul 0.839216 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.211765 exch 0.000000 exch 0.545098 exch } if pop }
endstream
endobj

244 0 obj
  2101
endobj

245 0 obj
  << /Length 246 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.313726 exch 0.000000 exch 0.533333 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.960784 mul 0.313726 add exch dup 0.000000 sub 1.176471 mul 0.000000 add exch dup 0.000000 sub 1.960784 mul 0.533333 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub 1.911765 mul 0.411765 add exch dup 0.050000 sub 1.127451 mul 0.058824 add exch dup 0.050000 sub 1.911765 mul 0.631373 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub 1.508296 mul 0.564706 add exch dup 0.130000 sub 0.573152 mul 0.149020 add exch dup 0.130000 sub 1.478130 mul 0.784314 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 0.980392 mul 0.760784 add exch dup 0.260000 sub 0.196078 mul 0.223529 add exch dup 0.260000 sub 1.176470 mul 0.976471 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub -1.274510 mul 0.780392 add exch dup 0.280000 sub -0.049020 mul 0.227451 add exch dup 0.280000 sub -0.049020 mul 1.000000 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub -1.459695 mul 0.678431 add exch dup 0.360000 sub -0.043573 mul 0.223529 add exch dup 0.360000 sub -0.065359 mul 0.996078 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -1.960786 mul 0.415686 add exch dup 0.540000 sub 0.000000 mul 0.215686 add exch dup 0.540000 sub 0.000000 mul 0.984314 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.168067 mul 0.376471 add exch dup 0.560000 sub -0.112045 mul 0.215686 add exch dup 0.560000 sub -0.280112 mul 0.984314 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.392157 mul 0.364706 add exch dup 0.630000 sub -0.294118 mul 0.207843 add exch dup 0.630000 sub -0.784314 mul 0.964706 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -0.490196 mul 0.333333 add exch dup 0.710000 sub -0.343137 mul 0.184314 add exch dup 0.710000 sub -0.980392 mul 0.901961 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.410831 mul 0.294118 add exch dup 0.790000 sub -0.746966 mul 0.156863 add exch dup 0.790000 sub -1.344538 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.207843 exch 0.000000 exch 0.541176 exch } if pop }
endstream
endobj

246 0 obj
  2295
endobj

247 0 obj
  << /Type /XObject
     /Length 248 0 R
     /Group << /Type /Group
               /S /Transparency
               /I true
            >>
     /Subtype /Form
     /Resources << /Pattern << /P76 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908691 2.120705 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 53 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P95 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908691 2.054298 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 29 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P111 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.099220 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 11 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P27 << /Matrix [ 32.281734 0.000000 -0.000000 32.281734 10.941895 2.103031 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 181 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P110 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.909180 2.110939 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 13 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P105 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.909180 2.181252 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 17 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P107 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.909180 2.064064 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 15 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P71 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.087502 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 67 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P101 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.907227 2.110939 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 19 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P75 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.087746 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 55 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P98 << /Matrix [ 32.316803 0.000000 -0.000000 32.316803 10.908691 2.110931 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 23 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P118 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.099220 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 21 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P55 << /Matrix [ 32.305107 0.000000 -0.000000 32.305107 10.919922 2.079659 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 107 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P68 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.026955 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 73 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P121 << /Matrix [ 32.316792 0.000000 -0.000000 32.316792 10.908203 2.091167 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 5 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P113 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.909180 2.075783 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 7 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P90 << /Matrix [ 32.316792 0.000000 -0.000000 32.316792 10.908203 2.075787 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 33 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P84 << /Matrix [ 32.316792 0.000000 -0.000000 32.316792 10.909180 2.099224 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 35 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P77 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908691 2.054298 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 39 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P22 << /Matrix [ 32.281734 0.000000 -0.000000 32.281734 10.943359 2.120609 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 37 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P82 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.099220 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 41 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P21 << /Matrix [ 32.281734 0.000000 -0.000000 32.281734 10.943359 2.120609 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 175 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P119 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.110939 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 3 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P80 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.906250 2.087502 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 45 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P40 << /Matrix [ 32.293427 0.000000 -0.000000 32.293427 10.930664 2.116730 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 43 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P93 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908691 2.148048 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 31 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P96 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908691 2.110939 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 27 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P29 << /Matrix [ 32.281734 0.000000 -0.000000 32.281734 10.944336 2.089359 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 25 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P49 << /Matrix [ 32.305107 0.000000 -0.000000 32.305107 10.919922 2.120674 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 161 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P97 << /Matrix [ 32.316803 0.000000 -0.000000 32.316803 10.908691 2.110931 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 47 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P79 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.907227 2.099220 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 49 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P78 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.042580 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 51 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P70 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.909180 2.026955 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 71 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P122 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.034767 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 1 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P83 << /Matrix [ 32.316803 0.000000 -0.000000 32.316803 10.909180 2.042572 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 69 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P94 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908691 2.099220 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 79 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P64 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.909180 2.087502 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 91 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P86 << /Matrix [ 32.316803 0.000000 -0.000000 32.316803 10.909180 2.099213 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 89 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P60 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.042580 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 141 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P69 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.075783 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 139 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P74 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.099220 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 57 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P57 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.085548 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 63 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P73 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.026955 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 65 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P39 << /Matrix [ 32.293419 0.000000 -0.000000 32.293419 10.931152 2.155800 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 61 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P108 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.909180 2.110939 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 59 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P112 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.909180 2.136330 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 9 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P4 << /Matrix [ 32.258358 0.000000 -0.000000 32.258358 10.966797 2.194767 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 75 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P67 << /Matrix [ 32.316803 0.000000 -0.000000 32.316803 10.908203 2.005463 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 77 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P52 << /Matrix [ 32.305107 0.000000 -0.000000 32.305107 10.919922 2.159737 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 81 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P66 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.026955 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 83 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P115 << /Matrix [ 32.316792 0.000000 -0.000000 32.316792 10.908691 2.110943 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 85 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P65 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.026955 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 87 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P63 << /Matrix [ 32.316792 0.000000 -0.000000 32.316792 10.908203 2.030865 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 97 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P106 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.909180 2.005470 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 93 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P89 << /Matrix [ 32.316792 0.000000 -0.000000 32.316792 10.909180 2.075787 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 95 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P102 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.909180 2.110939 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 99 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P88 << /Matrix [ 32.316792 0.000000 -0.000000 32.316792 10.909180 2.099224 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 101 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P58 << /Matrix [ 32.316803 0.000000 -0.000000 32.316803 10.908203 2.064056 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 103 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P56 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908691 2.157814 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 105 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P33 << /Matrix [ 32.293419 0.000000 -0.000000 32.293419 10.932129 2.163612 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 109 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P48 << /Matrix [ 32.305107 0.000000 -0.000000 32.305107 10.918945 2.014961 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 111 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P10 << /Matrix [ 32.270050 0.000000 -0.000000 32.270050 10.955566 2.144012 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 113 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P25 << /Matrix [ 32.281734 0.000000 -0.000000 32.281734 10.942383 2.099125 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 115 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P47 << /Matrix [ 32.305107 0.000000 -0.000000 32.305107 10.920898 2.151924 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 117 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P109 << /Matrix [ 32.316803 0.000000 -0.000000 32.316803 10.909180 2.087494 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 119 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P44 << /Matrix [ 32.305107 0.000000 -0.000000 32.305107 10.920410 2.169502 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 121 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P54 << /Matrix [ 32.305107 0.000000 -0.000000 32.305107 10.919922 2.101143 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 123 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P16 << /Matrix [ 32.270046 0.000000 -0.000000 32.270046 10.955566 2.144016 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 125 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P59 << /Matrix [ 32.316792 0.000000 -0.000000 32.316792 10.908203 2.110943 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 177 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P17 << /Matrix [ 32.270046 0.000000 -0.000000 32.270046 10.955566 2.144016 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 179 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P103 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.909180 2.110939 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 127 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P92 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.907715 2.136330 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 129 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P43 << /Matrix [ 32.293419 0.000000 -0.000000 32.293419 10.932129 2.015175 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 131 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P28 << /Matrix [ 32.281731 0.000000 -0.000000 32.281731 10.941406 2.071785 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 173 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P72 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.042580 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 133 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P45 << /Matrix [ 32.305107 0.000000 -0.000000 32.305107 10.920898 2.151924 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 135 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P41 << /Matrix [ 32.293423 0.000000 -0.000000 32.293423 10.930664 2.163609 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 137 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P120 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.110939 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 143 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P37 << /Matrix [ 32.293419 0.000000 -0.000000 32.293419 10.931152 2.103065 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 145 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P34 << /Matrix [ 32.293419 0.000000 -0.000000 32.293419 10.930176 2.167519 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 147 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P32 << /Matrix [ 32.293419 0.000000 -0.000000 32.293419 10.931152 2.167519 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 149 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P30 << /Matrix [ 32.281734 0.000000 -0.000000 32.281734 10.941895 2.077641 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 153 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P100 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.907227 2.110939 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 151 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P9 << /Matrix [ 32.270042 0.000000 -0.000000 32.270042 10.954590 2.183083 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 169 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P81 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.110939 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 167 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P23 << /Matrix [ 32.281731 0.000000 -0.000000 32.281731 10.942383 2.124519 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 171 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P53 << /Matrix [ 32.305107 0.000000 -0.000000 32.305107 10.919922 2.120674 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 157 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P35 << /Matrix [ 32.293419 0.000000 -0.000000 32.293419 10.930176 2.026649 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 159 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P104 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.909180 2.110939 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 155 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P116 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.110939 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 163 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P19 << /Matrix [ 32.270042 0.000000 -0.000000 32.270042 10.953613 2.132301 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 165 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P36 << /Matrix [ 32.293419 0.000000 -0.000000 32.293419 10.930176 2.108925 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 183 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P38 << /Matrix [ 32.293419 0.000000 -0.000000 32.293419 10.931641 2.167519 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 185 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P26 << /Matrix [ 32.281731 0.000000 -0.000000 32.281731 10.942383 2.124519 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 187 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P15 << /Matrix [ 32.270046 0.000000 -0.000000 32.270046 10.954590 2.132298 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 189 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P2 << /Matrix [ 32.258362 0.000000 -0.000000 32.258362 10.967773 2.169373 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 191 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P61 << /Matrix [ 32.316792 0.000000 -0.000000 32.316792 10.907227 2.028667 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 193 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P62 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.087502 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 195 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P13 << /Matrix [ 32.270042 0.000000 -0.000000 32.270042 10.956543 2.089333 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 197 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P12 << /Matrix [ 32.270042 0.000000 -0.000000 32.270042 10.953613 2.132301 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 199 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P114 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.909180 2.110939 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 201 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P50 << /Matrix [ 32.305107 0.000000 -0.000000 32.305107 10.919922 2.101143 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 203 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P20 << /Matrix [ 32.281734 0.000000 -0.000000 32.281734 10.942871 2.120609 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 205 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P46 << /Matrix [ 32.305107 0.000000 -0.000000 32.305107 10.920898 2.079659 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 207 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P123 << /Matrix [ 32.316792 0.000000 -0.000000 32.316792 10.908203 2.091167 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 209 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P1 << /Matrix [ 32.258366 0.000000 -0.000000 32.258366 10.967773 2.184994 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 211 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P5 << /Matrix [ 32.258358 0.000000 -0.000000 32.258358 10.964844 2.122501 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 213 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P8 << /Matrix [ 32.270042 0.000000 -0.000000 32.270042 10.954590 2.132301 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 215 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P42 << /Matrix [ 32.293423 0.000000 -0.000000 32.293423 10.932617 2.044468 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 217 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P11 << /Matrix [ 32.270046 0.000000 -0.000000 32.270046 10.954590 2.132298 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 219 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P117 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908203 2.110939 ]
                                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                    /ColorSpace /DeviceRGB
                                                    /Function 221 0 R
                                                    /Domain [ 0.000000 1.000000 ]
                                                    /ShadingType 2
                                                    /Extend [ true true ]
                                                 >>
                                        /PatternType 2
                                        /Type /Pattern
                                     >>
                               /P14 << /Matrix [ 32.270046 0.000000 -0.000000 32.270046 10.954590 2.144016 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 223 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P7 << /Matrix [ 32.258358 0.000000 -0.000000 32.258358 10.967285 2.147892 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 225 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P31 << /Matrix [ 32.281734 0.000000 -0.000000 32.281734 10.942871 2.179203 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 227 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P85 << /Matrix [ 32.316792 0.000000 -0.000000 32.316792 10.909180 2.099224 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 229 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P91 << /Matrix [ 32.316792 0.000000 -0.000000 32.316792 10.907227 2.110943 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 231 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P99 << /Matrix [ 32.316795 0.000000 -0.000000 32.316795 10.908691 2.157814 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 233 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P87 << /Matrix [ 32.316792 0.000000 -0.000000 32.316792 10.909180 2.120708 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 235 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P18 << /Matrix [ 32.270046 0.000000 -0.000000 32.270046 10.955566 2.144016 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 237 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P24 << /Matrix [ 32.281731 0.000000 -0.000000 32.281731 10.943359 2.063728 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 239 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P51 << /Matrix [ 32.305107 0.000000 -0.000000 32.305107 10.918945 2.134102 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 241 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P3 << /Matrix [ 32.258358 0.000000 -0.000000 32.258358 10.967773 2.167423 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 243 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P6 << /Matrix [ 32.258358 0.000000 -0.000000 32.258358 10.966797 2.173283 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 245 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                            >>
                   /ExtGState << /E51 << /ca 0.940000 >>
                                 /E55 << /ca 0.960000 >>
                                 /E54 << /ca 0.950000 >>
                                 /E49 << /ca 0.920000 >>
                                 /E47 << /ca 0.910000 >>
                                 /E40 << /ca 0.870000 >>
                                 /E8 << /ca 0.680000 >>
                                 /E41 << /ca 0.880000 >>
                                 /E50 << /ca 0.930000 >>
                                 /E57 << /ca 0.970000 >>
                                 /E61 << /ca 0.990000 >>
                                 /E26 << /ca 0.790000 >>
                                 /E52 << /ca 0.940000 >>
                                 /E59 << /ca 0.980000 >>
                                 /E48 << /ca 0.920000 >>
                                 /E53 << /ca 0.950000 >>
                                 /E43 << /ca 0.890000 >>
                                 /E27 << /ca 0.790000 >>
                                 /E42 << /ca 0.880000 >>
                                 /E45 << /ca 0.900000 >>
                                 /E25 << /ca 0.780000 >>
                                 /E58 << /ca 0.980000 >>
                                 /E38 << /ca 0.860000 >>
                                 /E44 << /ca 0.890000 >>
                                 /E37 << /ca 0.850000 >>
                                 /E36 << /ca 0.850000 >>
                                 /E39 << /ca 0.860000 >>
                                 /E33 << /ca 0.830000 >>
                                 /E30 << /ca 0.810000 >>
                                 /E19 << /ca 0.750000 >>
                                 /E18 << /ca 0.740000 >>
                                 /E15 << /ca 0.720000 >>
                                 /E46 << /ca 0.910000 >>
                                 /E28 << /ca 0.800000 >>
                                 /E7 << /ca 0.680000 >>
                                 /E23 << /ca 0.770000 >>
                                 /E20 << /ca 0.750000 >>
                                 /E14 << /ca 0.720000 >>
                                 /E29 << /ca 0.810000 >>
                                 /E31 << /ca 0.820000 >>
                                 /E17 << /ca 0.730000 >>
                                 /E11 << /ca 0.700000 >>
                                 /E22 << /ca 0.760000 >>
                                 /E1 << /ca 0.640000 >>
                                 /E12 << /ca 0.700000 >>
                                 /E21 << /ca 0.760000 >>
                                 /E5 << /ca 0.660000 >>
                                 /E35 << /ca 0.840000 >>
                                 /E34 << /ca 0.830000 >>
                                 /E24 << /ca 0.780000 >>
                                 /E13 << /ca 0.710000 >>
                                 /E6 << /ca 0.670000 >>
                                 /E16 << /ca 0.730000 >>
                                 /E2 << /ca 0.650000 >>
                                 /E9 << /ca 0.690000 >>
                                 /E4 << /ca 0.660000 >>
                                 /E32 << /ca 0.820000 >>
                                 /E56 << /ca 0.960000 >>
                                 /E3 << /ca 0.650000 >>
                                 /E60 << /ca 0.990000 >>
                                 /E10 << /ca 0.690000 >>
                              >>
                >>
     /BBox [ 0.000000 0.000000 56.000000 56.000000 ]
  >>
stream
q
/E1 gs
1.000000 0.000000 -0.000000 1.000000 10.967773 15.053223 cm
/Pattern cs
/P1 scn
14.107189 1.039850 m
10.729412 1.039850 7.281507 3.716359 4.885506 6.088984 c
3.093562 7.887875 1.466350 9.843657 0.023376 11.932891 c
0.004778 11.957689 -0.003209 11.988861 0.001175 12.019547 c
0.005559 12.050234 0.021953 12.077923 0.046752 12.096521 c
0.071550 12.115120 0.102721 12.123107 0.133408 12.118723 c
0.164094 12.114340 0.191782 12.097944 0.210381 12.073145 c
0.292196 11.944580 8.204844 0.221703 15.053902 1.367107 c
20.173162 2.220318 21.260132 6.404557 22.312035 10.448541 c
22.728386 12.737213 23.615955 14.914347 24.918417 16.841772 c
26.472895 18.758574 28.833832 19.576719 32.153172 19.354652 c
32.184170 19.354652 32.213898 19.342339 32.235817 19.320419 c
32.257736 19.298500 32.270050 19.268770 32.270050 19.237774 c
32.270050 19.206776 32.257736 19.177048 32.235817 19.155128 c
32.213898 19.133211 32.184170 19.120897 32.153172 19.120897 c
24.965166 19.611784 23.796385 15.123663 22.557478 10.378412 c
21.493887 6.252615 20.395231 1.998251 15.124028 1.121664 c
14.788114 1.064804 14.447873 1.037430 14.107189 1.039850 c
h
f
n
Q
q
/E2 gs
1.000000 0.000000 -0.000000 1.000000 10.920898 15.061035 cm
/Pattern cs
/P2 scn
14.235753 1.111631 m
10.846289 1.111631 7.351634 3.799828 4.885506 6.172453 c
3.095803 7.935515 1.468521 9.856180 0.023376 11.911170 c
0.004778 11.935968 -0.003209 11.967138 0.001175 11.997824 c
0.005559 12.028511 0.021953 12.056200 0.046751 12.074799 c
0.071550 12.093397 0.102721 12.101383 0.133408 12.097000 c
0.164094 12.092616 0.191782 12.076221 0.210381 12.051422 c
0.292196 11.934545 8.204844 0.363611 15.030525 1.403826 c
20.173162 2.140158 21.295191 6.324395 22.382156 10.380065 c
23.632751 14.996750 24.906723 19.730314 32.153164 19.344616 c
32.184162 19.344616 32.213894 19.332302 32.235813 19.310383 c
32.257732 19.288465 32.270046 19.258736 32.270046 19.227737 c
32.270046 19.196739 32.257732 19.167013 32.235813 19.145094 c
32.213894 19.123175 32.184162 19.110861 32.153164 19.110861 c
25.140478 19.531622 23.971701 15.055190 22.639290 10.309939 c
21.528948 6.195830 20.383541 1.929777 15.088964 1.170069 c
14.805932 1.134077 14.521049 1.114565 14.235753 1.111631 c
h
f
n
Q
q
/E3 gs
1.000000 0.000000 -0.000000 1.000000 11.014648 15.363037 cm
/Pattern cs
/P3 scn
14.235753 0.893259 m
10.822913 0.893259 7.223067 3.593143 4.885505 5.965769 c
3.100743 7.699737 1.473631 9.588910 0.023376 11.610984 c
0.014167 11.623262 0.007466 11.637235 0.003657 11.652103 c
-0.000152 11.666971 -0.000996 11.682444 0.001175 11.697638 c
0.005558 11.728325 0.021953 11.756014 0.046751 11.774612 c
0.071549 11.793211 0.102721 11.801197 0.133407 11.796814 c
0.164094 11.792431 0.191782 11.776035 0.210381 11.751236 c
0.292195 11.634358 8.204843 0.332243 15.007149 1.162077 c
20.161472 1.793219 21.330256 5.989146 22.452286 10.044817 c
23.737944 14.649815 25.070354 19.395065 32.153168 19.044430 c
32.184166 19.044430 32.213890 19.032116 32.235809 19.010199 c
32.257729 18.988279 32.270042 18.958549 32.270042 18.927551 c
32.270042 18.896553 32.257729 18.866827 32.235809 18.844908 c
32.213890 18.822989 32.184166 18.810675 32.153168 18.810675 c
29.020834 18.974304 26.858587 18.167847 25.339170 16.274420 c
24.061007 14.369905 23.167654 12.233797 22.709415 9.986377 c
21.540634 5.848891 20.371853 1.582842 15.065587 0.928326 c
14.738328 0.904949 14.492886 0.893259 14.235753 0.893259 c
h
f
n
Q
q
/E4 gs
1.000000 0.000000 -0.000000 1.000000 10.951172 15.624023 cm
/Pattern cs
/P4 scn
14.403395 0.698111 m
10.967178 0.698111 7.390708 3.421371 4.901204 5.782309 c
3.122734 7.492752 1.495931 9.354190 0.039075 11.345706 c
0.026873 11.355566 0.017031 11.368030 0.010270 11.382186 c
0.003509 11.396342 0.000000 11.411833 0.000000 11.427521 c
0.000000 11.443209 0.003509 11.458696 0.010270 11.472853 c
0.017031 11.487009 0.026873 11.499475 0.039075 11.509335 c
0.048935 11.521536 0.061399 11.531378 0.075556 11.538139 c
0.089712 11.544900 0.105201 11.548409 0.120889 11.548409 c
0.136577 11.548409 0.152066 11.544900 0.166222 11.538139 c
0.180379 11.531378 0.192843 11.521536 0.202703 11.509335 c
0.284518 11.392456 8.208855 0.300726 14.976098 0.990307 c
20.142111 1.516258 21.299202 5.525177 22.526423 9.779540 c
23.847145 14.372849 25.214621 19.129787 32.133804 18.814217 c
32.164803 18.814217 32.194530 18.801903 32.216450 18.779984 c
32.238365 18.758064 32.250679 18.728334 32.250679 18.697338 c
32.250679 18.666340 32.238365 18.636610 32.216450 18.614691 c
32.194530 18.592773 32.164803 18.580460 32.133804 18.580460 c
29.059910 18.720713 26.932728 17.890879 25.413313 15.997454 c
24.140118 14.086266 23.236254 11.953461 22.748493 9.709411 c
21.579712 5.571927 20.329115 1.294191 14.999474 0.768240 c
14.802249 0.733734 14.603243 0.710321 14.403395 0.698111 c
h
f
n
Q
q
/E5 gs
1.000000 0.000000 -0.000000 1.000000 10.949219 15.867188 cm
/Pattern cs
/P5 scn
14.508586 0.526016 m
11.002242 0.526016 7.402396 3.272650 4.901204 5.633588 c
3.127791 7.315204 1.501175 9.145147 0.039075 11.103485 c
0.026873 11.113345 0.017031 11.125809 0.010270 11.139965 c
0.003509 11.154121 0.000000 11.169611 0.000000 11.185299 c
0.000000 11.200987 0.003509 11.216475 0.010270 11.230631 c
0.017031 11.244787 0.026873 11.257254 0.039075 11.267114 c
0.048935 11.279315 0.061399 11.289157 0.075556 11.295918 c
0.089712 11.302679 0.105201 11.306189 0.120889 11.306189 c
0.136577 11.306189 0.152066 11.302679 0.166222 11.295918 c
0.180379 11.289157 0.192843 11.279315 0.202703 11.267114 c
0.284518 11.161923 8.220542 0.268883 14.952722 0.748083 c
20.142111 1.145468 21.334269 5.177764 22.608240 9.432127 c
23.964027 14.013750 25.366562 18.782377 32.133804 18.501869 c
32.164803 18.501869 32.194530 18.489555 32.216450 18.467636 c
32.238365 18.445717 32.250679 18.415989 32.250679 18.384991 c
32.250679 18.353992 32.238365 18.324265 32.216450 18.302345 c
32.194530 18.280426 32.164803 18.268112 32.133804 18.268112 c
30.900261 18.411560 29.650414 18.245146 28.497377 17.783932 c
27.344343 17.322718 26.324516 16.581263 25.530190 15.626667 c
24.266384 13.735926 23.362938 11.627879 22.865370 9.408751 c
21.626461 5.259579 20.352491 0.970148 15.011162 0.549387 c
14.508586 0.526016 l
h
f
n
Q
q
/E6 gs
1.000000 0.000000 -0.000000 1.000000 10.951172 16.186768 cm
/Pattern cs
/P6 scn
14.613776 0.275959 m
11.107432 0.275959 7.425772 3.034284 4.901204 5.395222 c
3.134862 7.054270 1.508620 8.856429 0.039075 10.783303 c
0.026873 10.793163 0.017031 10.805627 0.010270 10.819783 c
0.003509 10.833939 0.000000 10.849430 0.000000 10.865118 c
0.000000 10.880806 0.003509 10.896294 0.010270 10.910450 c
0.017031 10.924606 0.026873 10.937071 0.039075 10.946932 c
0.048935 10.959133 0.061399 10.968975 0.075556 10.975737 c
0.089712 10.982497 0.105201 10.986007 0.120889 10.986007 c
0.136577 10.986007 0.152066 10.982497 0.166222 10.975737 c
0.180379 10.968975 0.192843 10.959133 0.202703 10.946932 c
0.272830 10.841742 8.220542 0.170769 14.929345 0.544779 c
20.142109 0.836973 21.381020 4.869269 22.690054 9.147008 c
24.080904 13.705254 25.530191 18.415442 32.133804 18.240126 c
32.164803 18.240126 32.194530 18.227812 32.216450 18.205893 c
32.238365 18.183973 32.250679 18.154245 32.250679 18.123247 c
32.250679 18.092249 32.238365 18.062519 32.216450 18.040600 c
32.194530 18.018682 32.164803 18.006369 32.133804 18.006369 c
30.913166 18.126343 29.681765 17.943848 28.548389 17.475006 c
27.415012 17.006163 26.414547 16.265406 25.635380 15.318172 c
24.361731 13.417316 23.439375 11.303412 22.912121 9.076881 c
21.638149 4.916021 20.317427 0.614908 14.941033 0.311026 c
14.613776 0.275959 l
h
f
n
Q
q
/E7 gs
1.000000 0.000000 -0.000000 1.000000 10.916992 16.430420 cm
/Pattern cs
/P7 scn
14.718485 0.103430 m
11.212142 0.103430 7.460355 2.885129 4.900724 5.246066 c
3.139620 6.876655 1.513585 8.647313 0.038594 10.540646 c
0.026300 10.551735 0.016503 10.565310 0.009850 10.580472 c
0.003198 10.595634 -0.000158 10.612037 0.000006 10.628593 c
0.000170 10.645149 0.003850 10.661480 0.010802 10.676506 c
0.017754 10.691534 0.027819 10.704914 0.040331 10.715757 c
0.052843 10.726601 0.067517 10.734662 0.083379 10.739408 c
0.099242 10.744154 0.115931 10.745476 0.132342 10.743284 c
0.148754 10.741095 0.164513 10.735441 0.178575 10.726701 c
0.192637 10.717960 0.204683 10.706332 0.213912 10.692587 c
0.295727 10.587397 8.079808 0.337187 14.718485 0.337187 c
14.928865 0.337187 l
20.165005 0.512505 21.438976 4.568174 22.794762 8.857600 c
24.232363 13.392471 25.705027 18.079283 32.145008 17.974092 c
32.176006 17.974092 32.205734 17.961779 32.227654 17.939859 c
32.249573 17.917940 32.261887 17.888210 32.261887 17.857214 c
32.261887 17.826216 32.249573 17.796488 32.227654 17.774570 c
32.205734 17.752651 32.176006 17.740337 32.145008 17.740337 c
31.934629 17.740337 l
25.833591 17.740337 24.395992 13.193779 23.005142 8.787475 c
21.731171 4.603238 20.375383 0.267059 14.975616 0.103430 c
14.718485 0.103430 l
h
f
n
Q
q
/E8 gs
1.000000 0.000000 -0.000000 1.000000 10.951172 16.540527 cm
/Pattern cs
/P8 scn
15.069118 0.049593 m
14.905490 0.049593 l
11.399146 0.108032 7.507105 2.936482 4.900723 5.285732 c
3.147514 6.869637 1.521778 8.589168 0.038594 10.428370 c
0.026300 10.439461 0.016502 10.453035 0.009849 10.468197 c
0.003197 10.483358 -0.000158 10.499762 0.000006 10.516317 c
0.000170 10.532873 0.003849 10.549204 0.010801 10.564232 c
0.017753 10.579258 0.027819 10.592638 0.040331 10.603482 c
0.052843 10.614326 0.067516 10.622387 0.083378 10.627132 c
0.099241 10.631878 0.115931 10.633200 0.132342 10.631009 c
0.148754 10.628819 0.164512 10.623165 0.178574 10.614426 c
0.192636 10.605686 0.204681 10.594057 0.213911 10.580311 c
0.295726 10.475121 8.266813 0.388540 14.917177 0.283350 c
15.069118 0.283350 l
20.200068 0.283350 21.509102 4.339021 22.888264 8.640135 c
24.349239 13.175005 25.868656 17.861816 32.074883 17.861816 c
32.215137 17.861816 l
32.246136 17.861816 32.275860 17.849503 32.297779 17.827583 c
32.319698 17.805664 32.332012 17.775936 32.332012 17.744938 c
32.332012 17.713940 32.319698 17.684214 32.297779 17.662294 c
32.275860 17.640375 32.246136 17.628061 32.215137 17.628061 c
32.133320 17.628061 l
26.090723 17.628061 24.606371 13.023064 23.168772 8.570008 c
22.607962 6.474543 21.716261 4.482029 20.527327 2.667665 c
19.905376 1.813530 19.081078 1.127184 18.128416 0.670233 c
17.175755 0.213280 16.124538 0.000021 15.069118 0.049593 c
h
f
n
Q
q
/E9 gs
1.000000 0.000000 -0.000000 1.000000 10.951172 16.652832 cm
/Pattern cs
/P9 scn
15.291185 0.045771 m
14.882112 0.045771 l
11.375769 0.197712 7.507104 3.002788 4.900723 5.328662 c
3.154658 6.882129 1.529262 8.566133 0.038594 10.366108 c
0.026300 10.377197 0.016502 10.390772 0.009849 10.405933 c
0.003197 10.421095 -0.000158 10.437498 0.000006 10.454055 c
0.000170 10.470612 0.003849 10.486944 0.010801 10.501970 c
0.017753 10.516998 0.027819 10.530376 0.040331 10.541220 c
0.052843 10.552063 0.067516 10.560124 0.083378 10.564870 c
0.099241 10.569615 0.115931 10.570937 0.132342 10.568747 c
0.148754 10.566556 0.164512 10.560904 0.178574 10.552163 c
0.192636 10.543423 0.204681 10.531795 0.213911 10.518048 c
0.295726 10.412858 8.278500 0.560036 14.893800 0.279528 c
20.176689 0.057459 21.532476 4.183256 22.981764 8.542809 c
24.477804 13.089369 26.032284 17.776180 32.156696 17.799557 c
32.172497 17.801435 32.188519 17.799706 32.203552 17.794497 c
32.218590 17.789288 32.232246 17.780735 32.243500 17.769484 c
32.254749 17.758232 32.263302 17.744574 32.268509 17.729538 c
32.273720 17.714502 32.275452 17.698479 32.273571 17.682678 c
32.273571 17.651680 32.261257 17.621952 32.239338 17.600033 c
32.217419 17.578114 32.187691 17.565800 32.156696 17.565800 c
26.207600 17.565800 24.676497 12.890675 23.203833 8.472681 c
22.638023 6.351099 21.734287 4.334464 20.527323 2.500210 c
19.917965 1.698294 19.123259 1.056082 18.211309 0.628605 c
17.299360 0.201130 16.297363 0.001137 15.291185 0.045771 c
h
f
n
Q
q
/E10 gs
1.000000 0.000000 -0.000000 1.000000 10.948242 16.658203 cm
/Pattern cs
/P10 scn
15.201549 0.037140 m
14.862601 0.037140 l
11.356257 0.165705 7.510968 2.959091 4.904586 5.273277 c
3.158860 6.826668 1.529852 8.506461 0.030768 10.299038 c
0.010852 10.323914 0.000000 10.354828 0.000000 10.386694 c
-0.000000 10.418561 0.010852 10.449478 0.030768 10.474354 c
0.053800 10.493354 0.082726 10.503744 0.112583 10.503744 c
0.142440 10.503744 0.171367 10.493354 0.194398 10.474354 c
0.276213 10.380852 8.258986 0.528028 14.839225 0.294271 c
20.157179 0.118956 21.559715 4.233063 23.020691 8.592616 c
24.481668 12.952169 26.129654 17.674046 32.102127 17.755859 c
32.133125 17.755859 32.162849 17.743546 32.184769 17.721626 c
32.206688 17.699707 32.219002 17.669979 32.219002 17.638981 c
32.219002 17.607983 32.206688 17.578257 32.184769 17.556337 c
32.162849 17.534418 32.133125 17.522102 32.102127 17.522102 c
26.258221 17.440289 24.738800 12.905418 23.231073 8.510801 c
22.656010 6.403087 21.744312 4.402083 20.531191 2.585082 c
19.914610 1.761569 19.107740 1.099648 18.179592 0.655928 c
17.251444 0.212208 16.229633 -0.000109 15.201549 0.037140 c
h
f
n
Q
q
/E11 gs
1.000000 0.000000 -0.000000 1.000000 10.947266 16.635010 cm
/Pattern cs
/P11 scn
15.388552 0.059563 m
14.827538 0.059563 l
11.321195 0.258255 7.510967 3.028267 4.904585 5.307390 c
3.165739 6.838708 1.537090 8.490789 0.030768 10.251334 c
0.010852 10.276210 0.000000 10.307127 0.000000 10.338993 c
0.000000 10.370860 0.010852 10.401777 0.030768 10.426653 c
0.053800 10.445653 0.082726 10.456043 0.112583 10.456043 c
0.142440 10.456043 0.171367 10.445653 0.194398 10.426653 c
0.276213 10.333151 8.270676 0.690706 14.815849 0.316696 c
20.157179 0.001125 21.606464 4.138609 23.149256 8.498162 c
24.692047 12.857716 26.375093 17.591280 32.218998 17.766598 c
32.234802 17.768476 32.250824 17.766748 32.265858 17.761539 c
32.280895 17.756330 32.294552 17.747776 32.305801 17.736525 c
32.317055 17.725273 32.325611 17.711615 32.330818 17.696579 c
32.336029 17.681541 32.337753 17.665520 32.335876 17.649719 c
32.335876 17.634371 32.332855 17.619173 32.326981 17.604994 c
32.321106 17.590813 32.312496 17.577929 32.301643 17.567076 c
32.290791 17.556223 32.277908 17.547613 32.263729 17.541740 c
32.249546 17.535866 32.234348 17.532843 32.218998 17.532843 c
26.562099 17.392590 24.984245 12.857716 23.453142 8.509851 c
22.852381 6.393574 21.912996 4.388506 20.671442 2.572444 c
20.061102 1.756102 19.261127 1.100685 18.340673 0.662857 c
17.420218 0.225031 16.406982 0.017965 15.388552 0.059563 c
h
f
n
Q
q
/E12 gs
1.000000 0.000000 -0.000000 1.000000 10.942383 16.613525 cm
/Pattern cs
/P12 scn
15.579305 0.186977 m
14.807910 0.186977 l
8.192609 0.724615 0.116332 10.226806 0.034517 10.320309 c
0.012334 10.344108 0.000000 10.375431 0.000000 10.407966 c
0.000000 10.440500 0.012334 10.471825 0.034517 10.495625 c
0.056365 10.517040 0.085738 10.529036 0.116331 10.529036 c
0.146924 10.529036 0.176299 10.517040 0.198147 10.495625 c
0.279961 10.402122 8.286111 0.970060 14.796222 0.444109 c
20.172615 -0.000027 21.668653 4.172519 23.258196 8.625575 c
24.847738 13.078630 26.495720 17.613501 32.222748 17.788818 c
32.253746 17.788818 32.283470 17.776505 32.305389 17.754585 c
32.327309 17.732666 32.339622 17.702938 32.339622 17.671940 c
32.339622 17.640942 32.327309 17.611216 32.305389 17.589296 c
32.283470 17.567377 32.253746 17.555063 32.222748 17.555063 c
26.729477 17.356371 25.116558 12.879938 23.550392 8.520385 c
22.933872 6.390215 21.970341 4.376275 20.698565 2.559601 c
20.097326 1.783413 19.318611 1.162834 18.427820 0.749979 c
17.537031 0.337124 16.560179 0.144053 15.579305 0.186977 c
h
f
n
Q
q
/E13 gs
1.000000 0.000000 -0.000000 1.000000 10.922852 16.512207 cm
/Pattern cs
/P13 scn
15.765248 0.338831 m
15.442107 0.321917 15.118302 0.321917 14.795160 0.338831 c
8.226611 1.028412 0.138647 10.320218 0.056832 10.413721 c
0.040482 10.424713 0.026878 10.439316 0.017069 10.456402 c
0.007259 10.473488 0.001508 10.492599 0.000259 10.512260 c
-0.000991 10.531923 0.002295 10.551609 0.009863 10.569798 c
0.017430 10.587989 0.029078 10.604197 0.043905 10.617170 c
0.058731 10.630144 0.076342 10.639536 0.095375 10.644622 c
0.114409 10.649708 0.134357 10.650352 0.153679 10.646503 c
0.173000 10.642655 0.191180 10.634418 0.206812 10.622427 c
0.222445 10.610437 0.235112 10.595014 0.243837 10.577349 c
0.313964 10.483847 8.343490 1.227104 14.818537 0.572588 c
20.229994 -0.000114 21.772785 4.207494 23.409079 8.660549 c
25.045372 13.113605 26.681665 17.578348 32.186623 17.847168 c
32.217621 17.847168 32.247349 17.834854 32.269268 17.812935 c
32.291187 17.791016 32.303501 17.761288 32.303501 17.730289 c
32.303501 17.699291 32.291187 17.669563 32.269268 17.647644 c
32.247349 17.625725 32.217621 17.613411 32.186623 17.613411 c
26.845295 17.356279 25.173937 12.938288 23.619459 8.578735 c
22.979712 6.430237 21.992683 4.400910 20.697506 2.571201 c
20.105616 1.841166 19.351597 1.259254 18.495378 0.871725 c
17.639162 0.484196 16.704350 0.301729 15.765248 0.338831 c
h
f
n
Q
q
/E14 gs
1.000000 0.000000 -0.000000 1.000000 10.888672 16.496582 cm
/Pattern cs
/P14 scn
15.914503 0.385763 m
15.523867 0.386059 15.133591 0.409477 14.745722 0.455891 c
8.200548 1.297415 0.112583 10.390532 0.030768 10.472345 c
0.010852 10.497221 0.000000 10.528137 0.000000 10.560003 c
0.000000 10.591869 0.010852 10.622787 0.030768 10.647663 c
0.053800 10.666662 0.082726 10.677053 0.112583 10.677053 c
0.142440 10.677053 0.171367 10.666662 0.194398 10.647663 c
0.276213 10.554160 8.305738 1.531170 14.769098 0.701334 c
20.203930 0.000065 21.781782 4.207677 23.476515 8.730860 c
25.171247 13.254043 26.795855 17.590221 32.137184 17.917480 c
32.152534 17.917480 32.167732 17.914457 32.181911 17.908583 c
32.196095 17.902710 32.208977 17.894100 32.219830 17.883247 c
32.230682 17.872395 32.239292 17.859510 32.245167 17.845329 c
32.251041 17.831150 32.254063 17.815950 32.254063 17.800602 c
32.254063 17.785254 32.251041 17.770056 32.245167 17.755877 c
32.239292 17.741695 32.230682 17.728811 32.219830 17.717958 c
32.208977 17.707106 32.196095 17.698494 32.181911 17.692621 c
32.167732 17.686747 32.152534 17.683723 32.137184 17.683723 c
26.936110 17.368153 25.276438 12.938473 23.675209 8.649046 c
23.046972 6.465633 22.063751 4.400474 20.764944 2.536321 c
20.178001 1.826971 19.434427 1.263531 18.592751 0.890354 c
17.751076 0.517178 16.834270 0.344448 15.914503 0.385763 c
h
f
n
Q
q
/E15 gs
1.000000 0.000000 -0.000000 1.000000 10.912109 16.426514 cm
/Pattern cs
/P15 scn
16.101509 0.479179 m
15.639757 0.478437 15.178646 0.513607 14.722347 0.584370 c
8.212236 1.577833 0.112583 10.460569 0.030768 10.542384 c
0.010852 10.567260 0.000000 10.598175 0.000000 10.630041 c
0.000000 10.661907 0.010852 10.692825 0.030768 10.717701 c
0.053800 10.736701 0.082726 10.747091 0.112583 10.747091 c
0.142440 10.747091 0.171366 10.736701 0.194397 10.717701 c
0.276212 10.624199 8.375866 1.811588 14.745724 0.829813 c
20.215618 -0.000023 21.851912 4.336155 23.581709 8.800899 c
25.241377 13.125388 27.006235 17.601820 32.183937 17.975830 c
32.214935 17.975830 32.244667 17.963516 32.266582 17.941597 c
32.288502 17.919678 32.300816 17.889950 32.300816 17.858952 c
32.300816 17.827953 32.288502 17.798227 32.266582 17.776308 c
32.244667 17.754389 32.214935 17.742075 32.183937 17.742075 c
27.146490 17.379753 25.463448 12.973447 23.827154 8.707397 c
23.151911 6.520133 22.121300 4.458911 20.776634 2.606359 c
20.210840 1.919146 19.495533 1.370266 18.685299 1.001608 c
17.875067 0.632952 16.991322 0.454266 16.101509 0.479179 c
h
f
n
Q
q
/E16 gs
1.000000 0.000000 -0.000000 1.000000 10.948242 16.343018 cm
/Pattern cs
/P16 scn
16.218388 0.597128 m
15.704925 0.599539 15.192639 0.646469 14.687284 0.737385 c
8.223924 1.906166 0.112583 10.543457 0.030768 10.625271 c
0.010852 10.650146 0.000000 10.681062 0.000000 10.712929 c
-0.000000 10.744795 0.010852 10.775712 0.030768 10.800588 c
0.053800 10.819588 0.082726 10.829979 0.112583 10.829979 c
0.142440 10.829979 0.171367 10.819588 0.194398 10.800588 c
0.276213 10.718773 8.375867 2.104855 14.722348 0.971138 c
20.227308 0.001049 21.922039 4.325540 23.698587 8.895473 c
25.381632 13.196589 27.111429 17.637957 32.137188 18.070406 c
32.152550 18.072020 32.168079 18.070572 32.182880 18.066147 c
32.197678 18.061722 32.211456 18.054407 32.223412 18.044626 c
32.235367 18.034843 32.245262 18.022789 32.252529 18.009157 c
32.259800 17.995527 32.264294 17.980593 32.265755 17.965214 c
32.266262 17.934805 32.255970 17.905201 32.236713 17.881662 c
32.217453 17.858122 32.190472 17.842175 32.160564 17.836649 c
27.275059 17.415886 25.568638 13.044646 23.979095 8.813659 c
23.264526 6.608518 22.186043 4.538470 20.788321 2.689247 c
20.234663 2.017319 19.535660 1.479881 18.744028 1.117472 c
17.952394 0.755062 17.088802 0.577141 16.218388 0.597128 c
h
f
n
Q
q
/E17 gs
1.000000 0.000000 -0.000000 1.000000 10.971680 16.204346 cm
/Pattern cs
/P17 scn
16.335264 0.748129 m
15.773466 0.757183 15.213813 0.819801 14.663906 0.935135 c
8.235611 2.220794 0.112582 10.682768 0.030767 10.764583 c
0.010851 10.789459 0.000000 10.820374 0.000000 10.852240 c
0.000000 10.884107 0.010851 10.915024 0.030767 10.939899 c
0.053799 10.958899 0.082726 10.969290 0.112583 10.969290 c
0.142440 10.969290 0.171366 10.958899 0.194397 10.939899 c
0.276212 10.858085 8.375866 2.454551 14.698971 1.168892 c
20.250681 0.000111 21.980474 4.418100 23.815460 9.046474 c
25.510193 13.312525 27.321808 17.718828 32.137184 18.209717 c
32.167027 18.208166 32.195587 18.197124 32.218716 18.178204 c
32.241840 18.159283 32.258324 18.133469 32.265751 18.104527 c
32.265751 18.104527 32.265751 17.987648 32.160561 17.975960 c
27.426998 17.496759 25.708889 13.160583 24.037533 8.964659 c
23.310850 6.751890 22.216339 4.677457 20.800009 2.828559 c
20.258011 2.170835 19.575775 1.642653 18.803257 1.282682 c
18.030739 0.922714 17.187494 0.740072 16.335264 0.748129 c
h
f
n
Q
q
/E18 gs
1.000000 0.000000 -0.000000 1.000000 10.948242 16.181152 cm
/Pattern cs
/P18 scn
16.498892 0.794697 m
15.869142 0.797623 15.241766 0.872122 14.628844 1.016764 c
8.247300 2.454365 0.112583 10.705961 0.030768 10.787775 c
0.010852 10.812651 0.000000 10.843567 0.000000 10.875433 c
-0.000000 10.907299 0.010852 10.938216 0.030768 10.963093 c
0.053800 10.982092 0.082726 10.992483 0.112583 10.992483 c
0.142440 10.992483 0.171367 10.982092 0.194398 10.963093 c
0.276213 10.881277 8.375865 2.676433 14.675594 1.262207 c
20.274055 -0.000076 22.050602 4.406229 23.944027 9.081354 c
25.650448 13.312342 27.450371 17.695271 32.125496 18.232910 c
32.140842 18.232910 32.156044 18.229887 32.170223 18.224012 c
32.184402 18.218140 32.197289 18.209530 32.208141 18.198677 c
32.218994 18.187824 32.227604 18.174940 32.233475 18.160759 c
32.239349 18.146580 32.242374 18.131380 32.242374 18.116032 c
32.242374 18.100683 32.239349 18.085485 32.233475 18.071306 c
32.227604 18.057125 32.218994 18.044241 32.208141 18.033388 c
32.197289 18.022535 32.184402 18.013924 32.170223 18.008051 c
32.156044 18.002176 32.140842 17.999153 32.125496 17.999153 c
27.555561 17.473202 25.814079 13.160400 24.119347 8.999539 c
23.378805 6.752443 22.264519 4.646362 20.823383 2.769936 c
20.289076 2.146610 19.625494 1.647058 18.878717 1.305964 c
18.131943 0.964869 17.319868 0.790407 16.498892 0.794697 c
h
f
n
Q
q
/E19 gs
1.000000 0.000000 -0.000000 1.000000 10.912109 16.075928 cm
/Pattern cs
/P19 scn
16.673382 0.911579 m
15.987152 0.919184 15.304338 1.009439 14.639702 1.180399 c
8.293221 2.769940 0.146817 10.811155 0.065002 10.892970 c
0.047800 10.902755 0.033089 10.916376 0.022014 10.932778 c
0.010940 10.949181 0.003801 10.967918 0.001155 10.987532 c
-0.001492 11.007144 0.000425 11.027102 0.006756 11.045851 c
0.013087 11.064602 0.023662 11.081639 0.037656 11.095634 c
0.051650 11.109627 0.068685 11.120199 0.087436 11.126532 c
0.106186 11.132862 0.126145 11.134779 0.145758 11.132133 c
0.165370 11.129486 0.184108 11.122349 0.200510 11.111274 c
0.216912 11.100199 0.230535 11.085489 0.240319 11.068287 c
0.322134 10.986472 8.421786 2.980322 14.698140 1.414156 c
20.331665 -0.000071 22.166653 4.464673 24.118517 9.198236 c
25.836626 13.394161 27.624857 17.730337 32.183105 18.326416 c
32.214100 18.326416 32.243832 18.314102 32.265751 18.292183 c
32.287670 18.270264 32.299984 18.240536 32.299984 18.209538 c
32.299984 18.178539 32.287670 18.148813 32.265751 18.126894 c
32.243832 18.104975 32.214100 18.092661 32.183105 18.092661 c
27.765112 17.519958 26.000254 13.242219 24.305521 9.104734 c
23.538969 6.838243 22.397158 4.716607 20.927744 2.828379 c
20.399191 2.220495 19.745186 1.734367 19.010750 1.403467 c
18.276312 1.072569 17.478889 0.904755 16.673382 0.911579 c
h
f
n
Q
q
/E20 gs
1.000000 0.000000 -0.000000 1.000000 10.947266 15.982422 cm
/Pattern cs
/P20 scn
16.767714 1.016771 m
16.024588 1.024881 15.285777 1.130987 14.570404 1.332342 c
8.270675 3.073826 0.112583 10.916349 0.030768 10.986476 c
0.010852 11.011352 0.000000 11.042267 0.000000 11.074133 c
-0.000000 11.105999 0.010852 11.136917 0.030768 11.161793 c
0.053800 11.180793 0.082726 11.191183 0.112583 11.191183 c
0.142440 11.191183 0.171367 11.180793 0.194398 11.161793 c
0.276213 11.079978 8.375864 3.272519 14.640531 1.566099 c
20.320807 -0.000067 22.214231 4.523116 24.212847 9.315119 c
25.942642 13.475979 27.719191 17.777092 32.148872 18.419922 c
32.179871 18.419922 32.209599 18.407608 32.231518 18.385689 c
32.253437 18.363770 32.265751 18.334042 32.265751 18.303043 c
32.265751 18.272045 32.253437 18.242319 32.231518 18.220400 c
32.209599 18.198481 32.179871 18.186167 32.148872 18.186167 c
27.882820 17.566713 26.117960 13.324038 24.399851 9.221617 c
23.604652 6.923828 22.418425 4.780708 20.893509 2.886823 c
20.377813 2.300283 19.743219 1.830187 19.031874 1.507763 c
18.320528 1.185341 17.548717 1.017971 16.767714 1.016771 c
h
f
n
Q
q
/E21 gs
1.000000 0.000000 -0.000000 1.000000 10.971680 15.888916 cm
/Pattern cs
/P21 scn
16.872225 1.121965 m
16.078690 1.128712 15.290687 1.254793 14.534662 1.495975 c
8.269996 3.366025 0.100217 11.009854 0.030090 11.079981 c
0.010988 11.101158 0.000289 11.128588 0.000006 11.157104 c
-0.000277 11.185623 0.009877 11.213259 0.028555 11.234811 c
0.047233 11.256363 0.073146 11.270342 0.101414 11.274115 c
0.129682 11.277888 0.158355 11.271195 0.182031 11.255298 c
0.263846 11.173483 8.363500 3.576404 14.604791 1.718042 c
20.331818 -0.000067 22.271996 4.581556 24.329050 9.443686 c
26.070534 13.557796 27.835390 17.812159 32.124817 18.513428 c
32.155815 18.513428 32.185547 18.501114 32.207466 18.479195 c
32.229385 18.457275 32.241699 18.427547 32.241699 18.396549 c
32.241699 18.365551 32.229385 18.335825 32.207466 18.313906 c
32.185547 18.291986 32.155815 18.279673 32.124817 18.279673 c
27.999020 17.613468 26.280914 13.405853 24.504366 9.350183 c
23.707502 7.028133 22.521845 4.858379 20.998024 2.933575 c
20.477013 2.357674 19.840048 1.898525 19.128971 1.586296 c
18.417896 1.274067 17.648804 1.115826 16.872225 1.121965 c
h
f
n
Q
q
/E22 gs
1.000000 0.000000 -0.000000 1.000000 10.971680 15.783691 cm
/Pattern cs
/P22 scn
17.000792 1.227190 m
16.149515 1.238993 15.305422 1.384933 14.499600 1.659637 c
8.281685 3.681629 0.111904 11.115079 0.030090 11.185205 c
0.010988 11.206383 0.000289 11.233812 0.000006 11.262329 c
-0.000277 11.290848 0.009877 11.318483 0.028555 11.340035 c
0.047233 11.361588 0.073146 11.375566 0.101414 11.379339 c
0.129682 11.383113 0.158355 11.376420 0.182031 11.360522 c
0.263846 11.290396 8.363499 3.880324 14.581414 1.881708 c
20.366880 -0.000029 22.353809 4.651718 24.469301 9.583975 c
26.222473 13.651333 28.034084 17.870632 32.124817 18.618652 c
32.155815 18.618652 32.185547 18.606339 32.207466 18.584419 c
32.229385 18.562500 32.241699 18.532772 32.241699 18.501774 c
32.241699 18.470776 32.229385 18.441050 32.207466 18.419130 c
32.185547 18.397211 32.155815 18.384897 32.124817 18.384897 c
28.150961 17.671942 26.362728 13.511080 24.632933 9.490472 c
23.806383 7.136329 22.580746 4.942042 21.009712 3.003737 c
20.501986 2.444845 19.883144 1.998137 19.192812 1.692217 c
18.502480 1.386295 17.755871 1.227909 17.000792 1.227190 c
h
f
n
Q
q
/E23 gs
1.000000 0.000000 -0.000000 1.000000 10.958984 15.678711 cm
/Pattern cs
/P23 scn
17.129358 1.333326 m
16.223776 1.347687 15.326994 1.513609 14.476224 1.824211 c
8.293372 3.986457 0.111904 11.174463 0.030090 11.291342 c
0.010988 11.312519 0.000289 11.339949 0.000006 11.368465 c
-0.000277 11.396983 0.009876 11.424620 0.028554 11.446171 c
0.047232 11.467723 0.073145 11.481703 0.101413 11.485476 c
0.129681 11.489249 0.158355 11.482556 0.182031 11.466659 c
0.263846 11.396532 8.363499 4.196840 14.558039 2.046284 c
20.401945 0.000916 22.435625 4.722792 24.609556 9.725175 c
26.362728 13.757469 28.115900 17.906641 32.124821 18.724787 c
32.140190 18.728184 32.156090 18.728439 32.171562 18.725538 c
32.187035 18.722639 32.201763 18.716642 32.214859 18.707909 c
32.227959 18.699177 32.239159 18.687889 32.247787 18.674723 c
32.256416 18.661556 32.262295 18.646780 32.265072 18.631285 c
32.268993 18.600565 32.261692 18.569464 32.244514 18.543697 c
32.227337 18.517929 32.201435 18.499229 32.171574 18.491032 c
28.349659 17.731325 26.561422 13.617216 24.831627 9.631673 c
23.977694 7.249177 22.720470 5.031242 21.114902 3.074807 c
20.608526 2.522928 19.992426 2.082943 19.306093 1.783051 c
18.619762 1.483158 17.878342 1.329975 17.129358 1.333326 c
h
f
n
Q
q
/E24 gs
1.000000 0.000000 -0.000000 1.000000 10.951172 15.516357 cm
/Pattern cs
/P24 scn
17.255220 1.484388 m
16.297955 1.502115 15.351712 1.692160 14.461832 2.045408 c
8.314043 4.382970 0.120889 11.395653 0.039075 11.395653 c
0.026873 11.405514 0.017031 11.417979 0.010270 11.432136 c
0.003509 11.446292 0.000000 11.461781 0.000000 11.477468 c
0.000000 11.493155 0.003509 11.508646 0.010270 11.522802 c
0.017031 11.536959 0.026873 11.549421 0.039075 11.559282 c
0.039075 11.617722 0.144264 11.617722 0.202703 11.559282 c
0.261142 11.500843 8.384171 4.488159 14.555334 2.209036 c
20.399239 0.000040 22.549795 4.792042 24.782167 9.876239 c
26.535339 13.861782 28.346949 18.057707 32.145489 18.829102 c
32.176483 18.829102 32.206215 18.816788 32.228134 18.794868 c
32.250053 18.772949 32.262367 18.743221 32.262367 18.712223 c
32.262367 18.681225 32.250053 18.651497 32.228134 18.629578 c
32.206215 18.607658 32.176483 18.595345 32.145489 18.595345 c
28.463827 17.788885 26.675596 13.721529 24.945801 9.782737 c
24.070053 7.364663 22.785164 5.115117 21.147263 3.132370 c
20.643503 2.608990 20.038902 2.193127 19.369970 1.909885 c
18.701036 1.626644 17.981644 1.481897 17.255220 1.484388 c
h
f
n
Q
q
/E25 gs
1.000000 0.000000 -0.000000 1.000000 10.942383 15.353027 cm
/Pattern cs
/P25 scn
17.368090 1.636370 m
16.358345 1.663113 15.362851 1.881248 14.434448 2.279198 c
8.333410 4.721951 0.128566 11.547632 0.046751 11.629448 c
0.034472 11.638657 0.024127 11.650194 0.016307 11.663402 c
0.008487 11.676609 0.003346 11.691227 0.001175 11.706422 c
-0.000996 11.721617 -0.000153 11.737089 0.003656 11.751957 c
0.007465 11.766826 0.014166 11.780800 0.023375 11.793078 c
0.032584 11.805357 0.044122 11.815701 0.057329 11.823521 c
0.070536 11.831341 0.085154 11.836483 0.100349 11.838654 c
0.115543 11.840824 0.131016 11.839981 0.145885 11.836172 c
0.160753 11.832363 0.174726 11.825661 0.187005 11.816452 c
0.268820 11.746325 8.450289 4.932331 14.527950 2.466204 c
20.605612 0.000074 22.627604 4.955708 24.918413 10.121721 c
26.683273 14.072201 28.494884 18.151247 32.141483 19.027832 c
32.172482 19.027832 32.202206 19.015518 32.224125 18.993599 c
32.246044 18.971680 32.258358 18.941954 32.258358 18.910955 c
32.258358 18.879957 32.246044 18.850229 32.224125 18.828310 c
32.202206 18.806391 32.172482 18.794077 32.141483 18.794077 c
28.635138 17.952555 26.823528 13.920259 25.128796 10.028218 c
23.960014 7.386773 22.791233 4.897266 21.236753 3.296037 c
20.738810 2.770670 20.138853 2.352491 19.473633 2.067110 c
18.808413 1.781729 18.091938 1.635155 17.368090 1.636370 c
h
f
n
Q
q
/E26 gs
1.000000 0.000000 -0.000000 1.000000 10.942383 15.310791 cm
/Pattern cs
/P26 scn
17.484962 1.663790 m
16.422937 1.693287 15.377648 1.935728 14.411070 2.376743 c
8.345097 4.959748 0.128566 11.598427 0.046751 11.656866 c
0.034472 11.666075 0.024127 11.677610 0.016307 11.690818 c
0.008487 11.704025 0.003346 11.718644 0.001175 11.733839 c
-0.000996 11.749033 -0.000153 11.764505 0.003656 11.779373 c
0.007465 11.794243 0.014166 11.808216 0.023375 11.820495 c
0.032584 11.832773 0.044122 11.843118 0.057329 11.850938 c
0.070536 11.858758 0.085154 11.863899 0.100349 11.866070 c
0.115543 11.868240 0.131016 11.867398 0.145885 11.863588 c
0.160753 11.859779 0.174726 11.853081 0.187005 11.843871 c
0.268820 11.773745 8.461974 5.170130 14.504573 2.587124 c
20.547171 0.004118 22.686039 4.924686 25.082041 10.230952 c
26.823524 14.134681 28.588383 18.166975 32.094727 19.090313 c
32.125725 19.099611 32.159149 19.096216 32.187641 19.080873 c
32.216137 19.065531 32.237370 19.039495 32.246670 19.008497 c
32.255970 18.977501 32.252575 18.944077 32.237232 18.915583 c
32.221886 18.887087 32.195854 18.865856 32.164856 18.856558 c
28.775391 17.968285 26.987156 13.994427 25.257359 10.137449 c
24.088577 7.460941 22.919794 4.936377 21.271814 3.311770 c
20.782806 2.797907 20.195730 2.387304 19.545298 2.104244 c
18.894865 1.821186 18.194279 1.671417 17.484962 1.663790 c
h
f
n
Q
q
/E27 gs
1.000000 0.000000 -0.000000 1.000000 10.955078 15.207520 cm
/Pattern cs
/P27 scn
17.576817 1.757261 m
16.461700 1.784979 15.365567 2.052040 14.362667 2.540346 c
8.343444 5.275294 0.115226 11.703590 0.033411 11.762029 c
0.011996 11.783876 0.000000 11.813250 0.000000 11.843843 c
0.000000 11.874436 0.011996 11.903810 0.033411 11.925657 c
0.055259 11.947073 0.084632 11.959067 0.115226 11.959067 c
0.145819 11.959067 0.175192 11.947073 0.197040 11.925657 c
0.278855 11.855531 8.483699 5.450611 14.491234 2.727352 c
20.498770 0.004091 22.824644 5.064912 25.244022 10.382867 c
26.985506 14.228157 28.750362 18.213699 32.139828 19.172100 c
32.170826 19.181398 32.204250 19.178003 32.232742 19.162661 c
32.261238 19.147318 32.282471 19.121283 32.291771 19.090284 c
32.301071 19.059288 32.297676 19.025866 32.282333 18.997372 c
32.266987 18.968876 32.240955 18.947643 32.209957 18.938345 c
28.960745 18.015007 27.184198 14.087902 25.454403 10.277677 c
24.285622 7.682981 23.058399 4.983096 21.387043 3.358490 c
20.892160 2.849207 20.299681 2.444925 19.645016 2.169806 c
18.990349 1.894686 18.286936 1.754374 17.576817 1.757261 c
h
f
n
Q
q
/E28 gs
1.000000 0.000000 -0.000000 1.000000 10.949219 16.940430 cm
/Pattern cs
/P28 scn
17.687668 0.004787 m
16.523401 0.043882 15.382074 0.339193 14.344954 0.869686 c
8.349107 3.744888 0.120889 9.974491 0.039075 10.032930 c
0.026873 10.042791 0.017031 10.055254 0.010270 10.069410 c
0.003509 10.083567 0.000000 10.099057 0.000000 10.114745 c
0.000000 10.130432 0.003509 10.145921 0.010270 10.160077 c
0.017031 10.174233 0.026873 10.186699 0.039075 10.196560 c
0.048935 10.208761 0.061399 10.218603 0.075556 10.225364 c
0.089712 10.232124 0.105201 10.235634 0.120889 10.235634 c
0.136577 10.235634 0.152066 10.232124 0.166222 10.225364 c
0.180379 10.218603 0.192843 10.208761 0.202703 10.196560 c
0.284518 10.138121 8.501049 3.920205 14.473520 1.056692 c
15.202606 0.635893 16.010210 0.369009 16.846470 0.272518 c
17.682728 0.176027 18.529888 0.251976 19.335648 0.495678 c
22.117346 1.500829 23.788704 5.170799 25.413309 8.677142 c
27.143106 12.475681 28.919651 16.414474 32.145489 17.407940 c
32.176483 17.417238 32.209908 17.413843 32.238403 17.398500 c
32.266899 17.383158 32.288132 17.357122 32.297428 17.326124 c
32.306728 17.295128 32.303333 17.261703 32.287991 17.233210 c
32.272648 17.204714 32.246613 17.183481 32.215614 17.174183 c
29.106657 16.215782 27.341799 12.335428 25.623692 8.583640 c
23.905582 4.831852 22.269289 1.337196 19.359024 0.296982 c
18.823149 0.103079 18.257544 0.004196 17.687668 0.004787 c
h
f
n
Q
q
/E29 gs
1.000000 0.000000 -0.000000 1.000000 10.916992 16.920166 cm
/Pattern cs
/P29 scn
17.827921 0.000849 m
16.599348 0.035543 15.396985 0.364189 14.321578 0.959248 c
9.368584 3.677342 4.597672 6.714799 0.039074 10.052368 c
0.026872 10.062229 0.017031 10.074692 0.010270 10.088848 c
0.003509 10.103004 0.000000 10.118494 0.000000 10.134182 c
0.000000 10.149870 0.003509 10.165359 0.010270 10.179515 c
0.017031 10.193671 0.026872 10.206137 0.039074 10.215997 c
0.048934 10.228199 0.061399 10.238041 0.075556 10.244802 c
0.089712 10.251562 0.105201 10.255072 0.120889 10.255072 c
0.136577 10.255072 0.152066 10.251562 0.166222 10.244802 c
0.180379 10.238041 0.192843 10.228199 0.202703 10.215997 c
4.750612 6.887672 9.509765 3.858053 14.450145 1.146254 c
15.177771 0.696531 15.991386 0.403910 16.838770 0.287167 c
17.686155 0.170425 18.548586 0.232145 19.370712 0.468363 c
22.199162 1.461826 23.917273 5.143486 25.576941 8.813458 c
27.236610 12.483431 29.083282 16.433912 32.145489 17.450752 c
32.162819 17.451756 32.180126 17.448452 32.195869 17.441141 c
32.211613 17.433830 32.225307 17.422737 32.235722 17.408850 c
32.246136 17.394964 32.252953 17.378716 32.255562 17.361555 c
32.258171 17.344393 32.256496 17.326853 32.250679 17.310497 c
29.293663 16.317034 27.575556 12.483433 25.822384 8.778397 c
24.069212 5.073360 22.397856 1.344946 19.487591 0.316420 c
18.955431 0.120871 18.394712 0.014256 17.827921 0.000849 c
h
f
n
Q
q
/E30 gs
1.000000 0.000000 -0.000000 1.000000 10.955078 16.897705 cm
/Pattern cs
/P30 scn
17.880699 0.000078 m
16.613262 0.044231 15.376493 0.401613 14.280853 1.040297 c
9.383195 3.811013 4.628037 6.826384 0.033411 10.074974 c
0.011996 10.096822 0.000000 10.126196 0.000000 10.156788 c
0.000000 10.187382 0.011996 10.216755 0.033411 10.238603 c
0.055259 10.260017 0.084632 10.272013 0.115226 10.272013 c
0.145819 10.272013 0.175192 10.260017 0.197040 10.238603 c
4.787192 6.992944 9.538511 3.981435 14.432796 1.215612 c
15.162076 0.744761 15.981865 0.431829 16.839397 0.296959 c
17.696928 0.162090 18.573196 0.208271 19.411802 0.432531 c
22.287003 1.402618 24.086927 5.212845 25.758284 8.894505 c
27.429640 12.576165 29.264629 16.409767 32.151520 17.461670 c
32.175472 17.451309 32.194721 17.432411 32.205521 17.408651 c
32.216320 17.384892 32.217899 17.357964 32.209957 17.333103 c
29.393194 16.304577 27.640024 12.529413 25.956980 8.882817 c
24.273933 5.236220 22.450634 1.297426 19.470242 0.292274 c
18.959520 0.110157 18.422798 0.011496 17.880699 0.000078 c
h
f
n
Q
q
/E31 gs
1.000000 0.000000 -0.000000 1.000000 10.935547 16.860107 cm
/Pattern cs
/P31 scn
17.994837 0.001541 m
16.677065 0.070780 15.398340 0.472895 14.278111 1.170322 c
8.434207 4.454597 0.135862 10.088122 0.054047 10.146562 c
0.041001 10.155003 0.029745 10.165932 0.020922 10.178723 c
0.012100 10.191515 0.005883 10.205921 0.002627 10.221115 c
-0.000629 10.236309 -0.000861 10.251995 0.001946 10.267279 c
0.004752 10.282562 0.010541 10.297144 0.018983 10.310190 c
0.027425 10.323236 0.038354 10.334494 0.051146 10.343317 c
0.063938 10.352140 0.078342 10.358356 0.093537 10.361612 c
0.108731 10.364868 0.124418 10.365099 0.139701 10.362293 c
0.154985 10.359486 0.169566 10.353696 0.182613 10.345255 c
0.264427 10.286816 8.516022 4.653291 14.383303 1.380703 c
15.112521 0.885164 15.938954 0.550682 16.807558 0.399534 c
17.676163 0.248384 18.567003 0.284037 19.420750 0.504118 c
22.354391 1.439142 24.165998 5.331183 25.919170 9.094659 c
27.672342 12.858134 29.355389 16.481356 32.125401 17.568323 c
32.138451 17.580835 32.154228 17.590151 32.171490 17.595533 c
32.188755 17.600916 32.207027 17.602217 32.224876 17.599340 c
32.242729 17.596464 32.259670 17.589485 32.274368 17.578951 c
32.289066 17.568419 32.301117 17.554617 32.309578 17.538637 c
32.318039 17.522657 32.322678 17.504932 32.323128 17.486856 c
32.323574 17.468781 32.319824 17.450846 32.312168 17.434465 c
32.304512 17.418085 32.293159 17.403704 32.279003 17.392452 c
32.264851 17.381203 32.248276 17.373390 32.230591 17.369629 c
29.542393 16.317726 27.812597 12.601002 26.141241 9.001157 c
24.364695 5.202618 22.529707 1.263824 19.514252 0.293736 c
19.027235 0.113663 18.513906 0.014946 17.994837 0.001541 c
h
f
n
Q
q
/E32 gs
1.000000 0.000000 -0.000000 1.000000 10.935547 16.834229 cm
/Pattern cs
/P32 scn
18.088339 0.002075 m
16.725544 0.043386 15.398322 0.446796 14.243050 1.170856 c
8.399144 4.595385 0.135862 10.041904 0.054047 10.088655 c
0.041001 10.097097 0.029745 10.108027 0.020922 10.120817 c
0.012100 10.133610 0.005883 10.148016 0.002627 10.163210 c
-0.000629 10.178404 -0.000861 10.194090 0.001946 10.209373 c
0.004752 10.224657 0.010541 10.239239 0.018983 10.252285 c
0.027425 10.265331 0.038354 10.276587 0.051146 10.285410 c
0.063938 10.294232 0.078342 10.300449 0.093537 10.303705 c
0.108731 10.306961 0.124418 10.307194 0.139701 10.304387 c
0.154985 10.301580 0.169566 10.295791 0.182613 10.287349 c
0.264427 10.228910 8.527709 4.794078 14.359926 1.381237 c
15.089182 0.861612 15.921713 0.504993 16.800989 0.335592 c
17.680265 0.166191 18.585699 0.187971 19.455812 0.399460 c
22.436203 1.322798 24.294565 5.296655 26.094488 9.130256 c
27.765846 12.706726 29.495642 16.400074 32.125401 17.510416 c
32.125519 17.534006 32.132771 17.557009 32.146206 17.576399 c
32.159641 17.595789 32.178631 17.610659 32.200676 17.619055 c
32.222721 17.627451 32.246792 17.628981 32.269722 17.623440 c
32.292652 17.617901 32.313370 17.605553 32.329151 17.588017 c
32.344933 17.570482 32.355038 17.548584 32.358139 17.525198 c
32.361240 17.501814 32.357193 17.478037 32.346531 17.456995 c
32.335865 17.435951 32.319084 17.418629 32.298389 17.407303 c
32.277699 17.395977 32.254063 17.391180 32.230591 17.393538 c
29.682646 16.306572 27.964537 12.659975 26.316555 9.130256 c
24.493258 5.238215 22.623209 1.217609 19.537626 0.259209 c
19.069937 0.102169 18.581505 0.015511 18.088339 0.002075 c
h
f
n
Q
q
/E33 gs
1.000000 0.000000 -0.000000 1.000000 10.971680 16.801514 cm
/Pattern cs
/P33 scn
18.170155 0.000462 m
16.756113 0.064669 15.388016 0.522051 14.219675 1.321186 c
8.375770 4.827529 0.194301 10.122107 0.054047 10.168858 c
0.041001 10.177299 0.029745 10.188228 0.020922 10.201019 c
0.012100 10.213812 0.005883 10.228214 0.002627 10.243409 c
-0.000629 10.258604 -0.000861 10.274292 0.001946 10.289576 c
0.004752 10.304859 0.010542 10.319440 0.018984 10.332487 c
0.027426 10.345533 0.038354 10.356789 0.051146 10.365611 c
0.063938 10.374434 0.078342 10.380651 0.093537 10.383907 c
0.108731 10.387163 0.124418 10.387394 0.139701 10.384586 c
0.154985 10.381781 0.169566 10.375990 0.182613 10.367548 c
0.264427 10.367548 8.539397 5.072970 14.336551 1.519876 c
15.065411 0.975437 15.903543 0.595324 16.793308 0.405668 c
17.683073 0.216013 18.603355 0.221319 19.490873 0.421225 c
22.529705 1.332872 24.434818 5.388542 26.281492 9.315646 c
27.999599 12.985619 29.624205 16.445210 32.125397 17.590616 c
32.135323 17.610605 32.150764 17.627335 32.169891 17.638828 c
32.189022 17.650320 32.211044 17.656096 32.233353 17.655472 c
32.255661 17.654848 32.277321 17.647848 32.295780 17.635303 c
32.314236 17.622759 32.328720 17.605192 32.337513 17.584679 c
32.346302 17.564167 32.349037 17.541567 32.345390 17.519548 c
32.341743 17.497532 32.331875 17.477018 32.316940 17.460432 c
32.302006 17.443848 32.282639 17.431887 32.261124 17.425959 c
32.239609 17.420033 32.216843 17.420389 32.195526 17.426987 c
29.776148 16.316645 28.174917 12.892117 26.468496 9.245520 c
24.598446 5.271664 22.669960 1.157553 19.537626 0.222528 c
19.094309 0.085440 18.634071 0.010702 18.170155 0.000462 c
h
f
n
Q
q
/E34 gs
1.000000 0.000000 -0.000000 1.000000 10.955078 16.765869 cm
/Pattern cs
/P34 scn
18.243019 0.001776 m
16.779465 0.072348 15.367289 0.563362 14.175661 1.416000 c
8.401883 5.109348 0.150289 10.158482 0.033411 10.205234 c
0.011996 10.227081 0.000000 10.256454 0.000000 10.287048 c
0.000000 10.317641 0.011996 10.347014 0.033411 10.368862 c
0.043230 10.379115 0.055023 10.387276 0.068080 10.392849 c
0.081136 10.398423 0.095185 10.401296 0.109382 10.401296 c
0.123578 10.401296 0.137628 10.398423 0.150684 10.392849 c
0.163741 10.387276 0.175534 10.379115 0.185353 10.368862 c
0.278855 10.368862 8.565514 5.272977 14.327604 1.579628 c
15.058163 1.015490 15.903566 0.618456 16.804226 0.416515 c
17.704885 0.214573 18.638878 0.212639 19.540367 0.410849 c
22.637636 1.299122 24.589499 5.448294 26.482924 9.468901 c
28.177656 13.068746 29.778887 16.481586 32.139824 17.650368 c
32.152634 17.666681 32.169556 17.679293 32.188850 17.686907 c
32.208145 17.694521 32.229118 17.696865 32.249615 17.693695 c
32.270115 17.690525 32.289402 17.681957 32.305496 17.668871 c
32.321587 17.655785 32.333908 17.638651 32.341190 17.619228 c
32.348473 17.599808 32.350456 17.578796 32.346939 17.558353 c
32.343418 17.537912 32.334522 17.518778 32.321163 17.502911 c
32.307804 17.487043 32.290459 17.475016 32.270916 17.468067 c
32.251369 17.461117 32.230331 17.459494 32.209953 17.463364 c
29.872391 16.294582 28.341286 12.975245 26.669930 9.410462 c
24.753128 5.354792 22.777891 1.158865 19.587118 0.235529 c
19.152925 0.092306 18.700071 0.013552 18.243019 0.001776 c
h
f
n
Q
q
/E35 gs
1.000000 0.000000 -0.000000 1.000000 10.955078 16.613037 cm
/Pattern cs
/P35 scn
18.324835 0.081814 m
16.811054 0.156435 15.354051 0.681446 14.140599 1.589542 c
8.413572 5.423143 0.115226 10.273584 0.033411 10.320335 c
0.011996 10.342183 0.000000 10.371557 0.000000 10.402149 c
0.000000 10.432743 0.011996 10.462116 0.033411 10.483964 c
0.043230 10.494217 0.055023 10.502377 0.068080 10.507952 c
0.081136 10.513525 0.095185 10.516397 0.109382 10.516397 c
0.123578 10.516397 0.137628 10.513525 0.150684 10.507952 c
0.163741 10.502377 0.175534 10.494217 0.185353 10.483964 c
0.267168 10.483964 8.565513 5.586772 14.304228 1.753170 c
16.279469 0.432447 18.009264 0.000000 19.575430 0.444138 c
22.731140 1.309034 24.741444 5.563396 26.681620 9.677505 c
28.341288 13.183847 29.907455 16.526562 32.128139 17.707031 c
32.149185 17.700714 32.168026 17.688591 32.182499 17.672052 c
32.196968 17.655514 32.206486 17.635229 32.209953 17.613529 c
30.047709 16.444748 28.493227 13.172160 26.856934 9.689193 c
24.893381 5.528332 22.859703 1.238909 19.610493 0.338947 c
19.196146 0.193270 18.763338 0.106707 18.324835 0.081814 c
h
f
n
Q
q
/E36 gs
1.000000 0.000000 -0.000000 1.000000 10.985352 16.660156 cm
/Pattern cs
/P36 scn
18.376694 0.035154 m
16.813971 0.123325 15.316302 0.690561 14.087267 1.659760 c
8.383615 5.621928 0.061895 10.273676 0.061895 10.320427 c
0.048081 10.328102 0.035914 10.338423 0.026089 10.350800 c
0.016263 10.363175 0.008972 10.377365 0.004631 10.392560 c
0.000289 10.407755 -0.001017 10.423656 0.000786 10.439355 c
0.002590 10.455053 0.007469 10.470244 0.015143 10.484058 c
0.022817 10.497871 0.033138 10.510039 0.045514 10.519865 c
0.057891 10.529690 0.072081 10.536980 0.087275 10.541322 c
0.102470 10.545663 0.118371 10.546968 0.134070 10.545165 c
0.149769 10.543362 0.164959 10.538483 0.178773 10.530808 c
0.260587 10.530808 8.570621 5.855684 14.274272 1.846765 c
16.261200 0.455915 18.014372 0.000093 19.615602 0.420855 c
22.829750 1.285753 24.886803 5.633615 26.873732 9.841228 c
28.498337 13.289131 30.029442 16.538343 32.121559 17.742188 c
32.138393 17.736284 32.153648 17.726606 32.166164 17.713896 c
32.178677 17.701185 32.188118 17.685778 32.193756 17.668856 c
32.199398 17.651934 32.201092 17.633944 32.198708 17.616266 c
32.196320 17.598589 32.189922 17.581694 32.179996 17.566872 c
30.158007 16.398090 28.673655 13.183943 27.025675 9.782789 c
25.015371 5.516738 22.934940 1.122120 19.615602 0.233847 c
19.212748 0.115267 18.796425 0.048500 18.376694 0.035154 c
h
f
n
Q
q
/E37 gs
1.000000 0.000000 -0.000000 1.000000 10.951172 16.600098 cm
/Pattern cs
/P37 scn
18.493572 0.037001 m
16.879293 0.135202 15.337231 0.740574 14.087267 1.766796 c
9.573957 4.890045 4.891713 7.761822 0.061894 10.369024 c
0.048081 10.376699 0.035914 10.387017 0.026089 10.399394 c
0.016263 10.411770 0.008971 10.425961 0.004630 10.441154 c
0.000289 10.456349 -0.001017 10.472250 0.000787 10.487949 c
0.002590 10.503649 0.007469 10.518839 0.015143 10.532654 c
0.022817 10.546467 0.033137 10.558634 0.045514 10.568460 c
0.057890 10.578285 0.072081 10.585575 0.087276 10.589916 c
0.102470 10.594257 0.118370 10.595564 0.134069 10.593760 c
0.149768 10.591955 0.164959 10.587078 0.178773 10.579403 c
5.008695 7.963850 9.690909 5.084290 14.204145 1.953800 c
16.214449 0.504511 17.979305 0.001936 19.603912 0.411009 c
22.888186 1.264219 24.991995 5.717275 27.025675 10.041765 c
28.615217 13.396166 30.111256 16.575251 32.074806 17.790783 c
32.096722 17.797825 32.120224 17.798239 32.142372 17.791975 c
32.164520 17.785711 32.184326 17.773048 32.199303 17.755573 c
32.214283 17.738098 32.223770 17.716587 32.226574 17.693743 c
32.229374 17.670897 32.225372 17.647732 32.215061 17.627153 c
30.321634 16.458372 28.837280 13.314350 27.259426 9.983324 c
25.202372 5.623772 23.075193 1.112276 19.685728 0.235691 c
19.297731 0.121965 18.897480 0.055260 18.493572 0.037001 c
h
f
n
Q
q
/E38 gs
1.000000 0.000000 -0.000000 1.000000 10.963867 16.506592 cm
/Pattern cs
/P38 scn
18.563202 0.084215 m
16.899712 0.188448 15.315685 0.832727 14.051707 1.919201 c
9.585083 5.096090 4.898131 7.951227 0.026336 10.462992 c
0.009211 10.486835 0.000000 10.515451 0.000000 10.544806 c
0.000000 10.574162 0.009211 10.602777 0.026336 10.626621 c
0.049367 10.645620 0.078293 10.656012 0.108150 10.656012 c
0.138007 10.656012 0.166933 10.645620 0.189964 10.626621 c
5.060325 8.103542 9.747034 5.240744 14.215338 2.059453 c
16.237329 0.540037 18.025564 0.002398 19.673546 0.411472 c
23.027946 1.241306 25.190189 5.822930 27.270620 10.240923 c
28.813412 13.513510 30.274389 16.610781 32.097687 17.826313 c
32.095390 17.850271 32.100544 17.874353 32.112450 17.895273 c
32.124352 17.916191 32.142426 17.932926 32.164196 17.943190 c
32.185966 17.953451 32.210377 17.956741 32.234089 17.952612 c
32.257797 17.948483 32.279655 17.937130 32.296677 17.920111 c
32.313694 17.903091 32.325043 17.881233 32.329174 17.857523 c
32.333305 17.833811 32.330017 17.809402 32.319752 17.787632 c
32.309490 17.765862 32.292755 17.747787 32.271839 17.735884 c
32.250919 17.723980 32.226837 17.718824 32.202877 17.721123 c
30.426331 16.552341 28.977041 13.466759 27.445938 10.229235 c
25.342133 5.752803 23.156511 1.124432 19.696918 0.259533 c
19.327644 0.154774 18.946873 0.095890 18.563202 0.084215 c
h
f
n
Q
q
/E39 gs
1.000000 0.000000 -0.000000 1.000000 10.893555 16.453369 cm
/Pattern cs
/P39 scn
18.714485 0.094234 m
17.001600 0.205111 15.375674 0.888412 14.097803 2.034411 c
9.676287 5.262274 4.983644 8.101324 0.072429 10.519764 c
0.013990 10.519764 -0.021074 10.624954 0.013990 10.671705 c
0.023809 10.681957 0.035602 10.690118 0.048658 10.695692 c
0.061714 10.701266 0.075764 10.704139 0.089961 10.704139 c
0.104157 10.704139 0.118206 10.701266 0.131263 10.695692 c
0.144319 10.690118 0.156112 10.681957 0.165931 10.671705 c
5.078047 8.245898 9.770724 5.399007 14.191305 2.162978 c
16.224983 0.573437 18.036592 0.000734 19.719637 0.398121 c
23.144167 1.216267 25.446665 6.125146 27.492031 10.461325 c
28.988071 13.640409 30.390606 16.644176 32.097027 17.871395 c
32.095676 17.892178 32.099907 17.912945 32.109276 17.931543 c
32.118641 17.950144 32.132809 17.965902 32.150311 17.977190 c
32.167812 17.988478 32.188011 17.994886 32.208820 17.995749 c
32.229630 17.996613 32.250286 17.991899 32.268661 17.982100 c
32.287037 17.972300 32.302464 17.957767 32.313339 17.940006 c
32.324215 17.922245 32.330147 17.901899 32.330521 17.881077 c
32.330898 17.860256 32.325703 17.839710 32.315472 17.821569 c
32.305244 17.803429 32.290356 17.788351 32.272346 17.777893 c
30.612677 16.609112 29.221827 13.605345 27.737474 10.461325 c
25.680420 6.078395 23.342859 1.111074 19.801453 0.257864 c
19.446320 0.163181 19.081755 0.108301 18.714485 0.094234 c
h
f
n
Q
q
/E40 gs
1.000000 0.000000 -0.000000 1.000000 10.958984 16.393311 cm
/Pattern cs
/P40 scn
18.718998 0.105106 m
16.972244 0.240002 15.323438 0.965473 14.043873 2.162159 c
9.690136 5.434114 5.014222 8.253761 0.088627 10.577383 c
0.072070 10.581507 0.056617 10.589205 0.043354 10.599939 c
0.030090 10.610672 0.019337 10.624180 0.011851 10.639513 c
0.004364 10.654845 0.000326 10.671631 0.000019 10.688690 c
-0.000288 10.705750 0.003144 10.722672 0.010074 10.738263 c
0.017004 10.753855 0.027264 10.767741 0.040132 10.778945 c
0.053001 10.790149 0.068167 10.798399 0.084564 10.803117 c
0.100962 10.807835 0.118193 10.808904 0.135048 10.806252 c
0.151903 10.803598 0.167973 10.797287 0.182129 10.787762 c
5.133420 8.457089 9.833054 5.625563 14.207503 2.337478 c
16.252871 0.677809 18.087854 -0.000086 19.794275 0.455740 c
23.300619 1.262197 25.638182 6.299643 27.753675 10.776073 c
29.191277 13.849968 30.558750 16.760233 32.136604 17.987453 c
32.159637 18.006453 32.188560 18.016846 32.218418 18.016846 c
32.248276 18.016846 32.277206 18.006453 32.300236 17.987453 c
32.305523 17.971315 32.307232 17.954222 32.305241 17.937359 c
32.303249 17.920496 32.297607 17.904268 32.288708 17.889807 c
32.279808 17.875345 32.267864 17.862997 32.253708 17.853621 c
32.239552 17.844244 32.223522 17.838064 32.206734 17.835512 c
30.675629 16.666731 29.319845 13.756466 27.893932 10.705948 c
25.790125 6.206141 23.394123 1.098566 19.770903 0.257044 c
19.426250 0.171244 19.073841 0.120342 18.718998 0.105106 c
h
f
n
Q
q
/E41 gs
1.000000 0.000000 -0.000000 1.000000 10.912109 16.450928 cm
/Pattern cs
/P41 scn
18.847563 0.000414 m
17.034002 0.129774 15.324420 0.895565 14.020497 2.162658 c
9.722660 5.488379 5.046147 8.293504 0.088626 10.519444 c
0.072069 10.523568 0.056617 10.531265 0.043354 10.542000 c
0.030090 10.552732 0.019337 10.566241 0.011851 10.581573 c
0.004364 10.596907 0.000326 10.613691 0.000019 10.630751 c
-0.000288 10.647811 0.003144 10.664732 0.010074 10.680324 c
0.017004 10.695915 0.027264 10.709802 0.040132 10.721006 c
0.053001 10.732210 0.068167 10.740460 0.084564 10.745178 c
0.100962 10.749895 0.118193 10.750965 0.135048 10.748312 c
0.151903 10.745660 0.167973 10.739347 0.182129 10.729822 c
5.173397 8.498432 9.881582 5.681369 14.207502 2.337976 c
16.276245 0.608181 18.122917 0.000416 19.852715 0.339361 c
23.452560 1.134132 25.871937 6.335206 28.034182 10.928515 c
29.413343 13.897219 30.722378 16.702293 32.183353 17.941202 c
32.193279 17.961191 32.208721 17.977921 32.227852 17.989414 c
32.246983 18.000906 32.269001 18.006681 32.291309 18.006058 c
32.313618 18.005434 32.335281 17.998434 32.353737 17.985889 c
32.372196 17.973345 32.386677 17.955778 32.395470 17.935265 c
32.404263 17.914753 32.406994 17.892153 32.403347 17.870134 c
32.399704 17.848118 32.389832 17.827604 32.374897 17.811018 c
32.359966 17.794434 32.340599 17.782473 32.319080 17.776545 c
32.297565 17.770618 32.274803 17.770975 32.253483 17.777573 c
30.839258 16.608791 29.541908 13.803717 28.174435 10.858389 c
26.012190 6.183265 23.499311 0.970501 19.864403 0.140667 c
19.531115 0.059414 19.190401 0.012421 18.847563 0.000414 c
h
f
n
Q
q
/E42 gs
1.000000 0.000000 -0.000000 1.000000 10.924805 16.346924 cm
/Pattern cs
/P42 scn
18.906910 0.047743 m
17.044399 0.184807 15.295398 0.994909 13.986341 2.326862 c
8.481381 7.107177 0.159661 10.590147 0.077846 10.625211 c
0.063147 10.630419 0.049639 10.638515 0.038117 10.649023 c
0.026595 10.659533 0.017292 10.672240 0.010757 10.686399 c
0.004222 10.700559 0.000587 10.715883 0.000065 10.731468 c
-0.000456 10.747055 0.002146 10.762587 0.007720 10.777151 c
0.020507 10.805052 0.042853 10.827458 0.070719 10.840320 c
0.098585 10.853182 0.130134 10.855648 0.159661 10.847277 c
0.253164 10.847277 8.609947 7.340935 14.185033 2.502181 c
16.218712 0.702259 18.088762 0.000990 19.853622 0.351624 c
23.535282 1.134706 26.013100 6.499412 28.198719 11.221287 c
29.519442 14.084801 30.770039 16.772999 32.102448 17.988531 c
32.118687 17.991899 32.135452 17.991774 32.151634 17.988163 c
32.167820 17.984552 32.183048 17.977541 32.196316 17.967590 c
32.209579 17.957642 32.220577 17.944984 32.228577 17.930458 c
32.236572 17.915932 32.241390 17.899870 32.242702 17.883341 c
30.945354 16.714560 29.706448 14.014675 28.385725 11.186225 c
26.176729 6.405910 23.710600 0.994452 19.876997 0.176306 c
19.559023 0.099632 19.233879 0.056545 18.906910 0.047743 c
h
f
n
Q
q
/E43 gs
1.000000 0.000000 -0.000000 1.000000 10.924805 16.239258 cm
/Pattern cs
/P43 scn
18.976610 0.093483 m
17.063253 0.245220 15.273415 1.098520 13.950853 2.489487 c
8.492646 7.398367 0.159237 10.670952 0.077422 10.670952 c
0.047974 10.681801 0.024042 10.703905 0.010891 10.732400 c
-0.002260 10.760895 -0.003553 10.793447 0.007296 10.822895 c
0.018145 10.852343 0.040248 10.876274 0.068743 10.889425 c
0.097237 10.902576 0.129790 10.903871 0.159238 10.893021 c
0.241052 10.893021 8.609524 7.550307 14.114482 2.606363 c
16.206600 0.724627 18.100025 -0.000021 19.958385 0.362301 c
23.721861 1.145384 26.269802 6.673721 28.502174 11.559226 c
29.811209 14.411052 30.944927 16.865492 32.160461 18.069336 c
32.180023 18.063972 32.197857 18.053608 32.212200 18.039263 c
32.226547 18.024918 32.236912 18.007086 32.242275 17.987522 c
31.073494 16.818741 29.904711 14.247422 28.642427 11.547538 c
26.374992 6.615282 23.803675 1.028507 19.923323 0.222050 c
19.613224 0.145632 19.295856 0.102531 18.976610 0.093483 c
h
f
n
Q
q
/E44 gs
1.000000 0.000000 -0.000000 1.000000 10.924805 16.283203 cm
/Pattern cs
/P44 scn
19.081802 0.005047 m
17.108398 0.163141 15.267488 1.060635 13.927479 2.517923 c
8.492646 7.555369 0.159237 10.699390 0.077422 10.699390 c
0.047974 10.710239 0.024042 10.732344 0.010891 10.760839 c
-0.002260 10.789333 -0.003553 10.821885 0.007296 10.851334 c
0.018145 10.880781 0.040248 10.904713 0.068743 10.917864 c
0.097237 10.931015 0.129790 10.932309 0.159238 10.921459 c
0.241052 10.921459 8.621212 7.777441 14.091107 2.739995 c
16.194912 0.788130 18.111713 0.016735 19.935013 0.402433 c
23.803677 1.173828 26.515249 7.146298 28.689182 11.938300 c
29.546650 14.154146 30.690050 16.248417 32.090336 18.167904 c
32.119781 18.188051 32.156033 18.195677 32.191101 18.189102 c
32.226173 18.182526 32.257191 18.162287 32.277340 18.132839 c
32.297489 18.103392 32.305115 18.067146 32.298538 18.032076 c
32.291965 17.997005 32.271725 17.965982 32.242279 17.945835 c
30.860195 16.043621 29.732521 13.969013 28.887877 11.774670 c
26.690569 6.935916 23.955620 0.916697 19.958389 0.086861 c
19.669477 0.031656 19.375940 0.004261 19.081802 0.005047 c
h
f
n
Q
q
/E45 gs
1.000000 0.000000 -0.000000 1.000000 10.924805 16.169434 cm
/Pattern cs
/P45 scn
19.152353 0.060034 m
17.129282 0.226641 15.248946 1.168901 13.904526 2.689792 c
8.493070 7.867492 0.159661 10.777760 0.077846 10.801136 c
0.063147 10.806343 0.049639 10.814440 0.038117 10.824949 c
0.026595 10.835458 0.017292 10.848166 0.010757 10.862325 c
0.004222 10.876484 0.000587 10.891808 0.000065 10.907394 c
-0.000456 10.922979 0.002146 10.938512 0.007720 10.953076 c
0.012927 10.967775 0.021024 10.981285 0.031533 10.992806 c
0.042041 11.004328 0.054749 11.013632 0.068909 11.020166 c
0.083068 11.026701 0.098392 11.030336 0.113978 11.030858 c
0.129564 11.031380 0.145097 11.028776 0.159661 11.023203 c
0.241476 11.023203 8.621637 8.066186 14.068156 2.841735 c
16.160275 0.843119 18.158890 0.001598 19.982187 0.363920 c
23.967731 1.135315 26.737743 7.306480 28.970116 12.262112 c
29.773724 14.349506 30.821201 16.334616 32.090759 18.176144 c
32.091751 18.197487 32.098576 18.218149 32.110489 18.235886 c
32.122398 18.253622 32.138947 18.267756 32.158329 18.276747 c
32.177711 18.285736 32.199188 18.289242 32.220421 18.286882 c
32.241657 18.284523 32.261841 18.276386 32.278774 18.263359 c
32.295712 18.250332 32.308750 18.232912 32.316475 18.212994 c
32.324203 18.193073 32.326324 18.171417 32.322609 18.150377 c
32.318890 18.129337 32.309471 18.109720 32.295383 18.093657 c
32.281296 18.077593 32.263077 18.065697 32.242702 18.059265 c
30.989275 16.236708 29.949999 14.275810 29.145430 12.215360 c
26.901369 7.201289 24.096298 0.971687 19.993876 0.176916 c
19.717735 0.111225 19.435944 0.072084 19.152353 0.060034 c
h
f
n
Q
q
/E46 gs
1.000000 0.000000 -0.000000 1.000000 10.924805 16.122314 cm
/Pattern cs
/P46 scn
19.222481 0.035141 m
17.516060 0.035141 15.716138 0.970167 13.869464 2.793466 c
8.504759 8.111419 0.159661 10.822990 0.077846 10.846365 c
0.063147 10.851573 0.049639 10.859670 0.038117 10.870178 c
0.026595 10.880688 0.017292 10.893395 0.010757 10.907555 c
0.004222 10.921714 0.000587 10.937038 0.000065 10.952623 c
-0.000456 10.968209 0.002146 10.983742 0.007720 10.998306 c
0.011611 11.012585 0.018472 11.025883 0.027854 11.037329 c
0.037236 11.048776 0.048928 11.058113 0.062165 11.064732 c
0.075403 11.071350 0.089888 11.075100 0.104674 11.075737 c
0.119460 11.076376 0.134215 11.073887 0.147973 11.068432 c
0.241476 11.068432 8.621636 8.310111 14.033092 2.957094 c
16.148586 0.876663 18.170576 0.000078 20.040627 0.350714 c
24.131359 1.122108 26.971498 7.515339 29.238934 12.657974 c
30.001499 14.606675 30.956852 16.474312 32.090759 18.233061 c
32.113789 18.252060 32.142715 18.262451 32.172573 18.262451 c
32.202431 18.262451 32.231354 18.252060 32.254387 18.233061 c
32.265282 18.212851 32.269985 18.189880 32.267906 18.167015 c
32.265827 18.144152 32.257061 18.122406 32.242702 18.104494 c
31.123268 16.359402 30.179728 14.507555 29.425940 12.576160 c
27.088377 7.386773 24.259926 0.888350 20.075691 0.128641 c
19.794390 0.073753 19.508993 0.042480 19.222481 0.035141 c
h
f
n
Q
q
/E47 gs
1.000000 0.000000 -0.000000 1.000000 10.924805 16.052490 cm
/Pattern cs
/P47 scn
19.292606 0.048798 m
17.551123 0.048798 15.727825 1.018883 13.846087 2.935684 c
8.504758 8.370516 0.171348 10.895086 0.077846 10.918462 c
0.063147 10.923670 0.049639 10.931767 0.038117 10.942275 c
0.026595 10.952784 0.017292 10.965492 0.010757 10.979650 c
0.004222 10.993811 0.000587 11.009134 0.000065 11.024720 c
-0.000456 11.040306 0.002146 11.055838 0.007720 11.070402 c
0.011611 11.084682 0.018472 11.097980 0.027854 11.109426 c
0.037236 11.120872 0.048928 11.130209 0.062165 11.136827 c
0.075403 11.143447 0.089888 11.147196 0.104674 11.147834 c
0.119460 11.148472 0.134215 11.145983 0.147973 11.140529 c
0.229788 11.140529 8.633324 8.580896 14.009716 3.099313 c
16.136898 0.925379 18.182266 0.002045 20.087379 0.352678 c
24.318365 1.135761 27.333820 8.054947 29.531130 13.104081 c
30.230318 14.909413 31.086823 16.649803 32.090759 18.305159 c
32.093872 18.325722 32.102413 18.345083 32.115509 18.361242 c
32.128601 18.377401 32.145771 18.389774 32.165241 18.397085 c
32.184715 18.404394 32.205784 18.406376 32.226276 18.402824 c
32.246769 18.399275 32.265938 18.390322 32.281815 18.376888 c
32.297691 18.363453 32.309700 18.346025 32.316593 18.326403 c
32.323486 18.306782 32.325020 18.285673 32.321033 18.265261 c
32.317047 18.244848 32.307686 18.225870 32.293915 18.210283 c
32.280148 18.194696 32.262466 18.183065 32.242702 18.176592 c
31.253490 16.533054 30.405052 14.808802 29.706448 13.022266 c
27.368887 7.645874 24.446932 0.937069 20.087379 0.165674 c
19.827164 0.099569 19.560837 0.060406 19.292606 0.048798 c
h
f
n
Q
q
/E48 gs
1.000000 0.000000 -0.000000 1.000000 10.953125 15.993652 cm
/Pattern cs
/P48 scn
19.356049 0.047058 m
17.579500 0.047058 15.736724 1.048313 13.827715 3.050825 c
8.509761 8.625911 0.176352 10.951788 0.094538 10.975163 c
0.064674 10.983360 0.038772 11.002060 0.021594 11.027828 c
0.004416 11.053595 -0.002886 11.084696 0.001034 11.115416 c
0.009341 11.147633 0.029814 11.175375 0.058148 11.192812 c
0.086483 11.210249 0.120473 11.216021 0.152976 11.208918 c
0.234791 11.208918 8.638327 8.871359 13.991343 3.214458 c
16.141901 0.958710 18.198956 0.000309 20.139132 0.350943 c
24.475309 1.134027 27.537516 8.333717 29.793262 13.558168 c
30.433887 15.196196 31.191658 16.785955 32.060696 18.315107 c
32.075821 18.322750 32.092571 18.326628 32.109512 18.326406 c
32.126457 18.326187 32.143093 18.321877 32.158012 18.313843 c
32.172932 18.305809 32.185692 18.294291 32.195202 18.280266 c
32.204712 18.266241 32.210697 18.250126 32.212639 18.233294 c
31.361652 16.708082 30.615795 15.126552 29.980268 13.499730 c
27.712831 8.193464 24.615562 0.935333 20.115755 0.117186 c
19.864691 0.074369 19.610706 0.050922 19.356049 0.047058 c
h
f
n
Q
q
/E49 gs
1.000000 0.000000 -0.000000 1.000000 10.861328 15.927490 cm
/Pattern cs
/P49 scn
19.448515 0.047567 m
17.636906 0.047567 15.743482 1.099470 13.814993 3.179901 c
8.532103 8.895241 0.198693 11.022421 0.116879 11.045797 c
0.085881 11.045797 0.056152 11.058111 0.034233 11.080030 c
0.012314 11.101949 0.000000 11.131676 0.000000 11.162674 c
0.000000 11.193671 0.012314 11.223400 0.034233 11.245319 c
0.056152 11.267239 0.085881 11.279552 0.116879 11.279552 c
0.210381 11.279552 8.613917 9.105620 13.943560 3.343530 c
16.105804 1.005968 18.197924 0.000814 20.173162 0.351448 c
24.708035 1.157907 27.840364 8.661483 30.119488 14.143066 c
30.688429 15.602995 31.336105 17.031004 32.059666 18.420805 c
32.075165 18.453352 32.102955 18.478409 32.136932 18.490465 c
32.153755 18.496435 32.171585 18.499033 32.189411 18.498110 c
32.207237 18.497187 32.224709 18.492762 32.240826 18.485088 c
32.256939 18.477413 32.271389 18.466639 32.283340 18.453381 c
32.295292 18.440125 32.304516 18.424643 32.310486 18.407820 c
32.316452 18.390997 32.319054 18.373163 32.318130 18.355337 c
32.317207 18.337511 32.312782 18.320042 32.305107 18.303926 c
31.578409 16.925337 30.934439 15.504704 30.376617 14.049564 c
28.039055 8.521230 24.906723 0.947527 20.243288 0.117691 c
19.980846 0.071711 19.714954 0.048254 19.448515 0.047567 c
h
f
n
Q
q
/E50 gs
1.000000 0.000000 -0.000000 1.000000 10.896484 15.818115 cm
/Pattern cs
/P50 scn
19.506954 0.082876 m
17.660280 0.082876 15.743481 1.181530 13.791616 3.343776 c
8.543790 9.187681 0.198692 11.139546 0.116877 11.151234 c
0.085879 11.151234 0.056152 11.163548 0.034233 11.185467 c
0.012314 11.207386 0.000000 11.237112 0.000000 11.268110 c
0.000000 11.299109 0.012314 11.328837 0.034233 11.350756 c
0.056152 11.372675 0.085879 11.384989 0.116877 11.384989 c
0.198692 11.384989 8.613915 9.409749 13.920181 3.507404 c
16.094114 1.088028 18.221298 0.001064 20.231602 0.386761 c
24.906725 1.216597 28.261126 9.386373 30.446745 14.797830 c
31.077887 16.340620 31.615528 17.661343 32.059666 18.526241 c
32.067337 18.540056 32.077660 18.552223 32.090034 18.562048 c
32.102413 18.571873 32.116600 18.579165 32.131794 18.583506 c
32.146988 18.587847 32.162891 18.589151 32.178593 18.587349 c
32.194290 18.585545 32.209480 18.580666 32.223293 18.572992 c
32.237106 18.565317 32.249275 18.554998 32.259098 18.542622 c
32.268925 18.530247 32.276218 18.516056 32.280560 18.500862 c
32.284901 18.485666 32.286205 18.469767 32.284401 18.454067 c
32.282597 18.438368 32.277721 18.423178 32.270046 18.409363 c
31.825909 17.567841 31.288271 16.247118 30.668816 14.716015 c
28.459820 9.257808 25.117105 1.006214 20.266663 0.153004 c
20.015760 0.108971 19.761677 0.085514 19.506954 0.082876 c
h
f
n
Q
q
/E51 gs
1.000000 0.000000 -0.000000 1.000000 10.882812 15.785645 cm
/Pattern cs
/P51 scn
19.589800 0.058739 m
17.696375 0.058739 15.744513 1.227516 13.745897 3.448200 c
8.521447 9.420672 0.176351 11.173847 0.094537 11.185534 c
0.064673 11.193731 0.038771 11.212431 0.021593 11.238199 c
0.004414 11.263966 -0.002885 11.295068 0.001034 11.325787 c
0.003812 11.341282 0.009692 11.356057 0.018320 11.369225 c
0.026948 11.382391 0.038147 11.393679 0.051245 11.402411 c
0.064344 11.411144 0.079072 11.417141 0.094545 11.420040 c
0.110017 11.422941 0.125916 11.422685 0.141288 11.419290 c
0.223103 11.419290 8.638327 9.631054 13.921216 3.600143 c
16.118525 1.087263 18.269079 0.000299 20.314445 0.350933 c
25.246700 1.215832 28.741354 10.145317 30.833471 15.474959 c
31.324360 16.725555 31.745123 17.812523 32.095757 18.548855 c
32.097775 18.568123 32.104549 18.586588 32.115475 18.602587 c
32.126396 18.618587 32.141125 18.631620 32.158333 18.640516 c
32.175545 18.649412 32.194695 18.653889 32.214066 18.653545 c
32.233437 18.653204 32.252419 18.648054 32.269302 18.638557 c
32.286186 18.629059 32.300446 18.615513 32.310799 18.599136 c
32.321148 18.582760 32.327267 18.564070 32.328602 18.544743 c
32.329937 18.525415 32.326447 18.506058 32.318443 18.488415 c
32.310444 18.470772 32.298180 18.455393 32.282761 18.443665 c
31.943815 17.707333 31.523054 16.632053 31.032167 15.381457 c
28.928362 10.005064 25.410332 0.993761 20.349510 0.117176 c
20.098286 0.077059 19.844204 0.057514 19.589800 0.058739 c
h
f
n
Q
q
/E52 gs
1.000000 0.000000 -0.000000 1.000000 10.965820 15.692383 cm
/Pattern cs
/P52 scn
19.566431 0.083652 m
17.637941 0.083652 15.662703 1.252434 13.722526 3.589995 c
8.521450 9.702721 0.176351 11.257201 0.094537 11.268888 c
0.064673 11.277086 0.038771 11.295786 0.021593 11.321553 c
0.004414 11.347321 -0.002885 11.378422 0.001034 11.409142 c
0.003812 11.424637 0.009692 11.439411 0.018320 11.452579 c
0.026948 11.465746 0.038148 11.477034 0.051246 11.485765 c
0.064345 11.494498 0.079072 11.500494 0.094545 11.503395 c
0.110017 11.506295 0.125916 11.506039 0.141288 11.502644 c
0.223103 11.502644 8.638328 9.913102 13.897842 3.741939 c
16.106838 1.135557 18.292458 0.001837 20.384577 0.375847 c
25.585651 1.287497 29.232250 11.070196 31.195803 16.329710 c
31.534748 17.253048 31.838634 18.036131 32.084080 18.667273 c
32.086338 18.689753 32.095058 18.711094 32.109196 18.728718 c
32.123337 18.746342 32.142281 18.759489 32.163734 18.766571 c
32.185188 18.773653 32.208237 18.774364 32.230087 18.768620 c
32.251938 18.762875 32.271656 18.750921 32.286854 18.734205 c
32.302052 18.717487 32.312077 18.696722 32.315716 18.674423 c
32.319359 18.652126 32.316463 18.629251 32.307377 18.608566 c
32.298286 18.587883 32.283398 18.570276 32.264511 18.557878 c
32.245625 18.545479 32.223549 18.538818 32.200954 18.538706 c
31.955511 17.954315 31.663315 17.159544 31.324369 16.201143 c
29.349129 10.894878 25.655781 1.006992 20.337826 0.095343 c
20.081415 0.070921 19.823463 0.067011 19.566431 0.083652 c
h
f
n
Q
q
/E53 gs
1.000000 0.000000 -0.000000 1.000000 10.916992 15.625244 cm
/Pattern cs
/P53 scn
19.673336 0.082802 m
17.709784 0.082802 15.699482 1.310020 13.689178 3.729398 c
8.523166 9.970690 0.178068 11.338164 0.096253 11.349852 c
0.080758 11.352631 0.065984 11.358507 0.052817 11.367136 c
0.039650 11.375764 0.028362 11.386964 0.019630 11.400063 c
0.010898 11.413160 0.004901 11.427889 0.002001 11.443361 c
-0.000899 11.458834 -0.000644 11.474733 0.002751 11.490105 c
0.008438 11.519032 0.024848 11.544742 0.048690 11.562080 c
0.072532 11.579420 0.102046 11.587109 0.131318 11.583607 c
0.224820 11.583607 8.640044 10.192759 13.876183 3.881341 c
16.108555 1.181456 18.329237 0.000988 20.468107 0.374996 c
26.008129 1.368462 29.818356 12.156309 31.606592 17.345697 c
31.781908 17.871651 31.945538 18.315786 32.085793 18.689796 c
32.084820 18.708172 32.088688 18.726480 32.097004 18.742895 c
32.105324 18.759310 32.117798 18.773252 32.133190 18.783337 c
32.148582 18.793421 32.166348 18.799290 32.184719 18.800360 c
32.203087 18.801430 32.221420 18.797661 32.237877 18.789431 c
32.254333 18.781202 32.268345 18.768799 32.278511 18.753462 c
32.288677 18.738125 32.294643 18.720390 32.295811 18.702026 c
32.296978 18.683662 32.293308 18.665314 32.285168 18.648811 c
32.277027 18.632309 32.264702 18.618231 32.249420 18.607983 c
32.120853 18.222284 31.957224 17.778149 31.781906 17.263884 c
29.993671 12.051120 26.183447 1.169765 20.561609 0.152925 c
20.268127 0.103718 19.970905 0.080256 19.673336 0.082802 c
h
f
n
Q
q
/E54 gs
1.000000 0.000000 -0.000000 1.000000 10.916992 15.524414 cm
/Pattern cs
/P54 scn
19.731775 0.106068 m
17.733160 0.106068 15.687793 1.368349 13.665802 3.881229 c
8.523166 10.262774 0.178068 11.431557 0.096253 11.443245 c
0.080758 11.446022 0.065984 11.451900 0.052817 11.460527 c
0.039650 11.469156 0.028362 11.480356 0.019630 11.493454 c
0.010898 11.506553 0.004901 11.521280 0.002001 11.536753 c
-0.000899 11.552226 -0.000644 11.568125 0.002751 11.583496 c
0.004037 11.598518 0.008536 11.613087 0.015944 11.626217 c
0.023352 11.639347 0.033496 11.650730 0.045688 11.659597 c
0.057880 11.668465 0.071837 11.674608 0.086611 11.677610 c
0.101385 11.680613 0.116631 11.680405 0.131318 11.676999 c
0.213132 11.676999 8.640043 10.508219 13.841119 4.033172 c
16.120241 1.169659 18.387676 0.000874 20.561609 0.409948 c
26.604208 1.578730 30.683254 14.435323 32.027351 18.713062 c
32.027351 18.794876 l
32.031960 18.810225 32.039539 18.824514 32.049667 18.836933 c
32.059795 18.849352 32.072269 18.859653 32.086380 18.867250 c
32.100491 18.874849 32.115955 18.879591 32.131897 18.881210 c
32.147839 18.882830 32.163944 18.881294 32.179291 18.876690 c
32.194641 18.872086 32.208935 18.864502 32.221352 18.854376 c
32.233772 18.844248 32.244068 18.831772 32.251667 18.817663 c
32.259266 18.803555 32.264011 18.788088 32.265633 18.772146 c
32.267250 18.756205 32.265709 18.740099 32.261105 18.724749 c
32.261105 18.642935 l
30.917007 14.365196 26.802900 1.356663 20.573298 0.187881 c
20.295990 0.134190 20.014233 0.106798 19.731775 0.106068 c
h
f
n
Q
q
/E55 gs
1.000000 0.000000 -0.000000 1.000000 10.916992 15.394531 cm
/Pattern cs
/P55 scn
19.790216 0.132648 m
17.744850 0.132648 15.687794 1.453373 13.642427 4.059754 c
8.523166 10.569865 0.189756 11.551641 0.096253 11.551641 c
0.080758 11.554419 0.065984 11.560299 0.052817 11.568927 c
0.039650 11.577555 0.028362 11.588755 0.019630 11.601852 c
0.010898 11.614951 0.004901 11.629677 0.002001 11.645150 c
-0.000899 11.660623 -0.000644 11.676521 0.002751 11.691894 c
0.004037 11.706915 0.008536 11.721485 0.015944 11.734615 c
0.023352 11.747746 0.033496 11.759129 0.045688 11.767996 c
0.057880 11.776863 0.071837 11.783007 0.086611 11.786009 c
0.101385 11.789011 0.116631 11.788801 0.131318 11.785396 c
0.213132 11.785396 8.651731 10.791932 13.817744 4.200006 c
16.155306 1.254679 18.492868 0.004082 20.713552 0.459906 c
23.308247 0.997545 25.844501 3.720806 28.240503 8.559560 c
29.834980 11.881712 31.118328 15.344406 32.074104 18.903273 c
32.083405 18.934271 32.104637 18.960306 32.133133 18.975649 c
32.161625 18.990992 32.195049 18.994387 32.226048 18.985088 c
32.257046 18.975788 32.283081 18.954557 32.298424 18.926064 c
32.313766 18.897570 32.317162 18.864145 32.307861 18.833147 c
31.333044 15.265856 30.042280 11.792529 28.450884 8.454371 c
26.019819 3.545491 23.436813 0.787165 20.760305 0.272900 c
20.443031 0.190874 20.117729 0.143843 19.790216 0.132648 c
h
f
n
Q
q
/E56 gs
1.000000 0.000000 -0.000000 1.000000 10.872070 15.318359 cm
/Pattern cs
/P56 scn
19.894085 0.210310 m
17.813654 0.210310 15.721536 1.566097 13.652793 4.265982 c
8.568596 10.869595 0.235188 11.652676 0.153373 11.664364 c
0.135819 11.658594 0.117146 11.657070 0.098888 11.659914 c
0.080630 11.662758 0.063307 11.669891 0.048340 11.680727 c
0.033372 11.691563 0.021187 11.705791 0.012784 11.722249 c
0.004381 11.738707 -0.000000 11.756922 0.000000 11.775399 c
0.000000 11.793878 0.004381 11.812093 0.012784 11.828550 c
0.021187 11.845007 0.033372 11.859236 0.048340 11.870071 c
0.063307 11.880908 0.080630 11.888041 0.098888 11.890884 c
0.117146 11.893728 0.135819 11.892202 0.153373 11.886433 c
0.246875 11.886433 8.685475 11.091661 13.828112 4.359482 c
16.165674 1.297276 18.503237 -0.000072 20.840799 0.514191 c
24.090010 1.227148 26.684706 5.329572 28.356062 8.695661 c
29.954851 12.002227 31.196867 15.469694 32.061096 19.039373 c
32.061096 19.070372 32.073410 19.100098 32.095329 19.122017 c
32.117249 19.143936 32.146976 19.156250 32.177975 19.156250 c
32.208973 19.156250 32.238701 19.143936 32.260620 19.122017 c
32.282539 19.100098 32.294853 19.070372 32.294853 19.039373 c
31.427874 15.448559 30.177910 11.961191 28.566442 8.637220 c
26.906775 5.271132 24.230261 1.110271 20.887547 0.373940 c
20.563368 0.283249 20.230225 0.228378 19.894085 0.210310 c
h
f
n
Q
q
/E57 gs
1.000000 0.000000 -0.000000 1.000000 10.908203 15.164307 cm
/Pattern cs
/P57 scn
19.916031 0.245348 m
17.788849 0.245348 15.673355 1.647882 13.592925 4.429582 c
8.532103 11.208511 0.198693 11.804589 0.116879 11.816277 c
0.085881 11.816277 0.056152 11.828590 0.034233 11.850510 c
0.012314 11.872429 0.000000 11.902158 0.000000 11.933155 c
0.002924 11.965189 0.017750 11.994963 0.041551 12.016600 c
0.065353 12.038237 0.096400 12.050167 0.128567 12.050034 c
1.798438 11.859996 3.438990 11.467520 5.014071 10.881253 c
8.491557 9.664243 11.538127 7.458527 13.779929 4.534772 c
16.117491 1.344000 18.595308 -0.000097 21.002996 0.572605 c
24.263895 1.332312 26.846903 5.434734 28.506571 8.754072 c
30.114683 12.051965 31.315657 15.533228 32.083038 19.121159 c
32.083038 19.152157 32.095352 19.181885 32.117271 19.203804 c
32.139191 19.225723 32.168922 19.238037 32.199921 19.238037 c
32.230919 19.238037 32.260643 19.225723 32.282562 19.203804 c
32.304482 19.181885 32.316795 19.152157 32.316795 19.121159 c
31.533712 14.820044 27.244287 1.858263 21.049747 0.420662 c
20.679344 0.321152 20.299189 0.262367 19.916031 0.245348 c
h
f
n
Q
q
/E58 gs
1.000000 0.000000 -0.000000 1.000000 10.908203 15.119385 cm
/Pattern cs
/P58 scn
19.974468 0.210346 m
17.812223 0.210346 15.661667 1.659632 13.569549 4.534833 c
11.392159 7.455646 8.380713 9.648011 4.932256 10.822876 c
3.381223 11.384623 1.761485 11.734516 0.116879 11.863091 c
0.085881 11.863091 0.056152 11.875404 0.034233 11.897324 c
0.012314 11.919243 0.000000 11.948971 0.000000 11.979969 c
0.002924 12.012003 0.017750 12.041776 0.041551 12.063414 c
0.065353 12.085051 0.096400 12.096981 0.128567 12.096848 c
1.793110 11.967161 3.432524 11.613332 5.002384 11.044946 c
8.499433 9.859606 11.552820 7.637850 13.756554 4.675090 c
16.175930 1.344065 18.665434 -0.000036 21.131561 0.596043 c
24.415836 1.414188 26.975466 5.516610 28.623447 8.777510 c
30.261320 12.056391 31.441124 15.544678 32.129791 19.144598 c
32.129791 19.175596 32.142105 19.205322 32.164024 19.227242 c
32.185944 19.249161 32.215672 19.261475 32.246670 19.261475 c
32.277668 19.261475 32.307396 19.249161 32.329315 19.227242 c
32.351234 19.205322 32.363548 19.175596 32.363548 19.144598 c
31.673967 14.586352 27.279350 1.893389 21.190002 0.409037 c
20.793707 0.296762 20.385887 0.230103 19.974468 0.210346 c
h
f
n
Q
q
/E59 gs
1.000000 0.000000 -0.000000 1.000000 10.908203 15.002197 cm
/Pattern cs
/P59 scn
20.032907 0.257511 m
17.823910 0.257511 15.649977 1.753550 13.534483 4.722254 c
11.409546 7.688242 8.397250 9.902444 4.932256 11.045359 c
3.379504 11.587185 1.758761 11.909760 0.116879 12.003759 c
0.085881 12.003759 0.056152 12.016073 0.034233 12.037992 c
0.012314 12.059911 0.000000 12.089640 0.000000 12.120638 c
0.002633 12.150751 0.015793 12.178973 0.037168 12.200348 c
0.058542 12.221722 0.086765 12.234883 0.116879 12.237516 c
1.782583 12.143038 3.426949 11.816525 5.002383 11.267428 c
8.513987 10.110303 11.569868 7.872596 13.733176 4.874197 c
16.187616 1.367853 18.723871 0.000380 21.271814 0.678272 c
24.567776 1.543171 27.115717 5.645592 28.752010 8.929866 c
30.380493 12.205347 31.503565 15.708549 32.083035 19.320330 c
32.088562 19.350237 32.104511 19.377216 32.128048 19.396477 c
32.151588 19.415735 32.181190 19.426025 32.211601 19.425520 c
32.211601 19.425520 32.328480 19.355392 32.316792 19.296953 c
31.740273 15.640387 30.609119 12.093212 28.962393 8.777924 c
27.349474 5.446898 24.708029 1.286039 21.330252 0.386078 c
20.904457 0.291765 20.468929 0.248606 20.032907 0.257511 c
h
f
n
Q
q
/E60 gs
1.000000 0.000000 -0.000000 1.000000 10.908203 14.805664 cm
/Pattern cs
/P60 scn
20.091347 0.374014 m
17.847288 0.374014 15.638289 1.916803 13.511108 4.979010 c
11.409553 7.950304 8.392004 10.150858 4.920568 11.243677 c
3.369763 11.765120 1.751905 12.060349 0.116879 12.120262 c
0.085881 12.120262 0.056152 12.132576 0.034233 12.154495 c
0.012314 12.176414 0.000000 12.206143 0.000000 12.237141 c
0.002633 12.267255 0.015793 12.295477 0.037168 12.316851 c
0.058542 12.338226 0.086765 12.351387 0.116879 12.354020 c
1.780251 12.300257 3.426543 12.000931 5.002384 11.465746 c
8.529799 10.339271 11.589238 8.084731 13.709801 5.049138 c
16.199305 1.460981 18.793999 0.000002 21.400381 0.736334 c
24.006762 1.472666 26.636520 4.406308 28.880581 9.034681 c
30.513536 12.302084 31.595583 15.816771 32.083038 19.436832 c
32.083038 19.467831 32.095352 19.497559 32.117271 19.519478 c
32.139191 19.541397 32.168922 19.553711 32.199921 19.553711 c
32.230919 19.553711 32.260643 19.541397 32.282562 19.519478 c
32.304482 19.497559 32.316795 19.467831 32.316795 19.436832 c
31.830975 15.776149 30.740883 12.221497 29.090961 8.917803 c
27.489731 5.598465 24.859974 1.449293 21.470509 0.502581 c
21.018621 0.398149 20.554750 0.354906 20.091347 0.374014 c
h
f
n
Q
q
/E61 gs
1.000000 0.000000 -0.000000 1.000000 10.906250 14.745117 cm
/Pattern cs
/P61 scn
20.138830 0.350519 m
17.801270 0.350519 15.615650 1.940058 13.488468 5.095767 c
11.433368 8.119939 8.413025 10.357385 4.921304 11.442250 c
3.369994 11.950678 1.750013 12.218701 0.117615 12.237020 c
0.101813 12.235140 0.085791 12.236872 0.070755 12.242081 c
0.055720 12.247290 0.042062 12.255843 0.030810 12.267096 c
0.019558 12.278347 0.011006 12.292004 0.005797 12.307039 c
0.000587 12.322075 -0.001143 12.338097 0.000736 12.353899 c
0.000736 12.384896 0.013050 12.414625 0.034969 12.436544 c
0.056888 12.458464 0.086617 12.470778 0.117615 12.470778 c
1.773816 12.451795 3.417391 12.179835 4.991431 11.664318 c
8.532162 10.563574 11.594060 8.292905 13.675473 5.224334 c
16.200041 1.495922 18.841484 -0.000116 21.529680 0.782967 c
27.373585 2.501074 31.955206 14.808339 32.048710 19.483463 c
32.048710 19.514462 32.061024 19.544189 32.082943 19.566109 c
32.104858 19.588028 32.134586 19.600342 32.165585 19.600342 c
32.196583 19.600342 32.226315 19.588028 32.248234 19.566109 c
32.270153 19.544189 32.282467 19.514462 32.282467 19.483463 c
31.880716 15.819981 30.827866 12.257702 29.173510 8.964434 c
27.876162 6.252862 25.152903 1.554359 21.553057 0.502457 c
21.090883 0.386993 20.614985 0.335867 20.138830 0.350519 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.919922 14.640137 cm
/Pattern cs
/P62 scn
20.184849 0.385769 m
17.847286 0.385769 15.603228 2.022064 13.452670 5.259588 c
11.445014 8.323964 8.418865 10.580120 4.908880 11.629444 c
3.358842 12.117027 1.741724 12.357621 0.116879 12.342400 c
0.085881 12.342400 0.056152 12.354713 0.034233 12.376633 c
0.012314 12.398551 0.000000 12.428280 0.000000 12.459278 c
0.000000 12.490276 0.012314 12.520004 0.034233 12.541924 c
0.056152 12.563843 0.085881 12.576157 0.116879 12.576157 c
1.773282 12.591978 3.421885 12.347447 5.002383 11.851511 c
8.560575 10.791183 11.628633 8.505670 13.663051 5.399841 c
16.222681 1.531176 18.922564 0.000071 21.680887 0.841593 c
27.665047 2.676579 32.129791 15.124099 32.094727 19.647282 c
32.094727 19.678280 32.107040 19.708008 32.128960 19.729927 c
32.150879 19.751846 32.180611 19.764160 32.211609 19.764160 c
32.242603 19.764160 32.272331 19.751846 32.294250 19.729927 c
32.316170 19.708008 32.328484 19.678280 32.328484 19.647282 c
32.328484 17.169466 31.159702 12.833288 29.348093 9.128251 c
28.062433 6.428367 25.362549 1.729866 21.751017 0.631212 c
21.244741 0.469124 20.716438 0.386332 20.184849 0.385769 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.919922 14.838623 cm
/Pattern cs
/P63 scn
20.219912 0.375351 m
17.882349 0.375351 15.638291 1.999958 13.476047 5.225794 c
11.458445 8.263542 8.425724 10.484221 4.920568 11.490458 c
3.364690 11.964327 1.742819 12.185312 0.116879 12.144976 c
0.085881 12.144976 0.056152 12.157290 0.034233 12.179208 c
0.012314 12.201126 0.000000 12.230856 0.000000 12.261854 c
0.000000 12.292851 0.012314 12.322580 0.034233 12.344500 c
0.056152 12.366419 0.085881 12.378733 0.116879 12.378733 c
1.765943 12.420938 3.411193 12.199995 4.990695 11.724216 c
8.547400 10.700925 11.625021 8.447593 13.674739 5.366047 c
16.234369 1.520758 18.934252 0.001343 21.692575 0.842865 c
25.198919 1.918144 27.852053 6.488075 29.114336 9.117832 c
30.749504 12.321129 31.753403 15.808990 32.071350 19.391418 c
32.071350 19.422417 32.083664 19.452145 32.105583 19.474064 c
32.127502 19.495983 32.157234 19.508297 32.188232 19.508297 c
32.204033 19.510176 32.220055 19.508446 32.235092 19.503237 c
32.250126 19.498028 32.263783 19.489475 32.275036 19.478224 c
32.286285 19.466972 32.294838 19.453314 32.300045 19.438278 c
32.305256 19.423243 32.306988 19.407219 32.305107 19.391418 c
31.993649 15.749047 30.981653 12.201110 29.324717 8.942516 c
28.039057 6.277695 25.362549 1.649324 21.762705 0.550671 c
21.259481 0.418692 20.739916 0.359648 20.219912 0.375351 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.909180 15.023926 cm
/Pattern cs
/P64 scn
20.278370 0.386946 m
17.940807 0.386946 15.685060 1.999861 13.522814 5.202321 c
11.490838 8.221867 8.442482 10.411704 4.932274 11.373484 c
3.372066 11.821297 1.750652 12.018549 0.128584 11.957874 c
0.113222 11.956261 0.097692 11.957709 0.082892 11.962134 c
0.068093 11.966559 0.054317 11.973874 0.042362 11.983656 c
0.030406 11.993437 0.020509 12.005491 0.013241 12.019121 c
0.005973 12.032751 0.001478 12.047688 0.000018 12.063065 c
-0.000488 12.093473 0.009803 12.123079 0.029062 12.146618 c
0.048321 12.170156 0.075301 12.186106 0.105208 12.191631 c
1.754486 12.259445 3.403961 12.062140 4.990714 11.607241 c
8.556535 10.630155 11.651539 8.402247 13.709819 5.330886 c
16.292826 1.508972 19.004398 0.001244 21.774410 0.854454 c
27.711817 2.666065 32.071369 14.704510 32.083057 19.262756 c
32.081177 19.278557 32.082909 19.294579 32.088116 19.309616 c
32.093327 19.324652 32.101875 19.338310 32.113129 19.349562 c
32.124382 19.360813 32.138042 19.369368 32.153076 19.374577 c
32.168114 19.379786 32.184135 19.381514 32.199936 19.379635 c
32.215286 19.379635 32.230484 19.376612 32.244663 19.370737 c
32.258846 19.364864 32.271729 19.356255 32.282581 19.345402 c
32.293434 19.334549 32.302044 19.321665 32.307919 19.307484 c
32.313793 19.293304 32.316814 19.278105 32.316814 19.262756 c
32.316814 14.657759 27.875444 2.467373 21.797783 0.562260 c
21.301584 0.435307 20.790442 0.376331 20.278370 0.386946 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.919922 15.222412 cm
/Pattern cs
/P65 scn
20.313416 0.385777 m
17.975853 0.385777 15.708417 1.987007 13.534484 5.154404 c
11.506113 8.165792 8.446605 10.331559 4.932256 11.243753 c
3.364947 11.671515 1.739176 11.845140 0.116879 11.758017 c
0.085881 11.758017 0.056152 11.770330 0.034233 11.792249 c
0.012314 11.814167 0.000000 11.843897 0.000000 11.874895 c
0.000000 11.905892 0.012314 11.935621 0.034233 11.957541 c
0.056152 11.979460 0.085881 11.991774 0.116879 11.991774 c
1.762999 12.077778 3.412287 11.900222 5.002383 11.465820 c
8.572770 10.539554 11.684298 8.346116 13.756554 5.294659 c
16.351248 1.496120 19.074507 0.000078 21.832830 0.841600 c
25.339174 1.905191 27.910490 6.346561 29.149397 8.906192 c
30.751064 12.058064 31.742456 15.484308 32.071350 19.004459 c
32.071350 19.035458 32.083664 19.065186 32.105583 19.087105 c
32.127502 19.109024 32.157234 19.121338 32.188232 19.121338 c
32.219231 19.121338 32.248955 19.109024 32.270874 19.087105 c
32.292793 19.065186 32.305107 19.035458 32.305107 19.004459 c
31.976915 15.426203 30.969349 11.943359 29.336403 8.742561 c
28.074120 6.159554 25.432674 1.648062 21.879580 0.561096 c
21.368261 0.429867 20.841095 0.370853 20.313416 0.385777 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.919922 15.421143 cm
/Pattern cs
/P66 scn
20.360167 0.374052 m
18.022604 0.374052 15.755169 1.963594 13.569549 5.119304 c
11.522371 8.108724 8.448762 10.242365 4.932256 11.115149 c
3.361623 11.522129 1.735455 11.672113 0.116879 11.559286 c
0.085881 11.559286 0.056152 11.571600 0.034233 11.593518 c
0.012314 11.615437 0.000000 11.645166 0.000000 11.676165 c
0.000000 11.707162 0.012314 11.736891 0.034233 11.758810 c
0.056152 11.780729 0.085881 11.793043 0.116879 11.793043 c
1.759301 11.905138 3.409046 11.751215 5.002383 11.337219 c
8.578396 10.457876 11.703998 8.289515 13.779929 5.247869 c
16.397999 1.484394 19.121258 0.000044 21.891268 0.841566 c
27.887115 2.688240 32.012913 14.551366 32.071350 18.805729 c
32.071350 18.836727 32.083664 18.866455 32.105583 18.888374 c
32.127502 18.910294 32.157234 18.922607 32.188232 18.922607 c
32.219231 18.922607 32.248955 18.910294 32.270874 18.888374 c
32.292793 18.866455 32.305107 18.836727 32.305107 18.805729 c
31.970608 15.259905 30.967237 11.809576 29.348093 8.637333 c
28.097496 6.089390 25.467739 1.624647 21.938021 0.561056 c
21.424334 0.420404 20.892500 0.357372 20.360167 0.374052 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.919922 15.540039 cm
/Pattern cs
/P67 scn
20.395229 0.455742 m
18.057669 0.455742 15.790231 2.033594 13.604610 5.130863 c
11.535477 8.083756 8.445971 10.165634 4.932256 10.974769 c
3.358294 11.361314 1.732302 11.491550 0.116879 11.360466 c
0.085881 11.360466 0.056152 11.372780 0.034233 11.394699 c
0.012314 11.416618 0.000000 11.446347 0.000000 11.477345 c
0.000000 11.508343 0.012314 11.538073 0.034233 11.559991 c
0.056152 11.581909 0.085881 11.594223 0.116879 11.594223 c
1.755519 11.732323 3.405712 11.602043 5.002383 11.208527 c
8.582312 10.373035 11.723504 8.235857 13.814992 5.212678 c
16.433062 1.472578 19.179697 -0.000086 21.996458 0.841436 c
27.933867 2.653048 32.059666 14.399298 32.141479 18.665348 c
32.141479 18.696346 32.153793 18.726074 32.175713 18.747993 c
32.197632 18.769913 32.227356 18.782227 32.258354 18.782227 c
32.289352 18.782227 32.319084 18.769913 32.341003 18.747993 c
32.362923 18.726074 32.375237 18.696346 32.375237 18.665348 c
32.032486 15.150865 31.029243 11.732697 29.418221 8.590457 c
28.179314 6.077578 25.572931 1.694649 22.066587 0.619370 c
21.521311 0.478563 20.957462 0.423361 20.395229 0.455742 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.919922 15.853516 cm
/Pattern cs
/P68 scn
20.441980 0.339062 m
18.104418 0.339062 15.825295 1.905230 13.627987 5.014187 c
11.568517 7.987458 8.463196 10.074368 4.932256 10.858093 c
3.354905 11.223998 1.728492 11.330584 0.116879 11.173664 c
0.085881 11.173664 0.056152 11.185978 0.034233 11.207897 c
0.012314 11.229815 0.000000 11.259544 0.000000 11.290543 c
0.000000 11.321541 0.012314 11.351267 0.034233 11.373186 c
0.056152 11.395105 0.085881 11.407421 0.116879 11.407421 c
1.751775 11.564343 3.401260 11.457797 5.002383 11.091850 c
8.584152 10.303215 11.738294 8.196281 13.838367 5.189504 c
16.479813 1.461092 19.226448 0.000114 22.019835 0.853325 c
24.556089 1.624720 27.104033 4.359669 29.196150 8.602345 c
30.752279 11.652830 31.727268 14.966215 32.071350 18.373356 c
32.071350 18.404354 32.083664 18.434082 32.105583 18.456001 c
32.127502 18.477921 32.157234 18.490234 32.188232 18.490234 c
32.219231 18.490234 32.248955 18.477921 32.270874 18.456001 c
32.292793 18.434082 32.305107 18.404354 32.305107 18.373356 c
31.958275 14.889408 30.954933 11.502630 29.348093 8.391964 c
28.120872 5.914147 25.537867 1.589659 22.043211 0.526068 c
21.521732 0.384478 20.982052 0.321449 20.441980 0.339062 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.931641 15.995850 cm
/Pattern cs
/P69 scn
20.477045 0.385813 m
18.139482 0.385813 15.801920 1.940292 13.651363 5.060937 c
11.570597 7.998318 8.455851 10.040022 4.932256 10.776278 c
3.351459 11.121664 1.724602 11.204586 0.116879 11.021721 c
0.085881 11.021721 0.056152 11.034035 0.034233 11.055954 c
0.012314 11.077872 0.000000 11.107601 0.000000 11.138599 c
0.000000 11.169598 0.012314 11.199326 0.034233 11.221245 c
0.056152 11.243164 0.085881 11.255478 0.116879 11.255478 c
1.752376 11.437382 3.406615 11.350523 5.014071 10.998344 c
8.605977 10.247752 11.777635 8.158386 13.885118 5.154439 c
16.538250 1.449404 19.284885 0.000116 22.066586 0.853327 c
27.910490 2.653250 31.977848 13.978738 32.106415 18.279852 c
32.106415 18.310850 32.118729 18.340576 32.140648 18.362495 c
32.162567 18.384415 32.192299 18.396729 32.223293 18.396729 c
32.254292 18.396729 32.284019 18.384415 32.305939 18.362495 c
32.327858 18.340576 32.340172 18.310850 32.340172 18.279852 c
32.000832 14.825653 31.000929 11.468834 29.394842 8.391963 c
27.291037 4.172664 24.719719 1.379276 22.136713 0.631256 c
21.599199 0.465483 21.039532 0.382717 20.477045 0.385813 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.956055 16.204346 cm
/Pattern cs
/P70 scn
20.523796 0.373934 m
18.186235 0.373934 15.848671 1.916723 13.674738 4.978930 c
11.583226 7.901496 8.449624 9.909678 4.920568 10.589077 c
3.341212 10.920815 1.717245 10.984035 0.116879 10.776083 c
0.085881 10.776083 0.056153 10.788397 0.034234 10.810315 c
0.012315 10.832233 0.000000 10.861963 0.000000 10.892962 c
0.000000 10.923959 0.012315 10.953688 0.034234 10.975607 c
0.056153 10.997526 0.085881 11.009840 0.116879 11.009840 c
1.748439 11.217546 3.403102 11.154362 5.014071 10.822834 c
8.602616 10.130104 11.787269 8.083725 13.908495 5.107496 c
16.585003 1.437523 19.343328 -0.000076 22.089964 0.853134 c
24.591154 1.612841 27.104033 4.289349 29.161087 8.391770 c
30.720633 11.391016 31.696321 14.659183 32.036289 18.022526 c
32.036289 18.053524 32.048603 18.083252 32.070522 18.105171 c
32.092442 18.127090 32.122169 18.139404 32.153168 18.139404 c
32.184166 18.139404 32.213894 18.127090 32.235813 18.105171 c
32.257732 18.083252 32.270046 18.053524 32.270046 18.022526 c
31.924110 14.599328 30.924240 11.274366 29.324717 8.228142 c
27.244286 4.067281 24.649593 1.344023 22.125025 0.560938 c
21.602978 0.422321 21.063738 0.359344 20.523796 0.373934 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.919922 16.393311 cm
/Pattern cs
/P71 scn
20.558859 0.385769 m
18.221296 0.385769 15.883734 1.916872 13.709801 4.944014 c
11.605247 7.854103 8.455009 9.835571 4.920568 10.472350 c
3.337503 10.782992 1.713178 10.822512 0.116879 10.589226 c
0.085881 10.589226 0.056152 10.601540 0.034233 10.623459 c
0.012314 10.645378 0.000000 10.675107 0.000000 10.706104 c
0.000000 10.737103 0.012314 10.766832 0.034233 10.788751 c
0.056152 10.810669 0.085881 10.822983 0.116879 10.822983 c
1.744445 11.056162 3.399481 11.016663 5.014071 10.706104 c
8.603929 10.053179 11.802957 8.039132 13.943558 5.084269 c
16.585003 1.472734 19.390078 0.000072 22.148401 0.853283 c
27.992308 2.641518 31.907721 13.569618 32.071350 17.894108 c
32.071350 17.925106 32.083664 17.954834 32.105583 17.976753 c
32.127502 17.998672 32.157234 18.010986 32.188232 18.010986 c
32.219231 18.010986 32.248955 17.998672 32.270874 17.976753 c
32.292793 17.954834 32.305107 17.925106 32.305107 17.894108 c
31.952593 14.499722 30.956985 11.203501 29.371469 8.181538 c
27.302727 4.090804 24.766470 1.414295 22.218529 0.631210 c
21.680279 0.468699 21.121105 0.386005 20.558859 0.385769 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.931641 16.547119 cm
/Pattern cs
/P72 scn
20.605608 0.420794 m
18.268047 0.420794 15.930486 1.940209 13.733177 4.955665 c
11.623421 7.848784 8.463885 9.799891 4.932256 10.390495 c
3.338874 10.665084 1.710261 10.665084 0.116879 10.390495 c
0.085881 10.390495 0.056152 10.402809 0.034233 10.424728 c
0.012314 10.446648 0.000000 10.476377 0.000000 10.507374 c
0.000000 10.538372 0.012314 10.568099 0.034233 10.590017 c
0.056152 10.611937 0.085881 10.624250 0.116879 10.624250 c
1.741313 10.875199 3.396088 10.855453 5.014071 10.565813 c
8.606666 9.973049 11.822218 7.991666 13.966934 5.049167 c
16.666819 1.414257 19.448517 0.000031 22.241903 0.853241 c
27.676737 2.524597 31.884346 12.774809 32.106415 17.695377 c
32.106415 17.726376 32.118729 17.756104 32.140648 17.778023 c
32.162567 17.799942 32.192299 17.812256 32.223293 17.812256 c
32.254292 17.812256 32.284019 17.799942 32.305939 17.778023 c
32.327858 17.756104 32.340172 17.726376 32.340172 17.695377 c
31.977739 14.332689 30.982357 11.068935 29.406532 8.076310 c
27.361166 4.055703 24.836597 1.402569 22.312031 0.631174 c
21.756540 0.478132 21.181635 0.407253 20.605608 0.420794 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.931641 16.788574 cm
/Pattern cs
/P73 scn
20.652363 0.374096 m
18.314800 0.374096 15.977240 1.881822 13.768243 4.873901 c
11.646795 7.746877 8.474158 9.663064 4.943944 10.203542 c
3.347013 10.482509 1.713809 10.482509 0.116879 10.203542 c
0.085881 10.203542 0.056152 10.215856 0.034233 10.237775 c
0.012314 10.259693 0.000000 10.289423 0.000000 10.320421 c
0.000000 10.351418 0.012314 10.381147 0.034233 10.403067 c
0.056152 10.424986 0.085881 10.437300 0.116879 10.437300 c
1.737872 10.710180 3.393078 10.710180 5.014071 10.437300 c
8.607335 9.883789 11.837133 7.934991 14.001998 5.014155 c
16.713570 1.390934 19.506958 0.000086 22.300344 0.853296 c
24.754786 1.601315 27.209225 4.172632 29.207842 8.076361 c
30.737415 10.990438 31.704861 14.166363 32.059666 17.438297 c
32.059666 17.469296 32.071980 17.499023 32.093899 17.520943 c
32.115818 17.542862 32.145550 17.555176 32.176548 17.555176 c
32.207542 17.555176 32.237270 17.542862 32.259190 17.520943 c
32.281109 17.499023 32.293423 17.469296 32.293423 17.438297 c
32.059666 12.622919 27.992310 2.244143 22.323721 0.572786 c
21.779833 0.422533 21.216320 0.355543 20.652363 0.374096 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.931641 16.977783 cm
/Pattern cs
/P74 scn
20.699112 0.385717 m
18.361549 0.385717 16.023987 1.870069 13.803304 4.838772 c
12.745388 6.256917 11.416540 7.451002 9.893767 8.351825 c
8.370995 9.252648 6.684580 9.842299 4.932256 10.086601 c
3.334227 10.334387 1.705568 10.306714 0.116879 10.004784 c
0.085881 10.004784 0.056152 10.017097 0.034233 10.039017 c
0.012314 10.060936 0.000000 10.090665 0.000000 10.121662 c
0.000000 10.152660 0.012314 10.182390 0.034233 10.204309 c
0.056152 10.226228 0.085881 10.238542 0.116879 10.238542 c
1.733087 10.540751 3.388669 10.568409 5.014071 10.320356 c
6.795294 10.072208 8.509349 9.472159 10.056422 8.555153 c
11.603495 7.638146 12.952666 6.422507 14.025373 4.979027 c
16.760321 1.390869 19.565393 0.000019 22.358780 0.864918 c
27.852051 2.547961 31.849283 12.611166 32.106415 17.321354 c
32.106415 17.352352 32.118729 17.382080 32.140648 17.403999 c
32.162567 17.425919 32.192299 17.438232 32.223293 17.438232 c
32.254292 17.438232 32.284019 17.425919 32.305939 17.403999 c
32.327858 17.382080 32.340172 17.352352 32.340172 17.321354 c
31.949528 14.022971 30.942480 10.827385 29.371466 7.900979 c
27.361164 3.997251 24.871660 1.425934 22.358780 0.666225 c
21.822811 0.489792 21.263292 0.395224 20.699112 0.385717 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.931641 17.176758 cm
/Pattern cs
/P75 scn
20.745863 0.373960 m
18.408302 0.373960 16.070740 1.858314 13.826679 4.803641 c
12.762088 6.211817 11.426916 7.393135 9.899539 8.278251 c
8.372162 9.163367 6.683356 9.734446 4.932256 9.957966 c
3.330382 10.185446 1.701226 10.134039 0.116879 9.806023 c
0.085881 9.806023 0.056152 9.818336 0.034233 9.840256 c
0.012314 9.862175 0.000000 9.891904 0.000000 9.922901 c
0.000000 9.953899 0.012314 9.983629 0.034233 10.005548 c
0.056152 10.027466 0.085881 10.039780 0.116879 10.039780 c
1.729664 10.360703 3.384493 10.412045 5.014071 10.191721 c
6.795388 9.963312 8.513155 9.381462 10.066596 8.480306 c
11.620038 7.579149 12.977871 6.376834 14.060437 4.943894 c
16.807072 1.437551 19.612146 -0.000050 22.417221 0.853161 c
24.836597 1.601180 27.255972 4.102372 29.219524 7.865847 c
30.747921 10.741379 31.726938 13.876608 32.106415 17.110905 c
32.106415 17.141903 32.118729 17.171631 32.140648 17.193550 c
32.162567 17.215469 32.192299 17.227783 32.223293 17.227783 c
32.254292 17.227783 32.284019 17.215469 32.305939 17.193550 c
32.327858 17.171631 32.340172 17.141903 32.340172 17.110905 c
31.961353 13.840006 30.974304 10.668769 29.429905 7.760656 c
27.431290 3.927054 24.965162 1.390799 22.487347 0.619404 c
21.921616 0.454552 21.335121 0.371893 20.745863 0.373960 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.903320 17.385010 cm
/Pattern cs
/P76 scn
20.821135 0.362299 m
18.483572 0.362299 16.146013 1.823273 13.890266 4.756913 c
12.821048 6.158388 11.480249 7.329911 9.948009 8.201461 c
8.415769 9.073010 6.723540 9.626695 4.972466 9.829423 c
3.367478 10.043479 1.737292 9.972257 0.157088 9.619041 c
0.126090 9.609743 0.092667 9.613138 0.064173 9.628481 c
0.035678 9.643824 0.014446 9.669859 0.005146 9.700856 c
-0.004153 9.731854 -0.000757 9.765278 0.014586 9.793773 c
0.029929 9.822268 0.055964 9.843500 0.086962 9.852799 c
1.699844 10.197987 3.359340 10.269108 4.995842 10.063180 c
6.776941 9.864328 8.499142 9.306011 10.058135 8.422045 c
11.617128 7.538080 12.980471 6.346861 14.065583 4.920542 c
16.835594 1.414199 19.652355 -0.000023 22.457430 0.864874 c
27.892262 2.536231 31.807676 12.213737 32.088184 16.935612 c
32.088184 16.966610 32.100498 16.996338 32.122417 17.018257 c
32.144337 17.040176 32.174065 17.052490 32.205063 17.052490 c
32.236061 17.052490 32.265789 17.040176 32.287708 17.018257 c
32.309628 16.996338 32.321941 16.966610 32.321941 16.935612 c
32.018059 12.166985 28.067577 2.372600 22.527555 0.666180 c
21.977016 0.480627 21.401884 0.378208 20.821135 0.362299 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.903320 17.517334 cm
/Pattern cs
/P77 scn
20.867887 0.420698 m
18.530325 0.420698 16.192762 1.881675 13.913640 4.780252 c
12.839421 6.165969 11.493118 7.317319 9.957503 8.163514 c
8.421888 9.009710 6.729419 9.532867 4.984154 9.700819 c
3.371026 9.887466 1.737738 9.792553 0.157088 9.420311 c
0.141739 9.415707 0.125634 9.414171 0.109691 9.415791 c
0.093749 9.417410 0.078282 9.422153 0.064173 9.429750 c
0.035678 9.445093 0.014446 9.471128 0.005146 9.502126 c
-0.004153 9.533124 -0.000757 9.566547 0.014586 9.595042 c
0.029929 9.623537 0.055964 9.644768 0.086962 9.654066 c
1.695658 10.024220 3.355452 10.119068 4.995842 9.934576 c
6.776559 9.754436 8.502018 9.213919 10.067253 8.345907 c
11.632488 7.477895 13.004778 6.300530 14.100645 4.885440 c
16.882343 1.379097 19.710794 -0.000065 22.515869 0.864833 c
24.911869 1.601165 27.284494 4.020543 29.212984 7.678828 c
30.736691 10.488714 31.712406 13.562620 32.088184 16.736881 c
32.088184 16.767879 32.100498 16.797607 32.122417 16.819527 c
32.144337 16.841446 32.174065 16.853760 32.205063 16.853760 c
32.236061 16.853760 32.265789 16.841446 32.287708 16.819527 c
32.309628 16.797607 32.321941 16.767879 32.321941 16.736881 c
31.937365 13.535467 30.954079 10.434947 29.423365 7.597013 c
27.459812 3.880290 25.040434 1.414162 22.585995 0.666142 c
22.028700 0.499268 21.449614 0.416542 20.867887 0.420698 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.856445 17.692627 cm
/Pattern cs
/P78 scn
20.961391 0.444065 m
18.623829 0.444065 16.286268 1.893355 13.948706 4.768557 c
12.864874 6.151103 11.509201 7.296862 9.965358 8.135120 c
8.421515 8.973378 6.722260 9.486349 4.972466 9.642374 c
3.359139 9.804728 1.729878 9.686090 0.157088 9.291739 c
0.126090 9.282438 0.092667 9.285835 0.064173 9.301179 c
0.035678 9.316523 0.014446 9.342556 0.005146 9.373554 c
-0.004153 9.404552 -0.000757 9.437974 0.014586 9.466469 c
0.029929 9.494963 0.055964 9.516195 0.086962 9.525496 c
1.692514 9.913627 3.351424 10.032120 4.995842 9.876129 c
6.789546 9.718372 8.531029 9.190285 10.110252 8.325233 c
11.689475 7.460180 13.072104 6.276972 14.170773 4.850371 c
16.975847 1.344028 19.815985 -0.000072 22.621059 0.876513 c
28.149393 2.571246 31.807676 12.120190 32.134937 16.549870 c
32.134937 16.580868 32.147251 16.610596 32.169167 16.632515 c
32.191086 16.654434 32.220818 16.666748 32.251816 16.666748 c
32.282814 16.666748 32.312542 16.654434 32.334461 16.632515 c
32.356380 16.610596 32.368694 16.580868 32.368694 16.549870 c
32.029747 12.073439 28.324713 2.407619 22.691187 0.677823 c
22.130480 0.509373 21.546698 0.430481 20.961391 0.444065 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.878906 17.947998 cm
/Pattern cs
/P79 scn
20.984766 0.373901 m
18.647203 0.373901 16.309641 1.811502 13.972079 4.663328 c
12.887414 6.039927 11.528215 7.175810 9.980879 7.998775 c
8.433541 8.821741 6.731914 9.313789 4.984154 9.443644 c
3.363598 9.592909 1.729414 9.454418 0.157088 9.034569 c
0.126090 9.025270 0.092668 9.028667 0.064173 9.044010 c
0.035679 9.059354 0.014446 9.085388 0.005147 9.116386 c
-0.004153 9.147385 -0.000758 9.180805 0.014585 9.209300 c
0.029929 9.237795 0.055963 9.259027 0.086961 9.268327 c
1.688458 9.680647 3.348187 9.818958 4.995842 9.677401 c
6.777148 9.547883 8.511930 9.048646 10.089600 8.211515 c
11.667270 7.374385 13.053214 6.217726 14.159084 4.815271 c
16.975847 1.308928 19.827673 -0.000105 22.644434 0.864793 c
28.090954 2.547837 31.737553 11.979898 32.088188 16.351139 c
32.088188 16.382137 32.100502 16.411865 32.122421 16.433784 c
32.144341 16.455704 32.174065 16.468018 32.205063 16.468018 c
32.236061 16.468018 32.265789 16.455704 32.287708 16.433784 c
32.309628 16.411865 32.321941 16.382137 32.321941 16.351139 c
31.931503 13.211798 30.952066 10.174349 29.435055 7.398276 c
28.079268 4.850333 25.811831 1.624497 22.714561 0.666098 c
22.155128 0.485557 21.572460 0.387133 20.984766 0.373901 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.889648 18.123291 cm
/Pattern cs
/P80 scn
21.019831 0.397274 m
18.682268 0.397274 16.344706 1.823186 14.007144 4.651636 c
12.913136 6.017919 11.544999 7.139825 9.990911 7.945052 c
8.436822 8.750279 6.731262 9.220961 4.984153 9.326759 c
3.359512 9.448598 1.726065 9.286440 0.157088 8.847560 c
0.141740 8.842956 0.125634 8.841417 0.109692 8.843037 c
0.093749 8.844656 0.078281 8.849401 0.064172 8.856998 c
0.035678 8.872342 0.014446 8.898376 0.005147 8.929375 c
-0.004153 8.960373 -0.000758 8.993793 0.014585 9.022288 c
0.029929 9.050783 0.055963 9.072016 0.086961 9.081315 c
1.684023 9.519444 3.344198 9.681509 4.995842 9.560514 c
6.775380 9.452044 8.512397 8.971612 10.094756 8.150234 c
11.677116 7.328857 13.069649 6.184790 14.182461 4.791888 c
17.022598 1.285545 19.886110 -0.000113 22.702873 0.876473 c
25.040436 1.601118 27.378000 3.915304 29.236362 7.386583 c
30.724480 10.109657 31.691626 13.086407 32.088184 16.164127 c
32.088184 16.195126 32.100498 16.224854 32.122417 16.246773 c
32.144337 16.268692 32.174065 16.281006 32.205063 16.281006 c
32.236061 16.281006 32.265793 16.268692 32.287708 16.246773 c
32.309628 16.224854 32.321941 16.195126 32.321941 16.164127 c
31.947933 11.676008 28.336399 2.395886 22.773001 0.677778 c
22.206308 0.495530 21.615097 0.400939 21.019831 0.397274 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.914062 18.345215 cm
/Pattern cs
/P81 scn
21.043747 0.362416 m
18.706186 0.362416 16.368624 1.776640 14.031061 4.593402 c
12.927959 5.951643 11.551379 7.062551 9.990803 7.853914 c
8.430227 8.645277 6.720587 9.099382 4.973009 9.186712 c
3.345236 9.278967 1.713526 9.097225 0.145943 8.649071 c
0.132129 8.644466 0.117544 8.642629 0.103020 8.643661 c
0.088495 8.644693 0.074317 8.648577 0.061293 8.655088 c
0.048269 8.661600 0.036655 8.670614 0.027115 8.681614 c
0.017575 8.692615 0.010294 8.705386 0.005689 8.719200 c
0.001085 8.733013 -0.000753 8.747598 0.000279 8.762122 c
0.001311 8.776647 0.005193 8.790826 0.011705 8.803850 c
0.018217 8.816874 0.027231 8.828486 0.038231 8.838027 c
0.049231 8.847567 0.062003 8.854848 0.075817 8.859452 c
1.667189 9.329744 3.328250 9.519579 4.984697 9.420467 c
6.764102 9.333354 8.505130 8.871951 10.094128 8.066375 c
11.683126 7.260799 13.084367 6.129163 14.206378 4.745342 c
17.058205 1.238999 19.933405 0.000092 22.761856 0.876678 c
28.138248 2.548035 31.691345 11.582712 32.112106 15.965641 c
32.112106 15.996639 32.124420 16.026367 32.146339 16.048286 c
32.168259 16.070206 32.197983 16.082520 32.228981 16.082520 c
32.259979 16.082520 32.289711 16.070206 32.311630 16.048286 c
32.333549 16.026367 32.345863 15.996639 32.345863 15.965641 c
31.943302 12.889772 30.968079 9.916538 29.470657 7.199783 c
28.138248 4.745343 25.964315 1.624700 22.867046 0.677987 c
22.279459 0.478343 21.664253 0.371864 21.043747 0.362416 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.937500 18.567383 cm
/Pattern cs
/P82 scn
21.067125 0.327222 m
18.729565 0.327222 16.392000 1.741445 14.054439 4.523144 c
12.951789 5.877491 11.571762 6.979873 10.007277 7.756066 c
8.442791 8.532261 6.730161 8.964251 4.984696 9.022951 c
3.349614 9.100967 1.713209 8.899381 0.145944 8.426872 c
0.132130 8.422268 0.117545 8.420430 0.103021 8.421463 c
0.088496 8.422495 0.074317 8.426378 0.061293 8.432890 c
0.048269 8.439402 0.036655 8.448416 0.027115 8.459415 c
0.017575 8.470416 0.010295 8.483187 0.005690 8.497002 c
0.001086 8.510815 -0.000753 8.525399 0.000279 8.539924 c
0.001311 8.554448 0.005194 8.568627 0.011706 8.581652 c
0.018218 8.594675 0.027231 8.606288 0.038231 8.615828 c
0.049231 8.625368 0.062003 8.632648 0.075817 8.637254 c
1.662472 9.133009 3.324623 9.342758 4.984696 9.256708 c
6.763381 9.196917 8.508667 8.757118 10.103282 7.966867 c
11.697897 7.176615 13.104902 6.054216 14.229755 4.675087 c
17.104958 1.250558 19.991848 -0.000036 22.820297 0.829798 c
25.648748 1.659633 27.939556 4.768588 29.236904 7.141213 c
30.710806 9.802663 31.674070 12.716242 32.077042 15.731754 c
32.077042 15.762753 32.089355 15.792481 32.111275 15.814400 c
32.133194 15.836319 32.162926 15.848633 32.193924 15.848633 c
32.224922 15.848633 32.254646 15.836319 32.276566 15.814400 c
32.298485 15.792481 32.310799 15.762753 32.310799 15.731754 c
31.905640 12.687652 30.934420 9.746245 29.447285 7.059399 c
28.126562 4.651710 25.940943 1.577816 22.890425 0.631104 c
22.301929 0.436537 21.686913 0.334036 21.067125 0.327222 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.950195 18.674316 cm
/Pattern cs
/P83 scn
21.102188 0.362338 m
18.764626 0.362338 16.427065 1.753187 14.089502 4.523198 c
12.977213 5.868284 11.588292 6.958053 10.017200 7.718389 c
8.446108 8.478724 6.729695 8.891794 4.984697 8.929503 c
3.345550 8.985763 1.708900 8.760427 0.145944 8.263298 c
0.118046 8.254000 0.087596 8.256162 0.061293 8.269314 c
0.034991 8.282465 0.014989 8.305527 0.005690 8.333425 c
-0.003610 8.361322 -0.001445 8.391772 0.011707 8.418075 c
0.024858 8.444378 0.047919 8.464380 0.075817 8.473680 c
1.659354 8.988146 3.320705 9.221525 4.984697 9.163260 c
6.763205 9.125982 8.512780 8.705777 10.114224 7.931275 c
11.715669 7.156773 13.131351 6.046173 14.264819 4.675141 c
17.151709 1.262300 20.050285 0.000016 22.890425 0.864915 c
28.208378 2.524584 31.644594 11.185251 32.077045 15.568180 c
32.077045 15.599178 32.089359 15.628907 32.111275 15.650826 c
32.133194 15.672745 32.162922 15.685059 32.193920 15.685059 c
32.224918 15.685059 32.254650 15.672745 32.276569 15.650826 c
32.298489 15.628907 32.310802 15.599178 32.310802 15.568180 c
31.866665 11.126812 28.372007 2.349264 22.960550 0.666220 c
22.360289 0.470456 21.733540 0.367971 21.102188 0.362338 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.890625 18.894531 cm
/Pattern cs
/P84 scn
21.208500 0.385769 m
18.870937 0.385769 16.533375 1.764932 14.137373 4.523255 c
13.017263 5.858327 11.621408 6.935088 10.045711 7.679560 c
8.470013 8.424032 6.751823 8.818567 5.009194 8.836058 c
3.370093 8.865611 1.737872 8.616627 0.182128 8.099724 c
0.167972 8.090199 0.151902 8.083889 0.135047 8.081237 c
0.118192 8.078585 0.100960 8.079654 0.084563 8.084372 c
0.068166 8.089088 0.053000 8.097340 0.040131 8.108543 c
0.027263 8.119747 0.017003 8.133633 0.010073 8.149225 c
0.003143 8.164818 -0.000288 8.181738 0.000019 8.198797 c
0.000326 8.215858 0.004364 8.232643 0.011851 8.247975 c
0.019337 8.263308 0.030089 8.276814 0.043353 8.287547 c
0.056616 8.298281 0.072069 8.305981 0.088626 8.310105 c
1.668499 8.846025 3.329542 9.103091 4.997506 9.069813 c
6.781145 9.057171 8.540809 8.657715 10.155085 7.899005 c
11.769361 7.140295 13.199817 6.040394 14.347754 4.675196 c
17.246332 1.274042 20.191660 0.000074 23.008421 0.900036 c
25.825184 1.799997 28.034180 4.721949 29.308151 7.001072 c
30.761753 9.602595 31.717030 12.452570 32.124912 15.404606 c
32.124912 15.435604 32.137226 15.465333 32.159145 15.487251 c
32.181065 15.509171 32.210796 15.521484 32.241795 15.521484 c
32.272793 15.521484 32.302517 15.509171 32.324436 15.487251 c
32.346355 15.465333 32.358669 15.435604 32.358669 15.404606 c
31.947662 12.422562 30.980289 9.544227 29.506845 6.919255 c
28.221188 4.581693 26.000500 1.624678 23.078548 0.701341 c
22.475985 0.497221 21.844679 0.390687 21.208500 0.385769 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.890625 19.046631 cm
/Pattern cs
/P85 scn
21.255251 0.420672 m
18.917688 0.420672 16.580126 1.799835 14.172438 4.523095 c
13.047422 5.854704 11.643545 6.922842 10.060116 7.651947 c
8.476686 8.381051 6.752388 8.753311 5.009194 8.742395 c
3.366438 8.757056 1.733467 8.488189 0.182128 7.947624 c
0.167972 7.938098 0.151902 7.931789 0.135047 7.929137 c
0.118192 7.926484 0.100960 7.927554 0.084563 7.932271 c
0.068166 7.936988 0.053000 7.945239 0.040131 7.956443 c
0.027263 7.967647 0.017003 7.981533 0.010073 7.997125 c
0.003143 8.012716 -0.000288 8.029637 0.000019 8.046698 c
0.000326 8.063757 0.004364 8.080543 0.011851 8.095875 c
0.019337 8.111208 0.030089 8.124714 0.043353 8.135447 c
0.056616 8.146181 0.072069 8.153881 0.088626 8.158005 c
1.664066 8.717309 3.325829 8.994270 4.997506 8.976152 c
6.776165 8.989244 8.535906 8.610693 10.151844 7.867361 c
11.767781 7.124030 13.200305 6.034140 14.347754 4.675037 c
17.269707 1.308948 20.191660 -0.000086 23.055174 0.934939 c
28.045870 2.501106 31.575584 10.390377 32.101536 15.252506 c
32.101536 15.283504 32.113850 15.313233 32.135769 15.335152 c
32.157688 15.357071 32.187420 15.369385 32.218418 15.369385 c
32.249416 15.369385 32.279140 15.357071 32.301060 15.335152 c
32.322979 15.313233 32.335293 15.283504 32.335293 15.252506 c
31.797655 10.331938 28.209497 2.337474 23.125299 0.736244 c
22.520939 0.539343 21.890759 0.433000 21.255251 0.420672 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.890625 19.280273 cm
/Pattern cs
/P86 scn
21.313692 0.385727 m
18.976130 0.385727 16.580130 1.741512 14.195815 4.453084 c
13.070636 5.765882 11.671065 6.815762 10.095860 7.528643 c
8.520657 8.241524 6.808199 8.600035 5.079321 8.578880 c
5.009194 8.578880 l
3.363080 8.563053 1.731331 8.270681 0.182128 7.713982 c
0.167972 7.704456 0.151902 7.698147 0.135047 7.695495 c
0.118192 7.692842 0.100960 7.693912 0.084563 7.698629 c
0.068166 7.703347 0.053000 7.711597 0.040131 7.722801 c
0.027263 7.734005 0.017003 7.747891 0.010073 7.763483 c
0.003143 7.779075 -0.000288 7.795996 0.000019 7.813056 c
0.000326 7.830115 0.004364 7.846901 0.011851 7.862233 c
0.019337 7.877566 0.030089 7.891071 0.043353 7.901805 c
0.056616 7.912539 0.072069 7.920238 0.088626 7.924363 c
1.661028 8.502878 3.322083 8.803450 4.997507 8.812637 c
5.079321 8.812637 l
6.851252 8.841247 8.607720 8.479054 10.223792 7.751822 c
11.839865 7.024590 13.275835 5.950184 14.429570 4.605024 c
17.374899 1.250624 20.273476 0.000028 23.172052 0.899989 c
28.092621 2.442780 31.610653 10.250237 32.148293 15.018864 c
32.148293 15.049862 32.160606 15.079591 32.182526 15.101509 c
32.204445 15.123428 32.234177 15.135742 32.265175 15.135742 c
32.296169 15.135742 32.325897 15.123428 32.347816 15.101509 c
32.369736 15.079591 32.382050 15.049862 32.382050 15.018864 c
31.966402 12.100225 31.006994 9.285444 29.553596 6.720518 c
28.291313 4.476459 26.164133 1.624635 23.230494 0.701298 c
22.612661 0.493818 21.965431 0.387261 21.313692 0.385727 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.890625 19.477051 cm
/Pattern cs
/P87 scn
21.360441 0.374061 m
19.022879 0.374061 16.615189 1.729846 14.230876 4.418042 c
13.088861 5.734110 11.667031 6.778177 10.069443 7.473836 c
8.471854 8.169496 6.738934 8.499142 4.997506 8.438650 c
3.350616 8.416002 1.720588 8.103447 0.182128 7.515312 c
0.167972 7.505786 0.151902 7.499477 0.135047 7.496825 c
0.118192 7.494173 0.100960 7.495242 0.084563 7.499959 c
0.068166 7.504677 0.053000 7.512928 0.040131 7.524131 c
0.027263 7.535335 0.017003 7.549222 0.010073 7.564813 c
0.003143 7.580405 -0.000288 7.597326 0.000019 7.614386 c
0.000326 7.631445 0.004364 7.648231 0.011851 7.663563 c
0.019337 7.678896 0.030089 7.692401 0.043353 7.703135 c
0.056616 7.713869 0.072069 7.721569 0.088626 7.725693 c
1.656534 8.327415 3.318279 8.647894 4.997506 8.672405 c
6.771982 8.730030 8.537021 8.391760 10.164456 7.682158 c
11.791893 6.972555 13.240875 5.909433 14.406193 4.569985 c
17.374897 1.227271 20.331913 0.000050 23.195427 0.888323 c
26.058941 1.776597 28.080931 4.546608 29.308151 6.732229 c
30.734924 9.239075 31.682211 11.989779 32.101536 14.843571 c
32.101536 14.874569 32.113850 14.904298 32.135769 14.926216 c
32.157688 14.948135 32.187420 14.960449 32.218418 14.960449 c
32.249416 14.960449 32.279140 14.948135 32.301060 14.926216 c
32.322979 14.904298 32.335293 14.874569 32.335293 14.843571 c
31.913845 11.963181 30.954348 9.187771 29.506845 6.662103 c
28.267939 4.464794 26.164131 1.659719 23.265554 0.736382 c
22.653074 0.517821 22.010393 0.395595 21.360441 0.374061 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.890625 19.666016 cm
/Pattern cs
/P88 scn
21.418879 0.373994 m
19.081316 0.373994 16.661942 1.718093 14.265940 4.382914 c
13.116804 5.691192 11.688277 6.724422 10.086002 7.406198 c
8.483727 8.087975 6.748689 8.400856 5.009194 8.321705 c
3.354147 8.278050 1.719902 7.941704 0.182128 7.328240 c
0.167972 7.318714 0.151902 7.312405 0.135047 7.309752 c
0.118192 7.307100 0.100960 7.308169 0.084563 7.312887 c
0.068166 7.317605 0.053000 7.325855 0.040131 7.337059 c
0.027263 7.348263 0.017003 7.362149 0.010073 7.377741 c
0.003143 7.393333 -0.000288 7.410254 0.000019 7.427313 c
0.000326 7.444373 0.004364 7.461159 0.011851 7.476491 c
0.019337 7.491824 0.030089 7.505329 0.043353 7.516063 c
0.056616 7.526796 0.072069 7.534496 0.088626 7.538621 c
1.652173 8.164328 3.314060 8.508577 4.997506 8.555462 c
6.769574 8.636516 8.537207 8.318338 10.169783 7.624444 c
11.802359 6.930548 13.258147 5.878671 14.429568 4.546542 c
17.421648 1.215516 20.390354 -0.000017 23.265554 0.899944 c
28.115997 2.431047 31.517147 9.864494 32.101536 14.633121 c
32.101536 14.664120 32.113850 14.693849 32.135769 14.715767 c
32.157688 14.737686 32.187420 14.750000 32.218418 14.750000 c
32.249416 14.750000 32.279140 14.737686 32.301060 14.715767 c
32.322979 14.693849 32.335293 14.664120 32.335293 14.633121 c
31.739216 9.794369 28.291313 2.267418 23.335682 0.701251 c
22.717039 0.495600 22.070711 0.385253 21.418879 0.373994 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.890625 19.829590 cm
/Pattern cs
/P89 scn
21.465631 0.373987 m
19.128069 0.373987 16.735964 1.702501 14.289316 4.359530 c
13.131960 5.658027 11.696212 6.678289 10.089284 7.344132 c
8.482355 8.009975 6.745769 8.304195 5.009194 8.204821 c
3.350957 8.130702 1.717959 7.770889 0.182128 7.141231 c
0.167972 7.131705 0.151902 7.125393 0.135047 7.122741 c
0.118192 7.120089 0.100960 7.121158 0.084563 7.125875 c
0.068166 7.130593 0.053000 7.138844 0.040131 7.150047 c
0.027263 7.161251 0.017003 7.175137 0.010073 7.190729 c
0.003143 7.206321 -0.000288 7.223242 0.000019 7.240302 c
0.000326 7.257361 0.004364 7.274147 0.011851 7.289479 c
0.019337 7.304812 0.030089 7.318320 0.043353 7.329053 c
0.056616 7.339787 0.072069 7.347485 0.088626 7.351609 c
1.649312 7.996471 3.310476 8.364301 4.997506 8.438576 c
6.769310 8.538483 8.540818 8.237234 10.180004 7.557275 c
11.819189 6.877317 13.283782 5.836185 14.464633 4.511473 c
17.480087 1.215510 20.460480 -0.000024 23.335682 0.911625 c
26.210882 1.823275 28.127682 4.417970 29.331528 6.521775 c
30.743820 8.966053 31.683510 11.654281 32.101536 14.446112 c
32.101536 14.477110 32.113850 14.506837 32.135769 14.528755 c
32.157688 14.550674 32.187420 14.562988 32.218418 14.562988 c
32.249416 14.562988 32.279140 14.550674 32.301060 14.528755 c
32.322979 14.506837 32.335293 14.477110 32.335293 14.446112 c
31.912607 11.620928 30.960958 8.900787 29.530222 6.428273 c
28.361441 4.312779 26.257633 1.612896 23.405807 0.701246 c
22.779354 0.494670 22.125185 0.384328 21.465631 0.373987 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.854492 20.016602 cm
/Pattern cs
/P90 scn
21.559132 0.409044 m
19.221569 0.409044 16.778818 1.729766 14.359442 4.347836 c
13.191084 5.645943 11.740810 6.659070 10.119957 7.309438 c
8.499104 7.959805 6.750778 8.230118 5.009194 8.099624 c
3.344226 7.995164 1.710467 7.599581 0.182128 6.930842 c
0.167972 6.921317 0.151902 6.915005 0.135047 6.912353 c
0.118192 6.909700 0.100960 6.910770 0.084563 6.915487 c
0.068166 6.920205 0.053000 6.928455 0.040131 6.939659 c
0.027263 6.950863 0.017003 6.964749 0.010073 6.980341 c
0.003143 6.995934 -0.000288 7.012854 0.000019 7.029914 c
0.000326 7.046974 0.004364 7.063759 0.011851 7.079092 c
0.019337 7.094424 0.030089 7.107932 0.043353 7.118666 c
0.056616 7.129399 0.072069 7.137099 0.088626 7.141223 c
1.642582 7.819077 3.304813 8.214846 4.997506 8.310005 c
6.765675 8.434303 8.538954 8.154806 10.183168 7.492666 c
11.827382 6.830526 13.299458 5.803087 14.488008 4.488090 c
17.526838 1.203815 20.530603 -0.000029 23.405806 0.911621 c
28.349749 2.477787 31.517147 9.806045 32.101536 14.259100 c
32.101536 14.290098 32.113850 14.319825 32.135769 14.341743 c
32.157688 14.363663 32.187416 14.375977 32.218414 14.375977 c
32.249413 14.375977 32.279140 14.363663 32.301060 14.341743 c
32.322979 14.319825 32.335293 14.290098 32.335293 14.259100 c
31.739216 9.735918 28.513380 2.314157 23.475933 0.712928 c
22.856754 0.512306 22.210001 0.409773 21.559132 0.409044 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.865234 20.203613 cm
/Pattern cs
/P91 scn
21.594198 0.409129 m
19.256636 0.409129 16.813883 1.718164 14.371131 4.324547 c
13.198179 5.611401 11.744581 6.610787 10.123064 7.245206 c
8.501546 7.879625 6.755687 8.132025 5.020882 7.982830 c
3.352055 7.879004 1.714351 7.483423 0.182129 6.814049 c
0.167973 6.804523 0.151903 6.798212 0.135048 6.795559 c
0.118193 6.792907 0.100962 6.793979 0.084564 6.798696 c
0.068167 6.803413 0.053000 6.811664 0.040131 6.822868 c
0.027263 6.834072 0.017004 6.847956 0.010074 6.863548 c
0.003144 6.879140 -0.000288 6.896060 0.000019 6.913120 c
0.000326 6.930180 0.004364 6.946966 0.011851 6.962298 c
0.019337 6.977631 0.030090 6.991138 0.043354 7.001872 c
0.056617 7.012606 0.072069 7.020306 0.088626 7.024430 c
1.641088 7.694481 3.298085 8.089946 4.985819 8.193211 c
6.754797 8.342553 8.534460 8.084095 10.187878 7.437722 c
11.841295 6.791349 13.324398 5.774290 14.523073 4.464799 c
17.585279 1.192212 20.600733 0.000055 23.487621 0.958456 c
28.349751 2.501246 31.505463 9.724314 32.101540 14.107243 c
32.101540 14.138241 32.113853 14.167970 32.135773 14.189888 c
32.157692 14.211807 32.187420 14.224121 32.218418 14.224121 c
32.249416 14.224121 32.279140 14.211807 32.301060 14.189888 c
32.322979 14.167970 32.335293 14.138241 32.335293 14.107243 c
31.909081 11.345181 30.965330 8.688394 29.553598 6.276411 c
28.384817 4.242732 26.351137 1.601285 23.557751 0.748075 c
22.923296 0.539815 22.261755 0.425622 21.594198 0.409129 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.916016 20.439453 cm
/Pattern cs
/P92 scn
21.602528 0.362309 m
19.264967 0.362309 16.810528 1.659656 14.356088 4.254350 c
13.172417 5.518838 11.712883 6.493087 10.091111 7.101252 c
8.469340 7.709416 6.729089 7.935085 5.005838 7.760693 c
3.335851 7.630586 1.701850 7.207249 0.178773 6.510098 c
0.150875 6.494598 0.117962 6.490817 0.087276 6.499584 c
0.056590 6.508352 0.030642 6.528949 0.015143 6.556848 c
-0.000356 6.584746 -0.004137 6.617660 0.004630 6.648346 c
0.013398 6.679032 0.033996 6.704979 0.061895 6.720479 c
1.611245 7.428519 3.272644 7.859692 4.970775 7.994450 c
6.728416 8.175537 8.504150 7.949203 10.160170 7.333009 c
11.816190 6.716815 13.307960 5.727334 14.519716 4.441355 c
17.605299 1.180455 20.644131 -0.000013 23.531019 0.935012 c
28.381460 2.489491 31.455351 9.455425 32.074806 13.896793 c
32.074806 13.927792 32.087120 13.957520 32.109039 13.979439 c
32.130959 14.001358 32.160686 14.013672 32.191685 14.013672 c
32.222683 14.013672 32.252411 14.001358 32.274330 13.979439 c
32.296249 13.957520 32.308563 13.927792 32.308563 13.896793 c
31.677422 9.385299 28.556776 2.314173 23.601145 0.736319 c
22.958490 0.508297 22.284149 0.382105 21.602528 0.362309 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.952148 20.673340 cm
/Pattern cs
/P93 scn
21.625904 0.315457 m
19.288343 0.315457 16.822214 1.601116 14.356087 4.172434 c
13.174054 5.439095 11.714752 6.414824 10.092542 7.023153 c
8.470331 7.631482 6.729285 7.855884 5.005839 7.678777 c
3.331671 7.525817 1.697611 7.078727 0.178773 6.358056 c
0.150875 6.342557 0.117962 6.338775 0.087276 6.347542 c
0.056590 6.356310 0.030642 6.376908 0.015143 6.404806 c
-0.000356 6.432704 -0.004137 6.465618 0.004630 6.496304 c
0.013398 6.526990 0.033996 6.552938 0.061895 6.568437 c
1.609407 7.293560 3.269722 7.748169 4.970775 7.912534 c
6.732645 8.113279 8.517057 7.900934 10.182615 7.292326 c
11.848173 6.683718 13.349101 5.695574 14.566467 4.406191 c
17.675425 1.168668 20.725943 -0.000113 23.624519 0.899848 c
28.404835 2.442639 31.455353 9.303385 32.086494 13.674625 c
32.086494 13.705624 32.098808 13.735353 32.120728 13.757271 c
32.142647 13.779190 32.172375 13.791504 32.203373 13.791504 c
32.234371 13.791504 32.264099 13.779190 32.286018 13.757271 c
32.307938 13.735353 32.320251 13.705624 32.320251 13.674625 c
31.677422 9.233257 28.568462 2.267322 23.694645 0.701156 c
23.029699 0.464375 22.331503 0.334202 21.625904 0.315457 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.905273 20.788086 cm
/Pattern cs
/P94 scn
21.742783 0.385640 m
19.405222 0.385640 16.915718 1.671301 14.437901 4.219243 c
13.238082 5.482231 11.758474 6.445856 10.118197 7.032539 c
8.477921 7.619222 6.722805 7.812571 4.994151 7.597020 c
3.319256 7.422580 1.688738 6.951629 0.178773 6.206170 c
0.150875 6.190670 0.117962 6.186889 0.087276 6.195656 c
0.056590 6.204424 0.030642 6.225024 0.015143 6.252922 c
-0.000356 6.280820 -0.004137 6.313732 0.004630 6.344418 c
0.013398 6.375104 0.033996 6.401052 0.061895 6.416551 c
1.603968 7.166514 3.265260 7.641170 4.970775 7.819089 c
6.731308 8.041688 8.519518 7.846602 10.190639 7.249628 c
11.861761 6.652653 13.368831 5.670567 14.589842 4.382872 c
17.733864 1.157036 20.796070 -0.000058 23.706335 0.934967 c
26.347780 1.788177 28.241207 4.195868 29.363235 6.054229 c
30.730108 8.347290 31.653889 10.876793 32.086494 13.511051 c
32.086494 13.542049 32.098808 13.571778 32.120728 13.593697 c
32.142647 13.615616 32.172375 13.627930 32.203373 13.627930 c
32.234371 13.627930 32.264099 13.615616 32.286018 13.593697 c
32.307938 13.571778 32.320251 13.542049 32.320251 13.511051 c
31.877625 10.844832 30.942228 8.284389 29.561926 5.960727 c
28.304371 3.595767 26.256998 1.746924 23.776463 0.736274 c
23.121326 0.512781 22.434935 0.394439 21.742783 0.385640 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.905273 20.918457 cm
/Pattern cs
/P95 scn
21.742783 0.455791 m
19.405222 0.455791 16.915718 1.729762 14.426213 4.266017 c
13.216525 5.500317 11.733797 6.433180 10.097514 6.989435 c
8.461231 7.545690 6.717159 7.709779 5.005839 7.468477 c
3.325155 7.267959 1.691953 6.777604 0.178773 6.019188 c
0.150875 6.003690 0.117962 5.999908 0.087276 6.008675 c
0.056590 6.017443 0.030642 6.038041 0.015143 6.065938 c
-0.000356 6.093837 -0.004137 6.126750 0.004630 6.157437 c
0.013398 6.188123 0.033996 6.214070 0.061895 6.229569 c
1.599806 7.002923 3.261132 7.501321 4.970775 7.702234 c
6.729447 7.943205 8.520159 7.766105 10.197559 7.185310 c
11.874960 6.604515 13.391783 5.636391 14.624907 4.359519 c
17.780615 1.145371 20.866198 -0.000034 23.788151 0.934991 c
28.159391 2.349216 31.326786 8.380127 32.086494 13.335758 c
32.086494 13.366756 32.098808 13.396485 32.120728 13.418404 c
32.142647 13.440323 32.172375 13.452637 32.203373 13.452637 c
32.234371 13.452637 32.264099 13.440323 32.286018 13.418404 c
32.307938 13.396485 32.320251 13.366756 32.320251 13.335758 c
31.548855 8.321688 28.311333 2.197274 23.858276 0.759674 c
23.173836 0.546185 22.459642 0.443593 21.742783 0.455791 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.905273 21.150391 cm
/Pattern cs
/P96 scn
21.836288 0.397375 m
19.498726 0.397375 16.997536 1.659657 14.484655 4.172538 c
13.271007 5.418059 11.778468 6.356995 10.130301 6.911804 c
8.482134 7.466612 6.725627 7.621376 5.005839 7.363312 c
3.321096 7.139623 1.687889 6.625537 0.178773 5.843895 c
0.150875 5.828396 0.117962 5.824614 0.087276 5.833382 c
0.056590 5.842149 0.030642 5.862749 0.015143 5.890647 c
-0.000356 5.918545 -0.004137 5.951457 0.004630 5.982143 c
0.013398 6.012830 0.033996 6.038777 0.061895 6.054276 c
1.597556 6.844136 3.258378 7.362153 4.970775 7.585379 c
6.726008 7.852491 8.519640 7.697046 10.202748 7.131944 c
11.885856 6.566843 13.409881 5.608391 14.648284 4.336168 c
17.839056 1.145395 20.948013 -0.000010 23.869967 0.946703 c
28.171082 2.349241 31.315104 8.286648 32.051434 13.160465 c
32.051434 13.191463 32.063747 13.221192 32.085667 13.243111 c
32.107586 13.265030 32.137314 13.277344 32.168312 13.277344 c
32.199310 13.277344 32.229042 13.265030 32.250957 13.243111 c
32.272877 13.221192 32.285191 13.191463 32.285191 13.160465 c
31.842079 10.562009 30.918554 8.068898 29.561930 5.808833 c
28.310352 3.530188 26.312944 1.751499 23.905031 0.771384 c
23.238949 0.540448 22.541065 0.414278 21.836288 0.397375 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.905273 21.337402 cm
/Pattern cs
/P97 scn
21.906412 0.397367 m
19.568850 0.397367 17.044283 1.647964 14.519716 4.149157 c
13.295097 5.385187 11.792483 6.310230 10.137393 6.847016 c
8.482304 7.383802 6.722794 7.516744 5.005839 7.234738 c
3.316988 6.994851 1.683250 6.460819 0.178773 5.656883 c
0.150875 5.641384 0.117962 5.637602 0.087276 5.646370 c
0.056590 5.655138 0.030642 5.675737 0.015143 5.703635 c
-0.000356 5.731534 -0.004137 5.764445 0.004630 5.795132 c
0.013398 5.825818 0.033996 5.851765 0.061895 5.867264 c
1.588846 6.681519 3.246048 7.223373 4.959088 7.468495 c
6.721471 7.765923 8.529569 7.634420 10.230370 7.085118 c
11.931170 6.535817 13.474618 5.584881 14.730097 4.312785 c
17.944244 1.133700 21.064890 -0.000016 23.998531 0.958385 c
26.320961 1.894467 28.248981 3.603678 29.456736 5.797138 c
30.794605 7.998506 31.702824 10.433640 32.133247 12.973454 c
32.133247 13.004452 32.145561 13.034181 32.167480 13.056099 c
32.189396 13.078018 32.219128 13.090332 32.250126 13.090332 c
32.281124 13.090332 32.310852 13.078018 32.332771 13.056099 c
32.354691 13.034181 32.367004 13.004452 32.367004 12.973454 c
31.548857 7.994445 28.439898 2.208979 24.068657 0.783066 c
23.374435 0.534912 22.643618 0.404551 21.906412 0.397367 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.905273 21.524414 cm
/Pattern cs
/P98 scn
21.964851 0.385673 m
19.627291 0.385673 17.091036 1.636270 14.543092 4.125773 c
13.309204 5.355403 11.797022 6.269391 10.134743 6.790252 c
8.472464 7.311113 6.709101 7.423489 4.994151 7.117853 c
3.306117 6.849859 1.677049 6.292338 0.178773 5.469872 c
0.150875 5.454372 0.117962 5.450591 0.087276 5.459358 c
0.056590 5.468126 0.030642 5.488726 0.015143 5.516623 c
-0.000356 5.544522 -0.004137 5.577433 0.004630 5.608120 c
0.013398 5.638806 0.033996 5.664753 0.061895 5.680253 c
1.586823 6.510709 3.243465 7.072148 4.959088 7.339922 c
6.713036 7.658636 8.518093 7.547612 10.219761 7.016349 c
11.921428 6.485087 13.469028 5.549408 14.730097 4.289402 c
17.979309 1.122005 21.123329 -0.000023 24.080345 0.958378 c
28.299644 2.337540 31.326788 7.971064 32.133247 12.786442 c
32.133247 12.817440 32.145561 12.847169 32.167480 12.869087 c
32.189396 12.891006 32.219128 12.903320 32.250126 12.903320 c
32.281124 12.903320 32.310852 12.891006 32.332771 12.869087 c
32.354691 12.847169 32.367004 12.817440 32.367004 12.786442 c
31.548857 7.889249 28.463274 2.197284 24.185535 0.783059 c
23.472988 0.526414 22.722183 0.392059 21.964851 0.385673 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.905273 21.711426 cm
/Pattern cs
/P99 scn
22.023293 0.385793 m
19.685730 0.385793 17.137789 1.624701 14.578157 4.090830 c
13.336240 5.312482 11.816379 6.214466 10.149076 6.719339 c
8.481773 7.224212 6.716848 7.316888 5.005839 6.989406 c
3.308053 6.712534 1.673363 6.134653 0.178773 5.282985 c
0.150875 5.267486 0.117962 5.263704 0.087276 5.272471 c
0.056590 5.281239 0.030642 5.301839 0.015143 5.329737 c
-0.000356 5.357635 -0.004137 5.390546 0.004630 5.421233 c
0.013398 5.451920 0.033996 5.477867 0.061895 5.493366 c
1.582916 6.346755 3.239511 6.931900 4.959088 7.223161 c
6.705499 7.553762 8.505930 7.457547 10.207160 6.942701 c
11.908389 6.427855 13.460053 5.509623 14.730099 4.266147 c
18.002686 1.110437 21.158396 0.000095 24.080347 0.958496 c
28.241209 2.325970 31.233288 7.842617 32.051434 12.646307 c
32.051434 12.677305 32.063747 12.707032 32.085667 12.728951 c
32.107586 12.750870 32.137314 12.763184 32.168312 12.763184 c
32.199310 12.763184 32.229042 12.750870 32.250957 12.728951 c
32.272877 12.707032 32.285191 12.677305 32.285191 12.646307 c
31.854225 10.121176 30.954348 7.699039 29.632059 5.505054 c
28.424810 3.341509 26.503813 1.664252 24.197226 0.759803 c
23.497194 0.519877 22.763256 0.393609 22.023293 0.385793 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.914062 21.886719 cm
/Pattern cs
/P100 scn
22.083347 0.397382 m
19.687346 0.397382 17.174467 1.566162 14.603149 4.079041 c
13.346830 5.290621 11.815023 6.178918 10.139460 6.667539 c
8.463896 7.156160 6.694722 7.230482 4.984080 6.884115 c
3.290548 6.572931 1.662231 5.976145 0.168702 5.119256 c
0.143904 5.103756 0.113963 5.098745 0.085469 5.105320 c
0.056974 5.111896 0.032259 5.129521 0.016760 5.154320 c
0.001261 5.179118 -0.003752 5.209057 0.002824 5.237552 c
0.009400 5.266047 0.027025 5.290761 0.051824 5.306261 c
1.563758 6.193612 3.222305 6.803197 4.949017 7.106184 c
6.687825 7.455771 8.485525 7.377814 10.187543 6.879017 c
11.889562 6.380220 13.444968 5.475507 14.720028 4.242670 c
18.039366 1.098649 21.206762 -0.000005 24.163778 0.970084 c
28.441517 2.384309 31.246592 7.900955 32.041363 12.424137 c
32.041363 12.455135 32.053677 12.484864 32.075596 12.506783 c
32.097515 12.528702 32.127243 12.541016 32.158241 12.541016 c
32.189236 12.541016 32.218967 12.528702 32.240887 12.506783 c
32.262806 12.484864 32.275120 12.455135 32.275120 12.424137 c
31.468660 7.842515 28.605146 2.244054 24.233904 0.736326 c
23.539068 0.512081 22.813473 0.397722 22.083347 0.397382 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.914062 22.073730 cm
/Pattern cs
/P101 scn
22.141787 0.397374 m
19.745787 0.397374 17.232906 1.566154 14.626524 4.055658 c
13.362199 5.259250 11.822190 6.134676 10.141232 6.605344 c
8.460272 7.076013 6.689582 7.127582 4.984080 6.755542 c
3.286217 6.428605 1.657307 5.811833 0.168702 4.932244 c
0.156423 4.924570 0.142752 4.919389 0.128471 4.916998 c
0.114190 4.914607 0.099577 4.915053 0.085468 4.918309 c
0.071359 4.921565 0.058030 4.927566 0.046241 4.935974 c
0.034452 4.944381 0.024434 4.955029 0.016760 4.967308 c
0.009086 4.979587 0.003905 4.993257 0.001514 5.007537 c
-0.000877 5.021819 -0.000432 5.036431 0.002824 5.050540 c
0.006080 5.064649 0.012082 5.077980 0.020490 5.089769 c
0.028897 5.101558 0.039544 5.111574 0.051823 5.119249 c
1.556118 6.028253 3.210551 6.661529 4.937328 6.989299 c
6.680983 7.366924 8.490576 7.311908 10.208069 6.829054 c
11.925562 6.346200 13.498719 5.450193 14.790153 4.219287 c
18.132866 1.086953 21.335329 -0.000011 24.292345 0.981765 c
28.499956 2.372615 31.305029 7.784070 32.076424 12.237125 c
32.076424 12.268124 32.088737 12.297853 32.110657 12.319771 c
32.132576 12.341690 32.162308 12.354004 32.193306 12.354004 c
32.224304 12.354004 32.254032 12.341690 32.275948 12.319771 c
32.297867 12.297853 32.310181 12.268124 32.310181 12.237125 c
31.492035 7.725631 28.663586 2.220674 24.362471 0.806448 c
23.649693 0.549205 22.899443 0.411000 22.141787 0.397374 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.909180 22.249023 cm
/Pattern cs
/P102 scn
22.218529 0.397397 m
19.810839 0.397397 17.286272 1.566179 14.668203 4.032307 c
13.394749 5.227015 11.847292 6.090581 10.161880 6.547090 c
8.476467 7.003598 6.704716 7.039068 5.002384 6.650377 c
3.299740 6.302794 1.670401 5.662131 0.187006 4.756950 c
0.162208 4.738351 0.131036 4.730365 0.100350 4.734749 c
0.069663 4.739132 0.041975 4.755528 0.023376 4.780326 c
0.004778 4.805125 -0.003209 4.836296 0.001175 4.866982 c
0.005559 4.897669 0.021953 4.925356 0.046751 4.943955 c
1.556846 5.862125 3.213270 6.514415 4.943945 6.872443 c
6.682333 7.274921 8.493168 7.242296 10.215928 6.777456 c
11.938689 6.312617 13.520158 5.429924 14.820144 4.207624 c
18.209610 1.086978 21.423758 0.000011 24.392462 0.993476 c
28.553322 2.372638 31.253204 7.550337 32.083038 12.061832 c
32.083038 12.092831 32.095352 12.122560 32.117271 12.144478 c
32.139191 12.166397 32.168922 12.178711 32.199921 12.178711 c
32.230919 12.178711 32.260643 12.166397 32.282562 12.144478 c
32.304482 12.122560 32.316795 12.092831 32.316795 12.061832 c
31.475273 7.480210 28.716951 2.232384 24.462587 0.818159 c
23.742575 0.556260 22.984510 0.414123 22.218529 0.397397 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.909180 22.436035 cm
/Pattern cs
/P103 scn
22.288654 0.397391 m
19.880966 0.397391 17.333023 1.566173 14.691577 4.008925 c
13.406672 5.194407 11.848801 6.044102 10.156416 6.482491 c
8.464031 6.920879 6.689557 6.934383 4.990696 6.521803 c
3.288905 6.153011 1.663723 5.492657 0.187006 4.569939 c
0.162208 4.551341 0.131036 4.543354 0.100350 4.547738 c
0.069663 4.552122 0.041975 4.568517 0.023376 4.593315 c
0.004778 4.618114 -0.003209 4.649285 0.001175 4.679972 c
0.005559 4.710658 0.021953 4.738345 0.046751 4.756944 c
1.552988 5.698019 3.209359 6.374009 4.943945 6.755561 c
6.679930 7.177301 8.493263 7.163233 10.222496 6.714611 c
11.951729 6.265989 13.543199 5.396735 14.855208 4.184241 c
18.268049 1.063596 21.505571 0.000006 24.485964 0.993470 c
28.576698 2.360944 31.253204 7.445140 32.083038 11.874821 c
32.083038 11.905819 32.095352 11.935548 32.117271 11.957466 c
32.139191 11.979385 32.168922 11.991699 32.199921 11.991699 c
32.230919 11.991699 32.260643 11.979385 32.282562 11.957466 c
32.304482 11.935548 32.316795 11.905819 32.316795 11.874821 c
31.463585 7.375014 28.740326 2.209002 24.556089 0.818153 c
23.829315 0.551400 23.062748 0.409150 22.288654 0.397391 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.909180 22.611328 cm
/Pattern cs
/P104 scn
22.358782 0.397414 m
19.939405 0.397414 17.391462 1.566195 14.726642 3.985571 c
13.434768 5.169723 11.867514 6.012349 10.167248 6.436905 c
8.466982 6.861461 6.687585 6.854494 4.990696 6.416636 c
3.284958 6.024347 1.659824 5.340289 0.187006 4.394645 c
0.162208 4.376047 0.131036 4.368060 0.100350 4.372444 c
0.069663 4.376828 0.041975 4.393223 0.023376 4.418022 c
0.004778 4.442820 -0.003209 4.473991 0.001175 4.504678 c
0.005559 4.535364 0.021953 4.563051 0.046751 4.581650 c
1.546434 5.540154 3.198632 6.235816 4.932257 6.638705 c
6.665450 7.085115 8.482599 7.092327 10.219281 6.659687 c
11.955963 6.227047 13.557364 5.368211 14.878582 4.160891 c
18.384926 1.063621 21.599075 0.000029 24.579466 1.005180 c
28.600073 2.349278 31.241516 7.351662 32.083038 11.699528 c
32.083038 11.730526 32.095352 11.760255 32.117271 11.782173 c
32.139191 11.804092 32.168922 11.816406 32.199921 11.816406 c
32.230919 11.816406 32.260643 11.804092 32.282562 11.782173 c
32.304482 11.760255 32.316795 11.730526 32.316795 11.699528 c
31.868303 9.358438 30.984190 7.122384 29.710415 5.107603 c
28.553368 3.152436 26.770147 1.645142 24.649591 0.829864 c
23.915464 0.558910 23.141167 0.412740 22.358782 0.397414 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.909180 22.845215 cm
/Pattern cs
/P105 scn
22.428909 0.350719 m
20.009533 0.350719 17.438215 1.519502 14.761705 3.915503 c
13.457255 5.089202 11.879907 5.917926 10.173309 6.326203 c
8.466712 6.734479 6.685092 6.709337 4.990696 6.253065 c
3.282792 5.837856 1.658252 5.134283 0.187006 4.172634 c
0.174727 4.163424 0.160755 4.156725 0.145886 4.152916 c
0.131018 4.149107 0.115544 4.148262 0.100350 4.150433 c
0.069663 4.154816 0.041975 4.171212 0.023376 4.196010 c
0.004778 4.220809 -0.003209 4.251980 0.001175 4.282666 c
0.005559 4.313353 0.021953 4.341040 0.046751 4.359639 c
1.542667 5.340939 3.194793 6.060285 4.932257 6.486820 c
6.659334 6.955659 8.475919 6.987480 10.218356 6.579415 c
11.960794 6.171350 13.574345 5.336219 14.913647 4.149258 c
18.419989 1.063676 21.680889 0.000085 24.672968 1.016924 c
28.892267 2.431149 31.299955 7.562098 32.083038 11.535954 c
32.083038 11.566952 32.095352 11.596681 32.117271 11.618599 c
32.139191 11.640518 32.168922 11.652832 32.199921 11.652832 c
32.230919 11.652832 32.260643 11.640518 32.282562 11.618599 c
32.304482 11.596681 32.316795 11.566952 32.316795 11.535954 c
31.522024 7.515347 29.067585 2.302584 24.743095 0.853295 c
24.005175 0.557723 23.222956 0.387847 22.428909 0.350719 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.909180 22.856445 cm
/Pattern cs
/P106 scn
22.499035 0.514339 m
20.079659 0.514339 17.496653 1.683121 14.785080 4.020683 c
13.468211 5.180094 11.882250 5.991698 10.171591 6.381598 c
8.460931 6.771497 6.679915 6.727310 4.990696 6.253057 c
3.278944 5.814240 1.654470 5.086982 0.187006 4.102500 c
0.174727 4.093291 0.160755 4.086589 0.145886 4.082780 c
0.131018 4.078970 0.115544 4.078128 0.100350 4.080298 c
0.069663 4.084682 0.041975 4.101076 0.023376 4.125874 c
0.004778 4.150672 -0.003209 4.181844 0.001175 4.212530 c
0.005559 4.243217 0.021953 4.270906 0.046751 4.289505 c
1.539573 5.289739 3.191627 6.028814 4.932257 6.475124 c
6.662226 6.954542 8.484905 6.991743 10.232996 6.583311 c
11.981086 6.174879 13.598584 5.333898 14.937022 4.137562 c
18.443365 1.051979 21.774391 0.000076 24.766470 1.016916 c
28.915644 2.431141 31.299955 7.468588 32.083038 11.348942 c
32.083038 11.379940 32.095352 11.409669 32.117271 11.431587 c
32.139191 11.453506 32.168922 11.465820 32.199921 11.465820 c
32.230919 11.465820 32.260643 11.453506 32.282562 11.431587 c
32.304482 11.409669 32.316795 11.379940 32.316795 11.348942 c
31.522024 7.398461 29.090961 2.290888 24.848286 0.829911 c
24.087694 0.597113 23.294098 0.490510 22.499035 0.514339 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.909180 23.102051 cm
/Pattern cs
/P107 scn
22.580849 0.444210 m
20.149784 0.444210 17.543404 1.612991 14.820144 3.950553 c
13.494612 5.106314 11.898530 5.908395 10.180101 6.282321 c
8.461674 6.656248 6.676621 6.589896 4.990696 6.089422 c
3.276845 5.627890 1.652921 4.881120 0.187006 3.880424 c
0.162208 3.861826 0.131036 3.853842 0.100350 3.858226 c
0.069663 3.862609 0.041975 3.879003 0.023376 3.903801 c
0.004778 3.928599 -0.003209 3.959771 0.001175 3.990457 c
0.005559 4.021143 0.021953 4.048831 0.046751 4.067430 c
1.531666 5.087618 3.179995 5.846560 4.920569 6.311489 c
6.645611 6.819930 8.471019 6.885131 10.227940 6.501060 c
11.984861 6.116989 13.616551 5.296051 14.972085 4.114182 c
18.536867 1.040288 21.879581 0.000073 24.871662 1.016912 c
28.939020 2.407762 31.264891 7.164701 32.083038 11.161932 c
32.083038 11.192930 32.095352 11.222657 32.117271 11.244576 c
32.139191 11.266495 32.168922 11.278809 32.199921 11.278809 c
32.230919 11.278809 32.260643 11.266495 32.282562 11.244576 c
32.304482 11.222657 32.316795 11.192930 32.316795 11.161932 c
31.475273 7.106262 29.102648 2.267509 24.953476 0.841596 c
24.189220 0.581994 23.387985 0.447797 22.580849 0.444210 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.909180 23.324219 cm
/Pattern cs
/P108 scn
22.650978 0.385793 m
20.219913 0.385793 17.601843 1.554573 14.843520 3.892136 c
13.507793 5.037756 11.903542 5.826215 10.180556 6.183893 c
8.457571 6.541571 6.672047 6.456802 4.990696 5.937503 c
3.273175 5.452050 1.649367 4.681629 0.187006 3.658379 c
0.174727 3.649169 0.160755 3.642470 0.145886 3.638661 c
0.131018 3.634851 0.115544 3.634009 0.100350 3.636179 c
0.069663 3.640563 0.041975 3.656956 0.023376 3.681755 c
0.004778 3.706553 -0.003209 3.737725 0.001175 3.768411 c
0.005559 3.799098 0.021953 3.826785 0.046751 3.845384 c
1.529535 4.891079 3.176905 5.681185 4.920569 6.182946 c
6.639614 6.716166 8.465946 6.803922 10.228196 6.437979 c
11.990446 6.072036 13.630840 5.264392 14.995461 4.090829 c
18.618681 1.028622 22.008148 0.000093 24.976852 1.028621 c
28.962395 2.396095 31.264891 7.071220 32.083038 10.986637 c
32.083038 11.017635 32.095352 11.047364 32.117271 11.069283 c
32.139191 11.091202 32.168922 11.103516 32.199921 11.103516 c
32.230919 11.103516 32.260643 11.091202 32.282562 11.069283 c
32.304482 11.047364 32.316795 11.017635 32.316795 10.986637 c
31.475273 7.001093 29.137712 2.255842 25.046978 0.853304 c
24.280434 0.563310 23.470312 0.405238 22.650978 0.385793 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.909180 23.476074 cm
/Pattern cs
/P109 scn
22.732794 0.432570 m
20.290043 0.432570 17.660282 1.601351 14.878584 3.938912 c
13.529250 5.072555 11.914289 5.845219 10.184925 6.184551 c
8.455561 6.523882 6.668368 6.418780 4.990696 5.879089 c
3.269058 5.376485 1.644895 4.586138 0.187006 3.541527 c
0.174727 3.532318 0.160755 3.525618 0.145886 3.521809 c
0.131018 3.518000 0.115544 3.517155 0.100350 3.519326 c
0.069663 3.523709 0.041975 3.540104 0.023376 3.564903 c
0.004778 3.589701 -0.003209 3.620873 0.001175 3.651559 c
0.005559 3.682246 0.021953 3.709933 0.046752 3.728532 c
1.530533 4.772526 3.177608 5.562490 4.920569 6.066094 c
6.635909 6.619708 8.463897 6.727806 10.232529 6.380214 c
12.001161 6.032621 13.652282 5.240769 15.030526 4.079167 c
18.688812 1.016961 22.043215 0.000121 25.082045 1.028648 c
28.997461 2.384434 31.264896 6.966054 32.094730 10.811344 c
32.094730 10.842342 32.107044 10.872071 32.128963 10.893990 c
32.150883 10.915909 32.180611 10.928223 32.211609 10.928223 c
32.242607 10.928223 32.272339 10.915909 32.294258 10.893990 c
32.316174 10.872071 32.328487 10.842342 32.328487 10.811344 c
31.486967 6.907616 29.172779 2.244181 25.163858 0.865020 c
24.384949 0.580106 23.562176 0.433746 22.732794 0.432570 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.909180 23.709961 cm
/Pattern cs
/P110 scn
22.814606 0.374061 m
20.371855 0.374061 17.718721 1.542842 14.913647 3.880404 c
13.554532 5.009103 11.929250 5.771317 10.192391 6.094549 c
8.455534 6.417780 6.664861 6.291280 4.990696 5.727078 c
3.267196 5.201528 1.643614 4.391714 0.187006 3.331078 c
0.162208 3.312479 0.131036 3.304492 0.100350 3.308877 c
0.069663 3.313260 0.041975 3.329655 0.023376 3.354454 c
0.004778 3.379252 -0.003209 3.410421 0.001175 3.441108 c
0.005559 3.471794 0.021953 3.499484 0.046751 3.518083 c
1.520577 4.593865 3.163961 5.415556 4.908882 5.949147 c
6.620020 6.526627 8.450420 6.656877 10.226089 6.327519 c
12.001759 5.998161 13.663689 5.220139 15.053901 4.067409 c
18.758938 0.981827 22.171776 0.000051 25.245670 1.005203 c
28.506571 2.173985 31.089579 5.680326 32.141479 10.600895 c
32.141479 10.631893 32.153793 10.661622 32.175713 10.683540 c
32.197632 10.705460 32.227360 10.717773 32.258358 10.717773 c
32.289356 10.717773 32.319080 10.705460 32.341000 10.683540 c
32.362919 10.661622 32.375233 10.631893 32.375233 10.600895 c
31.288267 5.645264 28.658510 1.986978 25.362547 0.829885 c
24.546112 0.531266 23.683935 0.377025 22.814606 0.374061 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.919922 23.838623 cm
/Pattern cs
/P111 scn
22.896423 0.420684 m
20.441982 0.420684 17.777163 1.589465 14.937024 3.927027 c
13.566123 5.042985 11.932641 5.789872 10.191787 6.096721 c
8.450932 6.403569 6.660531 6.260188 4.990696 5.680199 c
3.260010 5.139421 1.635131 4.305239 0.187005 3.214072 c
0.162207 3.195473 0.131036 3.187487 0.100350 3.191871 c
0.069663 3.196255 0.041975 3.212648 0.023376 3.237446 c
0.004778 3.262245 -0.003209 3.293416 0.001175 3.324102 c
0.005559 3.354789 0.021953 3.382478 0.046752 3.401077 c
1.515707 4.501607 3.159359 5.347139 4.908881 5.902268 c
6.617151 6.498795 8.449783 6.647634 10.231925 6.334582 c
12.014066 6.021531 13.686260 5.257032 15.088964 4.114032 c
18.829065 1.040137 22.265282 -0.000076 25.233986 1.040138 c
28.424759 2.208920 30.961014 5.715262 32.024605 10.460514 c
32.024605 10.491512 32.036919 10.521241 32.058838 10.543159 c
32.080757 10.565079 32.110485 10.577393 32.141483 10.577393 c
32.172482 10.577393 32.202206 10.565079 32.224125 10.543159 c
32.246044 10.521241 32.258358 10.491512 32.258358 10.460514 c
31.171392 5.598384 28.576700 2.010227 25.304113 0.876510 c
24.532763 0.590727 23.718859 0.436637 22.896423 0.420684 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.909180 24.039307 cm
/Pattern cs
/P112 scn
22.989923 0.397366 m
20.523796 0.397366 17.835598 1.566145 14.972085 3.845268 c
13.588558 4.955554 11.943274 5.692251 10.193631 5.984882 c
8.443989 6.277512 6.648525 6.116286 4.979008 5.516625 c
3.249367 4.954596 1.628647 4.100753 0.187006 2.992058 c
0.174727 2.982849 0.160754 2.976147 0.145886 2.972338 c
0.131017 2.968529 0.115544 2.967686 0.100349 2.969857 c
0.085155 2.972028 0.070537 2.977169 0.057330 2.984989 c
0.044123 2.992809 0.032585 3.003156 0.023376 3.015434 c
0.014167 3.027713 0.007466 3.041685 0.003657 3.056553 c
-0.000152 3.071422 -0.000996 3.086896 0.001175 3.102091 c
0.003345 3.117285 0.008488 3.131902 0.016308 3.145109 c
0.024128 3.158316 0.034472 3.169854 0.046751 3.179063 c
1.511595 4.300239 3.155478 5.165648 4.908881 5.738694 c
6.611560 6.359035 8.445622 6.528981 10.233296 6.232059 c
12.020970 5.935137 13.701620 5.181419 15.112339 4.043961 c
18.922565 1.005130 22.382158 -0.000021 25.397614 1.063570 c
28.413069 2.127161 31.031136 5.610127 32.083038 10.296940 c
32.083038 10.327938 32.095352 10.357667 32.117271 10.379585 c
32.139191 10.401505 32.168922 10.413818 32.199921 10.413818 c
32.230919 10.413818 32.260643 10.401505 32.282562 10.379585 c
32.304482 10.357667 32.316795 10.327938 32.316795 10.296940 c
31.241516 5.528313 28.681889 2.010283 25.479427 0.888253 c
24.683353 0.584921 23.841558 0.418933 22.989923 0.397366 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.909180 24.154053 cm
/Pattern cs
/P113 scn
23.071737 0.455830 m
20.605610 0.455830 17.905725 1.624611 14.995461 3.880358 c
13.598980 4.976549 11.942534 5.692606 10.187284 5.958863 c
8.432035 6.225120 6.637753 6.032510 4.979008 5.399773 c
3.246680 4.816916 1.626203 3.943440 0.187006 2.816768 c
0.174727 2.807559 0.160754 2.800857 0.145886 2.797048 c
0.131017 2.793238 0.115544 2.792396 0.100349 2.794566 c
0.085155 2.796737 0.070537 2.801878 0.057330 2.809699 c
0.044123 2.817519 0.032585 2.827863 0.023376 2.840141 c
0.014167 2.852420 0.007466 2.866394 0.003657 2.881263 c
-0.000152 2.896131 -0.000996 2.911603 0.001175 2.926798 c
0.003345 2.941992 0.008488 2.956611 0.016308 2.969818 c
0.024128 2.983026 0.034472 2.994563 0.046751 3.003772 c
1.505245 4.142387 3.144957 5.027436 4.897193 5.621841 c
6.597448 6.265200 8.435415 6.456938 10.231848 6.178357 c
12.028280 5.899777 13.721854 5.160388 15.147404 4.032299 c
19.004381 0.993468 22.487347 0.000005 25.514490 1.063596 c
28.541634 2.127187 31.019447 5.458213 32.083038 10.121649 c
32.083038 10.152647 32.095352 10.182374 32.117271 10.204292 c
32.139191 10.226212 32.168922 10.238525 32.199921 10.238525 c
32.230919 10.238525 32.260643 10.226212 32.282562 10.204292 c
32.304482 10.182374 32.316795 10.152647 32.316795 10.121649 c
31.218142 5.376398 28.810453 2.010306 25.584618 0.888277 c
24.777508 0.602930 23.927803 0.456703 23.071737 0.455830 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.862305 24.352783 cm
/Pattern cs
/P114 scn
23.211992 0.420819 m
20.745865 0.420819 18.010916 1.589601 15.030524 3.845348 c
13.622749 4.933855 11.957699 5.640310 10.196689 5.896270 c
8.435678 6.152231 6.638411 5.949021 4.979008 5.306324 c
3.243948 4.697480 1.623921 3.800537 0.187006 2.653191 c
0.174727 2.643982 0.160755 2.637282 0.145886 2.633473 c
0.131018 2.629664 0.115544 2.628819 0.100350 2.630990 c
0.069663 2.635374 0.041975 2.651769 0.023376 2.676567 c
0.004778 2.701365 -0.003209 2.732537 0.001175 2.763224 c
0.005559 2.793910 0.021953 2.821597 0.046751 2.840196 c
1.505115 3.996329 3.143834 4.904536 4.897194 5.528394 c
6.600306 6.190708 8.445829 6.401012 10.254289 6.138858 c
12.062748 5.876703 13.772587 5.151011 15.217528 4.032353 c
19.132944 0.993523 22.650978 0.000057 25.666433 1.075336 c
28.681889 2.150615 31.066200 5.399827 32.129791 9.958073 c
32.129791 9.989071 32.142105 10.018800 32.164024 10.040718 c
32.185944 10.062637 32.215672 10.074951 32.246670 10.074951 c
32.277668 10.074951 32.307396 10.062637 32.329315 10.040718 c
32.351234 10.018800 32.363548 9.989071 32.363548 9.958073 c
31.276581 5.282948 28.857204 2.010362 25.748247 0.900020 c
24.935505 0.599832 24.078232 0.437859 23.211992 0.420819 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.933594 24.528076 cm
/Pattern cs
/P115 scn
23.233864 0.420843 m
20.756048 0.420843 18.009411 1.589624 15.052395 3.833684 c
13.629839 4.913052 11.951821 5.605302 10.182007 5.842916 c
8.412192 6.080530 6.611007 5.855395 4.954128 5.189470 c
3.223323 4.560397 1.611130 3.643660 0.185501 2.477898 c
0.160092 2.465348 0.131247 2.461544 0.103453 2.467080 c
0.075659 2.472615 0.050472 2.487180 0.031810 2.508508 c
0.013148 2.529837 0.002056 2.556734 0.000259 2.585017 c
-0.001538 2.613300 0.006059 2.641384 0.021872 2.664903 c
1.481122 3.840697 3.123733 4.768614 4.884002 5.411539 c
6.576426 6.091544 8.416579 6.319806 10.223855 6.073918 c
12.031130 5.828031 13.743416 5.116443 15.192650 4.009001 c
19.166506 0.981858 22.707911 0.000084 25.711678 1.075362 c
28.715445 2.150641 30.994568 5.318036 32.058159 9.782780 c
32.058159 9.813778 32.070473 9.843507 32.092392 9.865425 c
32.114311 9.887344 32.144043 9.899658 32.175041 9.899658 c
32.206039 9.899658 32.235764 9.887344 32.257683 9.865425 c
32.279602 9.843507 32.291916 9.813778 32.291916 9.782780 c
31.204950 5.224534 28.785574 1.987010 25.781807 0.900043 c
24.967121 0.592289 24.104691 0.430089 23.233864 0.420843 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.919922 24.691895 cm
/Pattern cs
/P116 scn
23.352245 0.420656 m
20.862741 0.420656 18.092730 1.589437 15.077275 3.821808 c
13.647375 4.893189 11.962780 5.573125 10.189797 5.794492 c
8.416814 6.015859 6.616751 5.771002 4.967319 5.084092 c
3.232037 4.435908 1.616578 3.503761 0.187005 2.325768 c
0.164497 2.308887 0.136657 2.300692 0.108593 2.302686 c
0.080530 2.304680 0.054127 2.316730 0.034233 2.336625 c
0.014339 2.356518 0.002289 2.382920 0.000294 2.410984 c
-0.001700 2.439048 0.006495 2.466889 0.023376 2.489397 c
1.473011 3.690498 3.112146 4.642381 4.873817 5.306159 c
6.562040 6.007345 8.403852 6.256470 10.217690 6.028972 c
12.031527 5.801473 13.754766 5.105208 15.217529 4.008813 c
19.249825 0.993359 22.826292 -0.000106 25.830059 1.086861 c
28.833826 2.173827 30.996071 5.177593 32.071350 9.618961 c
32.071350 9.649960 32.083664 9.679688 32.105583 9.701607 c
32.127502 9.723526 32.157234 9.735840 32.188232 9.735840 c
32.219231 9.735840 32.248955 9.723526 32.270874 9.701607 c
32.292793 9.679688 32.305107 9.649960 32.305107 9.618961 c
31.206453 5.095779 28.939020 1.998510 25.911879 0.911544 c
25.093508 0.601008 24.227434 0.434913 23.352245 0.420656 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.919922 24.878906 cm
/Pattern cs
/P117 scn
23.445747 0.408960 m
20.956244 0.408960 18.162857 1.577741 15.112339 3.798425 c
13.668725 4.862907 11.971577 5.530892 10.189696 5.735942 c
8.407816 5.940991 6.603300 5.675959 4.955631 4.967206 c
3.221544 4.297863 1.610220 3.346077 0.187005 2.150444 c
0.164497 2.133564 0.136657 2.125368 0.108593 2.127362 c
0.080530 2.129357 0.054127 2.141407 0.034233 2.161301 c
0.014339 2.181195 0.002289 2.207597 0.000294 2.235661 c
-0.001700 2.263724 0.006495 2.291565 0.023376 2.314073 c
1.469816 3.534460 3.108941 4.506087 4.873817 5.189275 c
6.555789 5.915051 8.398137 6.188999 10.218510 5.984002 c
12.038882 5.779005 13.774162 5.102172 15.252592 4.020494 c
19.390076 0.958288 22.896421 -0.000113 25.946939 1.075166 c
28.997458 2.150444 31.007759 5.084084 32.071350 9.431950 c
32.071350 9.462948 32.083664 9.492677 32.105583 9.514595 c
32.127502 9.536514 32.157234 9.548828 32.188232 9.548828 c
32.219231 9.548828 32.248955 9.536514 32.270874 9.514595 c
32.292793 9.492677 32.305107 9.462948 32.305107 9.431950 c
31.218142 5.002269 28.985771 1.963439 26.028755 0.899849 c
25.202568 0.588258 24.328640 0.422172 23.445747 0.408960 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.919922 25.030762 cm
/Pattern cs
/P118 scn
23.550938 0.420703 m
21.061434 0.420703 18.244673 1.589484 15.135715 3.798480 c
13.679448 4.848734 11.974123 5.500422 10.188576 5.689021 c
8.403028 5.877621 6.599183 5.596592 4.955631 4.873758 c
3.220746 4.175041 1.610383 3.200141 0.187005 1.986870 c
0.164497 1.969989 0.136657 1.961794 0.108593 1.963788 c
0.080530 1.965783 0.054127 1.977833 0.034233 1.997726 c
0.014339 2.017621 0.002289 2.044023 0.000294 2.072086 c
-0.001700 2.100150 0.006495 2.127991 0.023376 2.150499 c
1.462431 3.389970 3.097673 4.381386 4.862129 5.084139 c
6.541731 5.828032 8.386858 6.119111 10.213898 5.928410 c
12.040937 5.737709 13.786185 5.071876 15.275968 3.997172 c
19.390078 1.016781 23.060049 -0.000058 26.063816 1.086908 c
28.880579 2.115436 31.007759 5.025700 32.071350 9.268375 c
32.071350 9.299374 32.083664 9.329103 32.105583 9.351021 c
32.127502 9.372940 32.157234 9.385254 32.188232 9.385254 c
32.219231 9.385254 32.248955 9.372940 32.270874 9.351021 c
32.292793 9.329103 32.305107 9.299374 32.305107 9.268375 c
31.218142 4.920510 29.032520 1.951806 26.145630 0.899903 c
25.314985 0.591201 24.437052 0.429060 23.550938 0.420703 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.919922 25.194336 cm
/Pattern cs
/P119 scn
23.667818 0.420788 m
21.166626 0.420788 18.314800 1.589570 15.170779 3.798566 c
13.700544 4.837056 11.984263 5.472949 10.192312 5.643123 c
8.400361 5.813296 6.595063 5.511832 4.955632 4.768655 c
3.216734 4.052269 1.606110 3.057471 0.187005 1.823326 c
0.164497 1.806445 0.136657 1.798249 0.108593 1.800244 c
0.080530 1.802238 0.054127 1.814288 0.034233 1.834182 c
0.014339 1.854076 0.002289 1.880478 0.000294 1.908542 c
-0.001700 1.936605 0.006495 1.964447 0.023376 1.986954 c
1.459203 3.245753 3.094442 4.256918 4.862130 4.979036 c
6.538301 5.742785 8.385641 6.053002 10.219345 5.878656 c
12.053049 5.704311 13.808825 5.051516 15.311033 3.985571 c
19.530334 0.970116 23.188620 0.000026 26.180700 1.098680 c
28.962399 2.115520 31.007767 4.885532 32.024605 9.116520 c
32.024605 9.147518 32.036919 9.177247 32.058838 9.199165 c
32.080757 9.221085 32.110485 9.233398 32.141483 9.233398 c
32.172482 9.233398 32.202206 9.221085 32.224125 9.199165 c
32.246044 9.177247 32.258358 9.147518 32.258358 9.116520 c
31.159704 4.803717 29.079275 1.963579 26.215761 0.935052 c
25.403522 0.614369 24.540854 0.440252 23.667818 0.420788 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.919922 25.357910 cm
/Pattern cs
/P120 scn
23.773006 0.420845 m
21.271814 0.420845 18.396614 1.589625 15.205842 3.798622 c
13.720363 4.827587 11.990993 5.448959 10.190330 5.600723 c
8.389668 5.752488 6.580692 5.429336 4.943944 4.663519 c
3.208166 3.922526 1.602200 2.908440 0.187005 1.659752 c
0.164497 1.642872 0.136657 1.634676 0.108593 1.636670 c
0.080530 1.638665 0.054127 1.650715 0.034233 1.670609 c
0.014339 1.690503 0.002289 1.716905 0.000294 1.744968 c
-0.001700 1.773032 0.006495 1.800873 0.023376 1.823381 c
1.459469 3.099885 3.093752 4.134143 4.862129 4.885588 c
6.539257 5.675888 8.395469 6.008884 10.242724 5.850841 c
12.089980 5.692798 13.862651 5.049330 15.381158 3.985626 c
19.682272 0.970171 23.363934 0.000084 26.344326 1.098738 c
29.055897 2.103889 31.019449 4.815461 32.118103 8.952946 c
32.118103 8.983944 32.130417 9.013673 32.152336 9.035591 c
32.174255 9.057510 32.203987 9.069824 32.234982 9.069824 c
32.265980 9.069824 32.295708 9.057510 32.317627 9.035591 c
32.339546 9.013673 32.351860 8.983944 32.351860 8.952946 c
31.264893 4.721959 29.219526 1.940261 26.426140 0.923421 c
25.580009 0.594811 24.680702 0.424458 23.773006 0.420845 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.919922 25.519043 cm
/Pattern cs
/P121 scn
23.889885 0.421796 m
21.377007 0.421796 18.478430 1.590578 15.229218 3.787887 c
13.736313 4.809609 12.000086 5.419008 10.196108 5.554460 c
8.392130 5.689912 6.584370 5.346615 4.955631 4.559281 c
3.211415 3.802269 1.601089 2.768186 0.187005 1.497075 c
0.164497 1.480194 0.136657 1.471998 0.108593 1.473992 c
0.080530 1.475987 0.054127 1.488037 0.034233 1.507931 c
0.014339 1.527825 0.002289 1.554227 0.000294 1.582291 c
-0.001700 1.610354 0.006495 1.638196 0.023376 1.660703 c
1.453222 2.954891 3.083381 4.008771 4.850442 4.781348 c
6.518518 5.586777 8.369703 5.937445 10.216786 5.797888 c
12.063870 5.658330 13.841349 5.033497 15.369471 3.986577 c
19.729023 0.971122 23.457434 0.001035 26.414450 1.099689 c
29.055895 2.081465 31.019447 4.746285 32.071350 8.801956 c
32.075954 8.817305 32.083538 8.831595 32.093666 8.844013 c
32.103794 8.856432 32.116268 8.866735 32.130379 8.874331 c
32.144485 8.881928 32.159958 8.886671 32.175900 8.888291 c
32.191841 8.889911 32.207943 8.888374 32.223293 8.883770 c
32.238640 8.879166 32.252934 8.871583 32.265350 8.861455 c
32.277767 8.851327 32.288071 8.838853 32.295670 8.824743 c
32.303265 8.810635 32.308010 8.795169 32.309628 8.779226 c
32.311249 8.763284 32.309711 8.747178 32.305107 8.731830 c
31.218142 4.606032 29.219524 1.894459 26.461203 0.877620 c
25.637838 0.574657 24.767218 0.420321 23.889885 0.421796 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.978516 25.611572 cm
/Pattern cs
/P122 scn
24.006763 0.436498 m
21.482197 0.436498 18.560246 1.605278 15.264282 3.802586 c
13.751554 4.809388 12.000764 5.400897 10.187389 5.517822 c
8.374014 5.634748 6.561758 5.272985 4.932257 4.468793 c
3.193881 3.688889 1.591796 2.635301 0.187005 1.348147 c
0.164497 1.331267 0.136656 1.323071 0.108592 1.325066 c
0.080529 1.327060 0.054127 1.339110 0.034233 1.359004 c
0.014339 1.378898 0.002289 1.405300 0.000294 1.433364 c
-0.001700 1.461427 0.006494 1.489269 0.023375 1.511776 c
1.448315 2.818903 3.074202 3.888356 4.838754 4.679172 c
6.499241 5.492259 8.343339 5.857439 10.188383 5.738536 c
12.033428 5.619633 13.815398 5.020774 15.357785 4.001279 c
19.799152 0.974136 23.539249 0.004048 26.484579 1.102703 c
29.067585 2.061103 30.984386 4.679173 32.036289 8.653029 c
32.045589 8.684028 32.066822 8.710062 32.095314 8.725405 c
32.123810 8.740748 32.157234 8.744143 32.188232 8.734843 c
32.219231 8.725544 32.245266 8.704311 32.260609 8.675817 c
32.275951 8.647323 32.279346 8.613899 32.270046 8.582901 c
31.194767 4.538918 29.219526 1.874097 26.566393 0.880633 c
25.746637 0.580597 24.879679 0.430166 24.006763 0.436498 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.919922 25.834717 cm
/Pattern cs
/P123 scn
24.135328 0.433381 m
21.610762 0.433381 18.653746 1.602161 15.287656 3.799469 c
13.764741 4.792542 12.007676 5.368144 10.192363 5.468653 c
8.377049 5.569162 6.567183 5.191051 4.943944 4.372172 c
3.195230 3.574526 1.588454 2.496763 0.187005 1.181400 c
0.164497 1.164519 0.136657 1.156323 0.108593 1.158318 c
0.080530 1.160312 0.054127 1.172362 0.034233 1.192256 c
0.014339 1.212151 0.002289 1.238553 0.000294 1.266616 c
-0.001700 1.294680 0.006495 1.322521 0.023376 1.345028 c
1.442843 2.677531 3.069096 3.770911 4.838754 4.582553 c
6.501329 5.419511 8.354616 5.804983 10.213033 5.700370 c
12.071449 5.595757 13.869768 5.004731 15.427911 3.986474 c
19.951094 0.971019 23.726254 0.000932 26.648207 1.099586 c
29.196150 2.057986 31.019447 4.547490 32.071350 8.486282 c
32.075954 8.501631 32.083538 8.515922 32.093666 8.528339 c
32.103794 8.540757 32.116268 8.551061 32.130379 8.558658 c
32.144485 8.566255 32.159958 8.570997 32.175900 8.572618 c
32.191841 8.574237 32.207943 8.572701 32.223293 8.568096 c
32.238640 8.563492 32.252934 8.555909 32.265350 8.545781 c
32.277767 8.535653 32.288071 8.523179 32.295670 8.509069 c
32.303265 8.494961 32.308010 8.479495 32.309628 8.463552 c
32.311249 8.447610 32.309711 8.431504 32.305107 8.416156 c
31.218142 4.407236 29.348091 1.870981 26.730021 0.889205 c
25.899963 0.581019 25.020725 0.426559 24.135328 0.433381 c
h
f
n
Q

endstream
endobj

248 0 obj
  162927
endobj

249 0 obj
  << /Length 250 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.305882 exch 0.011765 exch 0.443137 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.836601 mul 0.305882 add exch dup 0.000000 sub 0.235294 mul 0.011765 add exch dup 0.000000 sub 1.673203 mul 0.443137 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.784314 mul 0.431373 add exch dup 0.150000 sub 0.196078 mul 0.047059 add exch dup 0.150000 sub 1.176471 mul 0.694118 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 1.307189 mul 0.447059 add exch dup 0.170000 sub 0.130719 mul 0.050980 add exch dup 0.170000 sub 2.091503 mul 0.717647 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.784315 mul 0.486275 add exch dup 0.200000 sub 0.196078 mul 0.054902 add exch dup 0.200000 sub 0.980392 mul 0.780392 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.747549 mul 0.501961 add exch dup 0.220000 sub 0.159314 mul 0.058824 add exch dup 0.220000 sub -0.367647 mul 0.800000 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.588235 mul 0.262745 add exch dup 0.540000 sub 1.830065 mul 0.109804 add exch dup 0.540000 sub 0.653595 mul 0.682353 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.392157 mul 0.227451 add exch dup 0.600000 sub 1.568629 mul 0.219608 add exch dup 0.600000 sub 0.392157 mul 0.721569 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.372549 mul 0.223529 add exch dup 0.610000 sub 3.267974 mul 0.235294 add exch dup 0.610000 sub 1.045752 mul 0.725490 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.008404 mul 0.141176 add exch dup 0.670000 sub 2.296919 mul 0.431373 add exch dup 0.670000 sub 0.728291 mul 0.788235 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -0.862745 mul 0.070588 add exch dup 0.740000 sub 1.960784 mul 0.592157 add exch dup 0.740000 sub 0.627451 mul 0.839216 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.522876 mul 0.027451 add exch dup 0.790000 sub 1.176472 mul 0.690196 add exch dup 0.790000 sub 0.392157 mul 0.870588 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub 0.196079 mul 0.011765 add exch dup 0.820000 sub -1.568629 mul 0.725490 add exch dup 0.820000 sub -1.176472 mul 0.882353 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub 0.392156 mul 0.015686 add exch dup 0.840000 sub -2.875814 mul 0.694118 add exch dup 0.840000 sub -1.960782 mul 0.858824 add exch } if dup 0.870000 gt { exch pop exch pop exch pop dup 0.870000 sub 0.490196 mul 0.027451 add exch dup 0.870000 sub -3.235293 mul 0.607843 add exch dup 0.870000 sub -2.254901 mul 0.800000 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.176471 mul 0.047059 add exch dup 0.910000 sub -5.315906 mul 0.478431 add exch dup 0.910000 sub -3.398694 mul 0.709804 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.152941 exch 0.000000 exch 0.403922 exch } if pop }
endstream
endobj

250 0 obj
  3068
endobj

251 0 obj
  << /Length 252 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.301961 exch 0.015686 exch 0.443137 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.810457 mul 0.301961 add exch dup 0.000000 sub 0.287582 mul 0.015686 add exch dup 0.000000 sub 1.673203 mul 0.443137 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.980392 mul 0.423529 add exch dup 0.150000 sub 0.196079 mul 0.058824 add exch dup 0.150000 sub 1.176471 mul 0.694118 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 1.307189 mul 0.443137 add exch dup 0.170000 sub 0.130719 mul 0.062745 add exch dup 0.170000 sub 2.091503 mul 0.717647 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.784314 mul 0.482353 add exch dup 0.200000 sub 0.196078 mul 0.066667 add exch dup 0.200000 sub 0.980392 mul 0.780392 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.698529 mul 0.498039 add exch dup 0.220000 sub 0.171569 mul 0.070588 add exch dup 0.220000 sub -0.355392 mul 0.800000 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.588235 mul 0.274510 add exch dup 0.540000 sub 1.830065 mul 0.125490 add exch dup 0.540000 sub 0.653595 mul 0.686275 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.392157 mul 0.239216 add exch dup 0.600000 sub 1.176472 mul 0.235294 add exch dup 0.600000 sub 0.392157 mul 0.725490 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.437908 mul 0.235294 add exch dup 0.610000 sub 3.137255 mul 0.247059 add exch dup 0.610000 sub 0.980392 mul 0.729412 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.008404 mul 0.149020 add exch dup 0.670000 sub 2.296919 mul 0.435294 add exch dup 0.670000 sub 0.672269 mul 0.788235 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -0.941176 mul 0.078431 add exch dup 0.740000 sub 1.960784 mul 0.596078 add exch dup 0.740000 sub 0.627451 mul 0.835294 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.522876 mul 0.031373 add exch dup 0.790000 sub 1.176472 mul 0.694118 add exch dup 0.790000 sub 0.392157 mul 0.866667 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub 0.196079 mul 0.015686 add exch dup 0.820000 sub -1.568629 mul 0.729412 add exch dup 0.820000 sub -0.980393 mul 0.878431 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub 0.392156 mul 0.019608 add exch dup 0.840000 sub -2.875814 mul 0.698039 add exch dup 0.840000 sub -1.960782 mul 0.858824 add exch } if dup 0.870000 gt { exch pop exch pop exch pop dup 0.870000 sub 0.392157 mul 0.031373 add exch dup 0.870000 sub -3.235293 mul 0.611765 add exch dup 0.870000 sub -2.254901 mul 0.800000 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.220044 mul 0.047059 add exch dup 0.910000 sub -5.359478 mul 0.482353 add exch dup 0.910000 sub -3.398694 mul 0.709804 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.156863 exch 0.000000 exch 0.403922 exch } if pop }
endstream
endobj

252 0 obj
  3068
endobj

253 0 obj
  << /Length 254 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.298039 exch 0.019608 exch 0.443137 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.784314 mul 0.298039 add exch dup 0.000000 sub 0.313726 mul 0.019608 add exch dup 0.000000 sub 1.699346 mul 0.443137 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 1.568629 mul 0.415686 add exch dup 0.150000 sub 0.392157 mul 0.066667 add exch dup 0.150000 sub 1.960786 mul 0.698039 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 1.176470 mul 0.431373 add exch dup 0.160000 sub 0.196078 mul 0.070588 add exch dup 0.160000 sub 1.568627 mul 0.717647 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.784314 mul 0.478431 add exch dup 0.200000 sub 0.196078 mul 0.078431 add exch dup 0.200000 sub 0.980392 mul 0.780392 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.649510 mul 0.494118 add exch dup 0.220000 sub 0.183824 mul 0.082353 add exch dup 0.220000 sub -0.343137 mul 0.800000 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.522876 mul 0.286275 add exch dup 0.540000 sub 1.830065 mul 0.141176 add exch dup 0.540000 sub 0.653595 mul 0.690196 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.392157 mul 0.254902 add exch dup 0.600000 sub 1.176472 mul 0.250980 add exch dup 0.600000 sub 0.392157 mul 0.729412 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.437909 mul 0.250980 add exch dup 0.610000 sub 2.875817 mul 0.262745 add exch dup 0.610000 sub 0.849673 mul 0.733333 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.120448 mul 0.164706 add exch dup 0.670000 sub 2.296919 mul 0.435294 add exch dup 0.670000 sub 0.728291 mul 0.784314 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -0.941176 mul 0.086275 add exch dup 0.740000 sub 1.960784 mul 0.596078 add exch dup 0.740000 sub 0.549019 mul 0.835294 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.653595 mul 0.039216 add exch dup 0.790000 sub 1.176472 mul 0.694118 add exch dup 0.790000 sub 0.392157 mul 0.862745 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub 0.196079 mul 0.019608 add exch dup 0.820000 sub -1.568629 mul 0.729412 add exch dup 0.820000 sub -1.176472 mul 0.874510 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub 0.261438 mul 0.023529 add exch dup 0.840000 sub -2.875814 mul 0.698039 add exch dup 0.840000 sub -1.960782 mul 0.850980 add exch } if dup 0.870000 gt { exch pop exch pop exch pop dup 0.870000 sub 0.392157 mul 0.031373 add exch dup 0.870000 sub -3.137254 mul 0.611765 add exch dup 0.870000 sub -2.156862 mul 0.792157 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.263617 mul 0.047059 add exch dup 0.910000 sub -5.403052 mul 0.486275 add exch dup 0.910000 sub -3.311548 mul 0.705882 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.160784 exch 0.000000 exch 0.407843 exch } if pop }
endstream
endobj

254 0 obj
  3068
endobj

255 0 obj
  << /Length 256 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.290196 exch 0.023529 exch 0.443137 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.784314 mul 0.290196 add exch dup 0.000000 sub 0.366013 mul 0.023529 add exch dup 0.000000 sub 1.699346 mul 0.443137 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.980392 mul 0.407843 add exch dup 0.150000 sub 0.196078 mul 0.078431 add exch dup 0.150000 sub 1.176471 mul 0.698039 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 1.568627 mul 0.427451 add exch dup 0.170000 sub 0.130719 mul 0.082353 add exch dup 0.170000 sub 2.091503 mul 0.721569 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.784314 mul 0.474510 add exch dup 0.200000 sub 0.196078 mul 0.086275 add exch dup 0.200000 sub 0.980392 mul 0.784314 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.600490 mul 0.490196 add exch dup 0.220000 sub 0.196078 mul 0.090196 add exch dup 0.220000 sub -0.330882 mul 0.803922 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.522876 mul 0.298039 add exch dup 0.540000 sub 1.830065 mul 0.152941 add exch dup 0.540000 sub 0.653595 mul 0.698039 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.392157 mul 0.266667 add exch dup 0.600000 sub 1.176472 mul 0.262745 add exch dup 0.600000 sub 0.392157 mul 0.737255 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.437909 mul 0.262745 add exch dup 0.610000 sub 2.679738 mul 0.274510 add exch dup 0.610000 sub 0.784314 mul 0.741176 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -1.372549 mul 0.176471 add exch dup 0.670000 sub 2.679739 mul 0.435294 add exch dup 0.670000 sub 0.784314 mul 0.788235 add exch } if dup 0.730000 gt { exch pop exch pop exch pop dup 0.730000 sub -0.849673 mul 0.094118 add exch dup 0.730000 sub 1.633987 mul 0.596078 add exch dup 0.730000 sub 0.457516 mul 0.835294 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.653595 mul 0.043137 add exch dup 0.790000 sub 1.176472 mul 0.694118 add exch dup 0.790000 sub 0.392157 mul 0.862745 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub 0.196079 mul 0.023529 add exch dup 0.820000 sub -1.568629 mul 0.729412 add exch dup 0.820000 sub -1.176472 mul 0.874510 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub 0.261438 mul 0.027451 add exch dup 0.840000 sub -2.875814 mul 0.698039 add exch dup 0.840000 sub -1.960782 mul 0.850980 add exch } if dup 0.870000 gt { exch pop exch pop exch pop dup 0.870000 sub 0.294117 mul 0.035294 add exch dup 0.870000 sub -3.039215 mul 0.611765 add exch dup 0.870000 sub -2.156862 mul 0.792157 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.307190 mul 0.047059 add exch dup 0.910000 sub -5.446625 mul 0.490196 add exch dup 0.910000 sub -3.311548 mul 0.705882 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.000000 exch 0.407843 exch } if pop }
endstream
endobj

256 0 obj
  3068
endobj

257 0 obj
  << /Length 258 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.254902 exch 0.043137 exch 0.447059 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.679739 mul 0.254902 add exch dup 0.000000 sub 0.705882 mul 0.043137 add exch dup 0.000000 sub 1.725490 mul 0.447059 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 1.960786 mul 0.356863 add exch dup 0.150000 sub 0.392157 mul 0.149020 add exch dup 0.150000 sub 1.960786 mul 0.705882 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 1.568627 mul 0.376471 add exch dup 0.160000 sub 0.392157 mul 0.152941 add exch dup 0.160000 sub 1.470588 mul 0.725490 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.439216 add exch dup 0.200000 sub 0.196078 mul 0.168627 add exch dup 0.200000 sub 0.980392 mul 0.784314 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.232843 mul 0.458824 add exch dup 0.220000 sub 0.281863 mul 0.172549 add exch dup 0.220000 sub -0.208333 mul 0.803922 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.336134 mul 0.384314 add exch dup 0.540000 sub 1.512605 mul 0.262745 add exch dup 0.540000 sub 0.504202 mul 0.737255 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -2.091505 mul 0.360784 add exch dup 0.610000 sub 2.483662 mul 0.368627 add exch dup 0.610000 sub 0.522876 mul 0.772549 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -1.715685 mul 0.298039 add exch dup 0.640000 sub 2.009803 mul 0.443137 add exch dup 0.640000 sub 0.490196 mul 0.788235 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -1.437910 mul 0.160784 add exch dup 0.720000 sub 1.633988 mul 0.603922 add exch dup 0.720000 sub 0.392157 mul 0.827451 add exch } if dup 0.780000 gt { exch pop exch pop exch pop dup 0.780000 sub -0.784313 mul 0.074510 add exch dup 0.780000 sub 0.882352 mul 0.701961 add exch dup 0.780000 sub 0.196078 mul 0.850980 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub 0.000000 mul 0.043137 add exch dup 0.820000 sub -1.568629 mul 0.737255 add exch dup 0.820000 sub -1.176472 mul 0.858824 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub -0.098039 mul 0.043137 add exch dup 0.840000 sub -2.156862 mul 0.705882 add exch dup 0.840000 sub -1.568627 mul 0.835294 add exch } if dup 0.880000 gt { exch pop exch pop exch pop dup 0.880000 sub 0.000000 mul 0.039216 add exch dup 0.880000 sub -3.137251 mul 0.619608 add exch dup 0.880000 sub -2.222220 mul 0.772549 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.655774 mul 0.039216 add exch dup 0.910000 sub -5.838782 mul 0.525490 add exch dup 0.910000 sub -3.224402 mul 0.705882 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.188235 exch 0.000000 exch 0.415686 exch } if pop }
endstream
endobj

258 0 obj
  2874
endobj

259 0 obj
  << /Length 260 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.047059 exch 0.160784 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.130719 mul 0.047059 add exch dup 0.000000 sub 2.431373 mul 0.160784 add exch dup 0.000000 sub 1.882353 mul 0.466667 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 3.529415 mul 0.066667 add exch dup 0.150000 sub 1.568629 mul 0.525490 add exch dup 0.150000 sub 1.176472 mul 0.749020 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 3.267974 mul 0.101961 add exch dup 0.160000 sub 1.176471 mul 0.541176 add exch dup 0.160000 sub 1.045752 mul 0.760784 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 3.137256 mul 0.200000 add exch dup 0.190000 sub 1.176471 mul 0.576471 add exch dup 0.190000 sub 0.784314 mul 0.792157 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960783 mul 0.262745 add exch dup 0.210000 sub 0.784313 mul 0.600000 add exch dup 0.210000 sub 0.784313 mul 0.807843 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.776961 mul 0.282353 add exch dup 0.220000 sub 0.747549 mul 0.607843 add exch dup 0.220000 sub 0.392157 mul 0.815686 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.392157 mul 0.850980 add exch dup 0.540000 sub 0.448179 mul 0.847059 add exch dup 0.540000 sub 0.224090 mul 0.941176 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -5.000004 mul 0.878431 add exch dup 0.610000 sub -0.686275 mul 0.878431 add exch dup 0.610000 sub -1.372550 mul 0.956863 add exch } if dup 0.650000 gt { exch pop exch pop exch pop dup 0.650000 sub -3.725490 mul 0.678431 add exch dup 0.650000 sub -0.457516 mul 0.850980 add exch dup 0.650000 sub -0.980392 mul 0.901961 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -3.215685 mul 0.454902 add exch dup 0.710000 sub -0.392157 mul 0.823529 add exch dup 0.710000 sub -0.862745 mul 0.843137 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -2.450979 mul 0.294118 add exch dup 0.760000 sub -0.392157 mul 0.803922 add exch dup 0.760000 sub -0.686274 mul 0.800000 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.196078 add exch dup 0.800000 sub -0.196079 mul 0.788235 add exch dup 0.800000 sub -0.392157 mul 0.772549 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -1.045750 mul 0.160784 add exch dup 0.820000 sub -0.522875 mul 0.784314 add exch dup 0.820000 sub -0.522875 mul 0.764706 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -2.156865 mul 0.129412 add exch dup 0.850000 sub -1.078432 mul 0.768627 add exch dup 0.850000 sub -1.078432 mul 0.749020 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -1.764702 mul 0.043137 add exch dup 0.890000 sub -0.980390 mul 0.725490 add exch dup 0.890000 sub -0.784312 mul 0.705882 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.442267 mul 0.007843 add exch dup 0.910000 sub -7.843140 mul 0.705882 add exch dup 0.910000 sub -2.570807 mul 0.690196 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.317647 exch 0.000000 exch 0.458824 exch } if pop }
endstream
endobj

260 0 obj
  3272
endobj

261 0 obj
  << /Length 262 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.129412 exch 0.113725 exch 0.458824 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.339869 mul 0.129412 add exch dup 0.000000 sub 1.751634 mul 0.113725 add exch dup 0.000000 sub 1.830065 mul 0.458824 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 3.006536 mul 0.180392 add exch dup 0.150000 sub 1.045752 mul 0.376471 add exch dup 0.150000 sub 1.437908 mul 0.733333 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 3.137255 mul 0.270588 add exch dup 0.180000 sub 0.980392 mul 0.407843 add exch dup 0.180000 sub 1.372549 mul 0.776471 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.333333 add exch dup 0.200000 sub 0.392157 mul 0.427451 add exch dup 0.200000 sub 0.392157 mul 0.803922 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.980392 mul 0.352941 add exch dup 0.220000 sub 0.563726 mul 0.435294 add exch dup 0.220000 sub 0.159314 mul 0.811765 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.112045 mul 0.666667 add exch dup 0.540000 sub 0.896359 mul 0.615686 add exch dup 0.540000 sub 0.280112 mul 0.862745 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -4.313729 mul 0.674510 add exch dup 0.610000 sub 0.784314 mul 0.678431 add exch dup 0.610000 sub -0.784314 mul 0.882353 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -3.193278 mul 0.631373 add exch dup 0.620000 sub 0.504202 mul 0.686275 add exch dup 0.620000 sub -0.392157 mul 0.874510 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -2.679739 mul 0.407843 add exch dup 0.690000 sub 0.392157 mul 0.721569 add exch dup 0.690000 sub -0.392157 mul 0.847059 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -2.450979 mul 0.247059 add exch dup 0.750000 sub 0.490196 mul 0.745098 add exch dup 0.750000 sub -0.392157 mul 0.823529 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.149020 add exch dup 0.790000 sub 0.130719 mul 0.764706 add exch dup 0.790000 sub -0.130719 mul 0.807843 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.784313 mul 0.113725 add exch dup 0.820000 sub -1.045750 mul 0.768627 add exch dup 0.820000 sub -0.915032 mul 0.803922 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -1.176472 mul 0.090196 add exch dup 0.850000 sub -1.725492 mul 0.737255 add exch dup 0.850000 sub -1.411766 mul 0.776471 add exch } if dup 0.900000 gt { exch pop exch pop exch pop dup 0.900000 sub -1.176465 mul 0.031373 add exch dup 0.900000 sub -1.568619 mul 0.650980 add exch dup 0.900000 sub -1.176465 mul 0.705882 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.745099 mul 0.019608 add exch dup 0.910000 sub -7.058826 mul 0.635294 add exch dup 0.910000 sub -2.788672 mul 0.694118 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.266667 exch 0.000000 exch 0.443137 exch } if pop }
endstream
endobj

262 0 obj
  3073
endobj

263 0 obj
  << /Length 264 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.247059 exch 0.047059 exch 0.447059 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.679739 mul 0.247059 add exch dup 0.000000 sub 0.732026 mul 0.047059 add exch dup 0.000000 sub 1.725490 mul 0.447059 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 1.176471 mul 0.349020 add exch dup 0.150000 sub 0.392157 mul 0.156863 add exch dup 0.150000 sub 1.176471 mul 0.705882 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 2.091503 mul 0.372549 add exch dup 0.170000 sub 0.522876 mul 0.164706 add exch dup 0.170000 sub 1.830065 mul 0.729412 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.435294 add exch dup 0.200000 sub 0.196078 mul 0.180392 add exch dup 0.200000 sub 0.980392 mul 0.784314 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.183824 mul 0.454902 add exch dup 0.220000 sub 0.294118 mul 0.184314 add exch dup 0.220000 sub -0.196078 mul 0.803922 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.336134 mul 0.396078 add exch dup 0.540000 sub 1.456583 mul 0.278431 add exch dup 0.540000 sub 0.504202 mul 0.741176 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.960786 mul 0.372549 add exch dup 0.610000 sub 2.222224 mul 0.380392 add exch dup 0.610000 sub 0.522876 mul 0.776471 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -1.813725 mul 0.313726 add exch dup 0.640000 sub 2.009803 mul 0.447059 add exch dup 0.640000 sub 0.441176 mul 0.792157 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -1.503269 mul 0.168627 add exch dup 0.720000 sub 1.633988 mul 0.607843 add exch dup 0.720000 sub 0.326798 mul 0.827451 add exch } if dup 0.780000 gt { exch pop exch pop exch pop dup 0.780000 sub -0.784313 mul 0.078431 add exch dup 0.780000 sub 0.882352 mul 0.705882 add exch dup 0.780000 sub 0.196078 mul 0.847059 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub 0.000000 mul 0.047059 add exch dup 0.820000 sub -1.568629 mul 0.741176 add exch dup 0.820000 sub -1.176472 mul 0.854902 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub -0.098039 mul 0.047059 add exch dup 0.840000 sub -2.156862 mul 0.709804 add exch dup 0.840000 sub -1.470587 mul 0.831373 add exch } if dup 0.880000 gt { exch pop exch pop exch pop dup 0.880000 sub -0.130719 mul 0.043137 add exch dup 0.880000 sub -3.137251 mul 0.623529 add exch dup 0.880000 sub -2.222220 mul 0.772549 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.699347 mul 0.039216 add exch dup 0.910000 sub -5.882355 mul 0.529412 add exch dup 0.910000 sub -3.224402 mul 0.705882 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.192157 exch 0.000000 exch 0.415686 exch } if pop }
endstream
endobj

264 0 obj
  2875
endobj

265 0 obj
  << /Length 266 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.231373 exch 0.054902 exch 0.447059 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.627451 mul 0.231373 add exch dup 0.000000 sub 0.888889 mul 0.054902 add exch dup 0.000000 sub 1.751634 mul 0.447059 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 1.568628 mul 0.325490 add exch dup 0.150000 sub 0.392157 mul 0.188235 add exch dup 0.150000 sub 1.372549 mul 0.709804 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 2.091503 mul 0.356863 add exch dup 0.170000 sub 0.653595 mul 0.196078 add exch dup 0.170000 sub 1.699346 mul 0.737255 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.419608 add exch dup 0.200000 sub 0.196078 mul 0.215686 add exch dup 0.200000 sub 0.784314 mul 0.788235 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.024510 mul 0.439216 add exch dup 0.220000 sub 0.330882 mul 0.219608 add exch dup 0.220000 sub -0.147059 mul 0.803922 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.224090 mul 0.431373 add exch dup 0.540000 sub 1.400560 mul 0.325490 add exch dup 0.540000 sub 0.504202 mul 0.756863 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -2.222224 mul 0.415686 add exch dup 0.610000 sub 1.960786 mul 0.423529 add exch dup 0.610000 sub 0.392157 mul 0.792157 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -2.009803 mul 0.349020 add exch dup 0.640000 sub 1.764705 mul 0.482353 add exch dup 0.640000 sub 0.294117 mul 0.803922 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -1.633988 mul 0.188235 add exch dup 0.720000 sub 1.503269 mul 0.623529 add exch dup 0.720000 sub 0.261438 mul 0.827451 add exch } if dup 0.780000 gt { exch pop exch pop exch pop dup 0.780000 sub -0.882353 mul 0.090196 add exch dup 0.780000 sub 0.784313 mul 0.713726 add exch dup 0.780000 sub 0.098039 mul 0.843137 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.196079 mul 0.054902 add exch dup 0.820000 sub -1.568629 mul 0.745098 add exch dup 0.820000 sub -1.176472 mul 0.847059 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub -0.196078 mul 0.050980 add exch dup 0.840000 sub -2.156862 mul 0.713726 add exch dup 0.840000 sub -1.568627 mul 0.823529 add exch } if dup 0.880000 gt { exch pop exch pop exch pop dup 0.880000 sub -0.261438 mul 0.043137 add exch dup 0.880000 sub -2.745095 mul 0.627451 add exch dup 0.880000 sub -1.960782 mul 0.760784 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.873639 mul 0.035294 add exch dup 0.910000 sub -6.056647 mul 0.545098 add exch dup 0.910000 sub -3.137256 mul 0.701961 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.203922 exch 0.000000 exch 0.419608 exch } if pop }
endstream
endobj

266 0 obj
  2876
endobj

267 0 obj
  << /Length 268 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.286275 exch 0.023529 exch 0.443137 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.784314 mul 0.286275 add exch dup 0.000000 sub 0.418301 mul 0.023529 add exch dup 0.000000 sub 1.699346 mul 0.443137 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.980392 mul 0.403922 add exch dup 0.150000 sub 0.196078 mul 0.086275 add exch dup 0.150000 sub 1.176471 mul 0.698039 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 1.568627 mul 0.423529 add exch dup 0.170000 sub 0.261438 mul 0.090196 add exch dup 0.170000 sub 2.091503 mul 0.721569 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.784314 mul 0.470588 add exch dup 0.200000 sub 0.196078 mul 0.098039 add exch dup 0.200000 sub 0.980392 mul 0.784314 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.551471 mul 0.486275 add exch dup 0.220000 sub 0.208333 mul 0.101961 add exch dup 0.220000 sub -0.318627 mul 0.803922 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.522876 mul 0.309804 add exch dup 0.540000 sub 1.830065 mul 0.168627 add exch dup 0.540000 sub 0.653595 mul 0.701961 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub 0.000000 mul 0.278431 add exch dup 0.600000 sub 0.784314 mul 0.278431 add exch dup 0.600000 sub 0.392157 mul 0.741176 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.725490 mul 0.278431 add exch dup 0.610000 sub 2.980391 mul 0.286275 add exch dup 0.610000 sub 0.862745 mul 0.745098 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -1.288516 mul 0.192157 add exch dup 0.660000 sub 2.296919 mul 0.435294 add exch dup 0.660000 sub 0.616247 mul 0.788235 add exch } if dup 0.730000 gt { exch pop exch pop exch pop dup 0.730000 sub -0.980392 mul 0.101961 add exch dup 0.730000 sub 1.633987 mul 0.596078 add exch dup 0.730000 sub 0.457516 mul 0.831373 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.653595 mul 0.043137 add exch dup 0.790000 sub 1.176472 mul 0.694118 add exch dup 0.790000 sub 0.392157 mul 0.858824 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub 0.196079 mul 0.023529 add exch dup 0.820000 sub -1.568629 mul 0.729412 add exch dup 0.820000 sub -1.176472 mul 0.870588 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub 0.196078 mul 0.027451 add exch dup 0.840000 sub -2.156862 mul 0.698039 add exch dup 0.840000 sub -1.470587 mul 0.847059 add exch } if dup 0.880000 gt { exch pop exch pop exch pop dup 0.880000 sub 0.261438 mul 0.035294 add exch dup 0.880000 sub -3.790847 mul 0.611765 add exch dup 0.880000 sub -2.745095 mul 0.788235 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.394336 mul 0.043137 add exch dup 0.910000 sub -5.533771 mul 0.498039 add exch dup 0.910000 sub -3.311548 mul 0.705882 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.000000 exch 0.407843 exch } if pop }
endstream
endobj

268 0 obj
  3067
endobj

269 0 obj
  << /Length 270 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.082353 exch 0.141176 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.209150 mul 0.082353 add exch dup 0.000000 sub 2.169935 mul 0.141176 add exch dup 0.000000 sub 1.882353 mul 0.462745 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 1.568630 mul 0.113725 add exch dup 0.150000 sub 0.784314 mul 0.466667 add exch dup 0.150000 sub 0.784314 mul 0.745098 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 4.901958 mul 0.129412 add exch dup 0.160000 sub 1.764706 mul 0.474510 add exch dup 0.160000 sub 1.764705 mul 0.752941 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 2.091505 mul 0.227451 add exch dup 0.180000 sub 0.653595 mul 0.509804 add exch dup 0.180000 sub 0.653595 mul 0.788235 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960783 mul 0.290196 add exch dup 0.210000 sub 0.784313 mul 0.529412 add exch dup 0.210000 sub 0.784313 mul 0.807843 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.458333 mul 0.309804 add exch dup 0.220000 sub 0.674020 mul 0.537255 add exch dup 0.220000 sub 0.294118 mul 0.815686 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.280112 mul 0.776471 add exch dup 0.540000 sub 0.672269 mul 0.752941 add exch dup 0.540000 sub 0.280112 mul 0.909804 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -4.575168 mul 0.796078 add exch dup 0.610000 sub -0.130719 mul 0.800000 add exch dup 0.610000 sub -1.045753 mul 0.929412 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -3.725490 mul 0.658824 add exch dup 0.640000 sub -0.130719 mul 0.796078 add exch dup 0.640000 sub -0.849673 mul 0.898039 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -2.679738 mul 0.435294 add exch dup 0.700000 sub -0.130719 mul 0.788235 add exch dup 0.700000 sub -0.588235 mul 0.847059 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -2.450979 mul 0.274510 add exch dup 0.760000 sub -0.098039 mul 0.780392 add exch dup 0.760000 sub -0.588235 mul 0.811765 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.176471 add exch dup 0.800000 sub 0.000000 mul 0.776471 add exch dup 0.800000 sub -0.392157 mul 0.788235 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -1.045751 mul 0.141176 add exch dup 0.820000 sub -0.784313 mul 0.776471 add exch dup 0.820000 sub -0.784313 mul 0.780392 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -1.725492 mul 0.109804 add exch dup 0.850000 sub -1.333335 mul 0.752941 add exch dup 0.850000 sub -1.176472 mul 0.756863 add exch } if dup 0.900000 gt { exch pop exch pop exch pop dup 0.900000 sub -1.176465 mul 0.023529 add exch dup 0.900000 sub -0.784310 mul 0.686275 add exch dup 0.900000 sub -0.784310 mul 0.698039 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.180829 mul 0.011765 add exch dup 0.910000 sub -7.538129 mul 0.678431 add exch dup 0.910000 sub -2.614380 mul 0.690196 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.298039 exch 0.000000 exch 0.454902 exch } if pop }
endstream
endobj

270 0 obj
  3271
endobj

271 0 obj
  << /Length 272 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.227451 exch 0.058824 exch 0.447059 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.601307 mul 0.227451 add exch dup 0.000000 sub 0.915033 mul 0.058824 add exch dup 0.000000 sub 1.777778 mul 0.447059 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 1.764706 mul 0.317647 add exch dup 0.150000 sub 0.588235 mul 0.196078 add exch dup 0.150000 sub 1.568628 mul 0.713726 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 2.091503 mul 0.352941 add exch dup 0.170000 sub 0.522876 mul 0.207843 add exch dup 0.170000 sub 1.568627 mul 0.745098 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.415686 add exch dup 0.200000 sub 0.196078 mul 0.223529 add exch dup 0.200000 sub 0.784314 mul 0.792157 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.024510 mul 0.435294 add exch dup 0.220000 sub 0.343137 mul 0.227451 add exch dup 0.220000 sub -0.147059 mul 0.807843 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.224090 mul 0.443137 add exch dup 0.540000 sub 1.400560 mul 0.337255 add exch dup 0.540000 sub 0.504202 mul 0.760784 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -2.483662 mul 0.427451 add exch dup 0.610000 sub 2.091505 mul 0.435294 add exch dup 0.610000 sub 0.261438 mul 0.796078 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -2.009803 mul 0.352941 add exch dup 0.640000 sub 1.666666 mul 0.498039 add exch dup 0.640000 sub 0.294117 mul 0.803922 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -1.633988 mul 0.192157 add exch dup 0.720000 sub 1.372550 mul 0.631373 add exch dup 0.720000 sub 0.196079 mul 0.827451 add exch } if dup 0.780000 gt { exch pop exch pop exch pop dup 0.780000 sub -0.882353 mul 0.094118 add exch dup 0.780000 sub 0.784313 mul 0.713726 add exch dup 0.780000 sub 0.098039 mul 0.839216 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.130719 mul 0.058824 add exch dup 0.820000 sub -1.045750 mul 0.745098 add exch dup 0.820000 sub -0.784313 mul 0.843137 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -0.392157 mul 0.054902 add exch dup 0.850000 sub -2.875820 mul 0.713726 add exch dup 0.850000 sub -2.091505 mul 0.819608 add exch } if dup 0.880000 gt { exch pop exch pop exch pop dup 0.880000 sub -0.261438 mul 0.043137 add exch dup 0.880000 sub -2.614376 mul 0.627451 add exch dup 0.880000 sub -1.830063 mul 0.756863 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.917212 mul 0.035294 add exch dup 0.910000 sub -6.100220 mul 0.549020 add exch dup 0.910000 sub -3.093683 mul 0.701961 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.207843 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

272 0 obj
  2875
endobj

273 0 obj
  << /Length 274 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.239216 exch 0.050980 exch 0.447059 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.627451 mul 0.239216 add exch dup 0.000000 sub 0.836601 mul 0.050980 add exch dup 0.000000 sub 1.751634 mul 0.447059 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 1.372549 mul 0.333333 add exch dup 0.150000 sub 0.392157 mul 0.176471 add exch dup 0.150000 sub 1.176471 mul 0.709804 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 2.091503 mul 0.360784 add exch dup 0.170000 sub 0.522876 mul 0.184314 add exch dup 0.170000 sub 1.699346 mul 0.733333 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.423529 add exch dup 0.200000 sub 0.392157 mul 0.200000 add exch dup 0.200000 sub 0.980392 mul 0.784314 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.073529 mul 0.443137 add exch dup 0.220000 sub 0.318627 mul 0.207843 add exch dup 0.220000 sub -0.159314 mul 0.803922 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.280112 mul 0.419608 add exch dup 0.540000 sub 1.400560 mul 0.309804 add exch dup 0.540000 sub 0.504202 mul 0.752941 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -2.745100 mul 0.400000 add exch dup 0.610000 sub 2.549022 mul 0.407843 add exch dup 0.610000 sub 0.588236 mul 0.788235 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -1.786492 mul 0.345098 add exch dup 0.630000 sub 1.699346 mul 0.458824 add exch dup 0.630000 sub 0.305011 mul 0.800000 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -1.633988 mul 0.184314 add exch dup 0.720000 sub 1.568629 mul 0.611765 add exch dup 0.720000 sub 0.261438 mul 0.827451 add exch } if dup 0.780000 gt { exch pop exch pop exch pop dup 0.780000 sub -0.882353 mul 0.086275 add exch dup 0.780000 sub 0.882352 mul 0.705882 add exch dup 0.780000 sub 0.196078 mul 0.843137 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.196079 mul 0.050980 add exch dup 0.820000 sub -1.568629 mul 0.741176 add exch dup 0.820000 sub -1.176472 mul 0.850980 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub -0.098039 mul 0.047059 add exch dup 0.840000 sub -2.156862 mul 0.709804 add exch dup 0.840000 sub -1.568627 mul 0.827451 add exch } if dup 0.880000 gt { exch pop exch pop exch pop dup 0.880000 sub -0.261438 mul 0.043137 add exch dup 0.880000 sub -2.745095 mul 0.623529 add exch dup 0.880000 sub -2.091501 mul 0.764706 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.830066 mul 0.035294 add exch dup 0.910000 sub -6.013074 mul 0.541176 add exch dup 0.910000 sub -3.137256 mul 0.701961 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.200000 exch 0.000000 exch 0.419608 exch } if pop }
endstream
endobj

274 0 obj
  2876
endobj

275 0 obj
  << /Length 276 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.215686 exch 0.066667 exch 0.450980 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.575163 mul 0.215686 add exch dup 0.000000 sub 0.993464 mul 0.066667 add exch dup 0.000000 sub 1.751634 mul 0.450980 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.156863 mul 0.301961 add exch dup 0.150000 sub 0.588235 mul 0.215686 add exch dup 0.150000 sub 1.764706 mul 0.713726 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 2.091503 mul 0.345098 add exch dup 0.170000 sub 0.653595 mul 0.227451 add exch dup 0.170000 sub 1.437908 mul 0.749020 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.407843 add exch dup 0.200000 sub 0.196079 mul 0.247059 add exch dup 0.200000 sub 0.784314 mul 0.792157 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.134804 mul 0.427451 add exch dup 0.220000 sub 0.367647 mul 0.250980 add exch dup 0.220000 sub -0.110294 mul 0.807843 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.224090 mul 0.470588 add exch dup 0.540000 sub 1.344538 mul 0.368627 add exch dup 0.540000 sub 0.504202 mul 0.772549 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -2.352943 mul 0.454902 add exch dup 0.610000 sub 1.764708 mul 0.462745 add exch dup 0.610000 sub 0.196079 mul 0.807843 add exch } if dup 0.650000 gt { exch pop exch pop exch pop dup 0.650000 sub -2.296917 mul 0.360784 add exch dup 0.650000 sub 1.680671 mul 0.533333 add exch dup 0.650000 sub 0.168067 mul 0.815686 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -1.633988 mul 0.200000 add exch dup 0.720000 sub 1.176472 mul 0.650980 add exch dup 0.720000 sub 0.130719 mul 0.827451 add exch } if dup 0.780000 gt { exch pop exch pop exch pop dup 0.780000 sub -0.882352 mul 0.101961 add exch dup 0.780000 sub 0.686274 mul 0.721569 add exch dup 0.780000 sub 0.098039 mul 0.835294 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.130719 mul 0.066667 add exch dup 0.820000 sub -1.045750 mul 0.749020 add exch dup 0.820000 sub -0.784313 mul 0.839216 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -0.522876 mul 0.062745 add exch dup 0.850000 sub -2.875820 mul 0.717647 add exch dup 0.850000 sub -1.960786 mul 0.815686 add exch } if dup 0.880000 gt { exch pop exch pop exch pop dup 0.880000 sub -0.392156 mul 0.047059 add exch dup 0.880000 sub -2.483657 mul 0.631373 add exch dup 0.880000 sub -1.830063 mul 0.756863 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.960785 mul 0.035294 add exch dup 0.910000 sub -6.187366 mul 0.556863 add exch dup 0.910000 sub -3.093683 mul 0.701961 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.211765 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

276 0 obj
  2875
endobj

277 0 obj
  << /Length 278 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.317647 exch 0.007843 exch 0.439216 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.862745 mul 0.317647 add exch dup 0.000000 sub 0.130719 mul 0.007843 add exch dup 0.000000 sub 1.699346 mul 0.439216 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.784314 mul 0.447059 add exch dup 0.150000 sub 0.000000 mul 0.027451 add exch dup 0.150000 sub 1.176471 mul 0.694118 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 1.307190 mul 0.462745 add exch dup 0.170000 sub 0.261438 mul 0.027451 add exch dup 0.170000 sub 2.091503 mul 0.717647 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.588235 mul 0.501961 add exch dup 0.200000 sub 0.000000 mul 0.035294 add exch dup 0.200000 sub 0.980392 mul 0.780392 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.870098 mul 0.513726 add exch dup 0.220000 sub 0.134804 mul 0.035294 add exch dup 0.220000 sub -0.404412 mul 0.800000 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.588235 mul 0.235294 add exch dup 0.540000 sub 1.830065 mul 0.078431 add exch dup 0.540000 sub 0.588235 mul 0.670588 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.392157 mul 0.200000 add exch dup 0.600000 sub 1.960786 mul 0.188235 add exch dup 0.600000 sub 0.784314 mul 0.705882 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.176471 mul 0.196078 add exch dup 0.610000 sub 3.193278 mul 0.207843 add exch dup 0.610000 sub 1.064426 mul 0.713726 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -0.915033 mul 0.113725 add exch dup 0.680000 sub 2.679739 mul 0.431373 add exch dup 0.680000 sub 0.915033 mul 0.788235 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -0.784313 mul 0.058824 add exch dup 0.740000 sub 1.960784 mul 0.592157 add exch dup 0.740000 sub 0.627451 mul 0.843137 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.392157 mul 0.019608 add exch dup 0.790000 sub 1.176472 mul 0.690196 add exch dup 0.790000 sub 0.392157 mul 0.874510 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub 0.196079 mul 0.007843 add exch dup 0.820000 sub -1.568629 mul 0.725490 add exch dup 0.820000 sub -0.980393 mul 0.886275 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub 0.522875 mul 0.011765 add exch dup 0.840000 sub -2.875814 mul 0.694118 add exch dup 0.840000 sub -1.960782 mul 0.866667 add exch } if dup 0.870000 gt { exch pop exch pop exch pop dup 0.870000 sub 0.588235 mul 0.027451 add exch dup 0.870000 sub -3.529410 mul 0.607843 add exch dup 0.870000 sub -2.450979 mul 0.807843 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.089325 mul 0.050980 add exch dup 0.910000 sub -5.185187 mul 0.466667 add exch dup 0.910000 sub -3.398694 mul 0.709804 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.149020 exch 0.000000 exch 0.403922 exch } if pop }
endstream
endobj

278 0 obj
  3068
endobj

279 0 obj
  << /Length 280 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.203922 exch 0.070588 exch 0.450980 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.575163 mul 0.203922 add exch dup 0.000000 sub 1.098039 mul 0.070588 add exch dup 0.000000 sub 1.777778 mul 0.450980 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.156863 mul 0.290196 add exch dup 0.150000 sub 0.784315 mul 0.235294 add exch dup 0.150000 sub 1.568628 mul 0.717647 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 2.091503 mul 0.333333 add exch dup 0.170000 sub 0.522876 mul 0.250980 add exch dup 0.170000 sub 1.437908 mul 0.749020 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.396078 add exch dup 0.200000 sub 0.392157 mul 0.266667 add exch dup 0.200000 sub 0.784314 mul 0.792157 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.245098 mul 0.415686 add exch dup 0.220000 sub 0.392157 mul 0.274510 add exch dup 0.220000 sub -0.073529 mul 0.807843 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.168067 mul 0.494118 add exch dup 0.540000 sub 1.288515 mul 0.400000 add exch dup 0.540000 sub 0.448179 mul 0.784314 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -2.941179 mul 0.482353 add exch dup 0.610000 sub 1.862748 mul 0.490196 add exch dup 0.610000 sub 0.098039 mul 0.815686 add exch } if dup 0.650000 gt { exch pop exch pop exch pop dup 0.650000 sub -2.009803 mul 0.364706 add exch dup 0.650000 sub 1.225489 mul 0.564706 add exch dup 0.650000 sub 0.098039 mul 0.819608 add exch } if dup 0.730000 gt { exch pop exch pop exch pop dup 0.730000 sub -1.633987 mul 0.203922 add exch dup 0.730000 sub 1.045752 mul 0.662745 add exch dup 0.730000 sub 0.130719 mul 0.827451 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.105882 add exch dup 0.790000 sub 0.784314 mul 0.725490 add exch dup 0.790000 sub 0.000000 mul 0.835294 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.261438 mul 0.070588 add exch dup 0.820000 sub -1.045750 mul 0.749020 add exch dup 0.820000 sub -0.784313 mul 0.835294 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -0.392157 mul 0.062745 add exch dup 0.850000 sub -2.156865 mul 0.717647 add exch dup 0.850000 sub -1.568629 mul 0.811765 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -0.784312 mul 0.047059 add exch dup 0.890000 sub -3.137248 mul 0.631373 add exch dup 0.890000 sub -2.352936 mul 0.749020 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.091504 mul 0.031373 add exch dup 0.910000 sub -6.318085 mul 0.568627 add exch dup 0.910000 sub -3.050110 mul 0.701961 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.219608 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

280 0 obj
  2875
endobj

281 0 obj
  << /Length 282 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.196078 exch 0.078431 exch 0.450980 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.522876 mul 0.196078 add exch dup 0.000000 sub 1.202614 mul 0.078431 add exch dup 0.000000 sub 1.777778 mul 0.450980 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.549020 mul 0.274510 add exch dup 0.150000 sub 0.784314 mul 0.258824 add exch dup 0.150000 sub 1.764706 mul 0.717647 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 2.091503 mul 0.325490 add exch dup 0.170000 sub 0.522876 mul 0.274510 add exch dup 0.170000 sub 1.307189 mul 0.752941 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.388235 add exch dup 0.200000 sub 0.392157 mul 0.290196 add exch dup 0.200000 sub 0.784314 mul 0.792157 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.343137 mul 0.407843 add exch dup 0.220000 sub 0.416667 mul 0.298039 add exch dup 0.220000 sub -0.036765 mul 0.807843 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.112045 mul 0.517647 add exch dup 0.540000 sub 1.232494 mul 0.431373 add exch dup 0.540000 sub 0.448179 mul 0.796078 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -2.745098 mul 0.509804 add exch dup 0.610000 sub 1.490196 mul 0.517647 add exch dup 0.610000 sub 0.000000 mul 0.827451 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -2.296919 mul 0.372549 add exch dup 0.660000 sub 1.232493 mul 0.592157 add exch dup 0.660000 sub 0.056022 mul 0.827451 add exch } if dup 0.730000 gt { exch pop exch pop exch pop dup 0.730000 sub -1.633987 mul 0.211765 add exch dup 0.730000 sub 0.915033 mul 0.678431 add exch dup 0.730000 sub 0.000000 mul 0.831373 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.113725 add exch dup 0.790000 sub 0.653595 mul 0.733333 add exch dup 0.790000 sub 0.000000 mul 0.831373 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.261438 mul 0.078431 add exch dup 0.820000 sub -1.045750 mul 0.752941 add exch dup 0.820000 sub -0.784313 mul 0.831373 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -0.588236 mul 0.070588 add exch dup 0.850000 sub -2.156865 mul 0.721569 add exch dup 0.850000 sub -1.568629 mul 0.807843 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -0.784312 mul 0.047059 add exch dup 0.890000 sub -2.941170 mul 0.635294 add exch dup 0.890000 sub -2.156858 mul 0.745098 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.178650 mul 0.031373 add exch dup 0.910000 sub -6.405231 mul 0.576471 add exch dup 0.910000 sub -3.050110 mul 0.701961 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.227451 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

282 0 obj
  2875
endobj

283 0 obj
  << /Length 284 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.176471 exch 0.086275 exch 0.454902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.496732 mul 0.176471 add exch dup 0.000000 sub 1.333333 mul 0.086275 add exch dup 0.000000 sub 1.777778 mul 0.454902 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.941177 mul 0.250980 add exch dup 0.150000 sub 0.980392 mul 0.286275 add exch dup 0.150000 sub 1.764706 mul 0.721569 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 2.091503 mul 0.309804 add exch dup 0.170000 sub 0.653595 mul 0.305882 add exch dup 0.170000 sub 1.307189 mul 0.756863 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.372549 add exch dup 0.200000 sub 0.392157 mul 0.325490 add exch dup 0.200000 sub 0.588235 mul 0.796078 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.514706 mul 0.392157 add exch dup 0.220000 sub 0.453431 mul 0.333333 add exch dup 0.220000 sub 0.012255 mul 0.807843 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.112045 mul 0.556863 add exch dup 0.540000 sub 1.120449 mul 0.478431 add exch dup 0.540000 sub 0.392157 mul 0.811765 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -2.810458 mul 0.549020 add exch dup 0.610000 sub 1.241830 mul 0.556863 add exch dup 0.610000 sub -0.065359 mul 0.839216 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.296919 mul 0.380392 add exch dup 0.670000 sub 0.952381 mul 0.631373 add exch dup 0.670000 sub -0.112045 mul 0.835294 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -1.960784 mul 0.219608 add exch dup 0.740000 sub 0.862745 mul 0.698039 add exch dup 0.740000 sub -0.078431 mul 0.827451 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.121569 add exch dup 0.790000 sub 0.522876 mul 0.741176 add exch dup 0.790000 sub 0.000000 mul 0.823529 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.392156 mul 0.086275 add exch dup 0.820000 sub -1.045750 mul 0.756863 add exch dup 0.820000 sub -0.784313 mul 0.823529 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -0.784315 mul 0.074510 add exch dup 0.850000 sub -2.156865 mul 0.725490 add exch dup 0.850000 sub -1.666668 mul 0.800000 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -0.784312 mul 0.043137 add exch dup 0.890000 sub -2.352936 mul 0.639216 add exch dup 0.890000 sub -1.764702 mul 0.733333 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.309369 mul 0.027451 add exch dup 0.910000 sub -6.579523 mul 0.592157 add exch dup 0.910000 sub -2.962964 mul 0.698039 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.235294 exch 0.000000 exch 0.431373 exch } if pop }
endstream
endobj

284 0 obj
  2877
endobj

285 0 obj
  << /Length 286 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.168627 exch 0.094118 exch 0.454902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.444444 mul 0.168627 add exch dup 0.000000 sub 1.411765 mul 0.094118 add exch dup 0.000000 sub 1.803922 mul 0.454902 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.222223 mul 0.235294 add exch dup 0.150000 sub 0.784314 mul 0.305882 add exch dup 0.150000 sub 1.307189 mul 0.725490 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 3.137255 mul 0.301961 add exch dup 0.180000 sub 0.980392 mul 0.329412 add exch dup 0.180000 sub 1.568628 mul 0.764706 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.364706 add exch dup 0.200000 sub 0.392157 mul 0.349020 add exch dup 0.200000 sub 0.588235 mul 0.796078 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.612745 mul 0.384314 add exch dup 0.220000 sub 0.477941 mul 0.356863 add exch dup 0.220000 sub 0.049020 mul 0.807843 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.056022 mul 0.580392 add exch dup 0.540000 sub 1.064426 mul 0.509804 add exch dup 0.540000 sub 0.392157 mul 0.823529 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -3.137255 mul 0.576471 add exch dup 0.610000 sub 1.111111 mul 0.584314 add exch dup 0.610000 sub -0.196078 mul 0.850980 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.296919 mul 0.388235 add exch dup 0.670000 sub 0.840336 mul 0.650980 add exch dup 0.670000 sub -0.168067 mul 0.839216 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -1.960784 mul 0.227451 add exch dup 0.740000 sub 0.705882 mul 0.709804 add exch dup 0.740000 sub -0.078431 mul 0.827451 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.129412 add exch dup 0.790000 sub 0.392157 mul 0.745098 add exch dup 0.790000 sub -0.130719 mul 0.823529 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.392156 mul 0.094118 add exch dup 0.820000 sub -1.045750 mul 0.756863 add exch dup 0.820000 sub -0.784313 mul 0.819608 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -0.980393 mul 0.082353 add exch dup 0.850000 sub -2.156865 mul 0.725490 add exch dup 0.850000 sub -1.666668 mul 0.796078 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -0.784312 mul 0.043137 add exch dup 0.890000 sub -1.960780 mul 0.639216 add exch dup 0.890000 sub -1.568624 mul 0.729412 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.396515 mul 0.027451 add exch dup 0.910000 sub -6.666669 mul 0.600000 add exch dup 0.910000 sub -2.919391 mul 0.698039 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.243137 exch 0.000000 exch 0.435294 exch } if pop }
endstream
endobj

286 0 obj
  2878
endobj

287 0 obj
  << /Length 288 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.156863 exch 0.098039 exch 0.454902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.418301 mul 0.156863 add exch dup 0.000000 sub 1.516340 mul 0.098039 add exch dup 0.000000 sub 1.803922 mul 0.454902 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.483660 mul 0.219608 add exch dup 0.150000 sub 0.784314 mul 0.325490 add exch dup 0.150000 sub 1.437908 mul 0.725490 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 3.137255 mul 0.294118 add exch dup 0.180000 sub 0.980392 mul 0.349020 add exch dup 0.180000 sub 1.568628 mul 0.768627 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.356863 add exch dup 0.200000 sub 0.392157 mul 0.368627 add exch dup 0.200000 sub 0.588235 mul 0.800000 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.710784 mul 0.376471 add exch dup 0.220000 sub 0.502451 mul 0.376471 add exch dup 0.220000 sub 0.073529 mul 0.811765 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.000000 mul 0.603922 add exch dup 0.540000 sub 1.064426 mul 0.537255 add exch dup 0.540000 sub 0.336134 mul 0.835294 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -3.025211 mul 0.603922 add exch dup 0.610000 sub 0.896359 mul 0.611765 add exch dup 0.610000 sub -0.280112 mul 0.858824 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -2.679739 mul 0.392157 add exch dup 0.680000 sub 0.784314 mul 0.674510 add exch dup 0.680000 sub -0.196078 mul 0.839216 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -1.960784 mul 0.231373 add exch dup 0.740000 sub 0.549019 mul 0.721569 add exch dup 0.740000 sub -0.156863 mul 0.827451 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.133333 add exch dup 0.790000 sub 0.392157 mul 0.749020 add exch dup 0.790000 sub -0.130719 mul 0.819608 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.522875 mul 0.098039 add exch dup 0.820000 sub -1.045750 mul 0.760784 add exch dup 0.820000 sub -0.784313 mul 0.815686 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -1.078432 mul 0.082353 add exch dup 0.850000 sub -2.156865 mul 0.729412 add exch dup 0.850000 sub -1.764707 mul 0.792157 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -0.784312 mul 0.039216 add exch dup 0.890000 sub -1.568624 mul 0.643137 add exch dup 0.890000 sub -1.176468 mul 0.721569 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.527234 mul 0.023529 add exch dup 0.910000 sub -6.797388 mul 0.611765 add exch dup 0.910000 sub -2.919391 mul 0.698039 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.250980 exch 0.000000 exch 0.435294 exch } if pop }
endstream
endobj

288 0 obj
  2877
endobj

289 0 obj
  << /Length 290 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.184314 exch 0.082353 exch 0.454902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.496732 mul 0.184314 add exch dup 0.000000 sub 1.307190 mul 0.082353 add exch dup 0.000000 sub 1.777778 mul 0.454902 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.941177 mul 0.258824 add exch dup 0.150000 sub 0.980392 mul 0.278431 add exch dup 0.150000 sub 1.764706 mul 0.721569 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 2.091503 mul 0.317647 add exch dup 0.170000 sub 0.522876 mul 0.298039 add exch dup 0.170000 sub 1.307189 mul 0.756863 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.380392 add exch dup 0.200000 sub 0.392157 mul 0.313726 add exch dup 0.200000 sub 0.588235 mul 0.796078 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.453431 mul 0.400000 add exch dup 0.220000 sub 0.441176 mul 0.321569 add exch dup 0.220000 sub 0.000000 mul 0.807843 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.112045 mul 0.545098 add exch dup 0.540000 sub 1.176471 mul 0.462745 add exch dup 0.540000 sub 0.392157 mul 0.807843 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -2.679739 mul 0.537255 add exch dup 0.610000 sub 1.241830 mul 0.545098 add exch dup 0.610000 sub -0.065359 mul 0.835294 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.679739 mul 0.376471 add exch dup 0.670000 sub 1.176471 mul 0.619608 add exch dup 0.670000 sub 0.000000 mul 0.831373 add exch } if dup 0.730000 gt { exch pop exch pop exch pop dup 0.730000 sub -1.633987 mul 0.215686 add exch dup 0.730000 sub 0.784314 mul 0.690196 add exch dup 0.730000 sub -0.065359 mul 0.831373 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.117647 add exch dup 0.790000 sub 0.522876 mul 0.737255 add exch dup 0.790000 sub 0.000000 mul 0.827451 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.392156 mul 0.082353 add exch dup 0.820000 sub -1.045750 mul 0.752941 add exch dup 0.820000 sub -0.784313 mul 0.827451 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -0.686275 mul 0.070588 add exch dup 0.850000 sub -2.156865 mul 0.721569 add exch dup 0.850000 sub -1.666668 mul 0.803922 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -0.784312 mul 0.043137 add exch dup 0.890000 sub -2.352936 mul 0.635294 add exch dup 0.890000 sub -1.960780 mul 0.737255 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.265796 mul 0.027451 add exch dup 0.910000 sub -6.535950 mul 0.588235 add exch dup 0.910000 sub -2.962964 mul 0.698039 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.231373 exch 0.000000 exch 0.431373 exch } if pop }
endstream
endobj

290 0 obj
  2876
endobj

291 0 obj
  << /Length 292 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.258824 exch 0.039216 exch 0.447059 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.705882 mul 0.258824 add exch dup 0.000000 sub 0.653595 mul 0.039216 add exch dup 0.000000 sub 1.725490 mul 0.447059 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 1.568629 mul 0.364706 add exch dup 0.150000 sub 0.392157 mul 0.137255 add exch dup 0.150000 sub 1.568629 mul 0.705882 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 1.568627 mul 0.380392 add exch dup 0.160000 sub 0.392157 mul 0.141176 add exch dup 0.160000 sub 1.568627 mul 0.721569 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.443137 add exch dup 0.200000 sub 0.196078 mul 0.156863 add exch dup 0.200000 sub 0.980392 mul 0.784314 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.281863 mul 0.462745 add exch dup 0.220000 sub 0.269608 mul 0.160784 add exch dup 0.220000 sub -0.232843 mul 0.803922 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.392157 mul 0.372549 add exch dup 0.540000 sub 1.568628 mul 0.247059 add exch dup 0.540000 sub 0.560224 mul 0.729412 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -2.352943 mul 0.345098 add exch dup 0.610000 sub 2.875820 mul 0.356863 add exch dup 0.610000 sub 0.653595 mul 0.768627 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -1.568627 mul 0.274510 add exch dup 0.640000 sub 2.009803 mul 0.443137 add exch dup 0.640000 sub 0.490196 mul 0.788235 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -1.372550 mul 0.149020 add exch dup 0.720000 sub 1.633988 mul 0.603922 add exch dup 0.720000 sub 0.392157 mul 0.827451 add exch } if dup 0.780000 gt { exch pop exch pop exch pop dup 0.780000 sub -0.686274 mul 0.066667 add exch dup 0.780000 sub 0.882352 mul 0.701961 add exch dup 0.780000 sub 0.196078 mul 0.850980 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub 0.000000 mul 0.039216 add exch dup 0.820000 sub -1.568629 mul 0.737255 add exch dup 0.820000 sub -1.176472 mul 0.858824 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub 0.000000 mul 0.039216 add exch dup 0.840000 sub -2.156862 mul 0.705882 add exch dup 0.840000 sub -1.470587 mul 0.835294 add exch } if dup 0.880000 gt { exch pop exch pop exch pop dup 0.880000 sub 0.000000 mul 0.039216 add exch dup 0.880000 sub -3.267970 mul 0.619608 add exch dup 0.880000 sub -2.352939 mul 0.776471 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.612201 mul 0.039216 add exch dup 0.910000 sub -5.795209 mul 0.521569 add exch dup 0.910000 sub -3.224402 mul 0.705882 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.184314 exch 0.000000 exch 0.415686 exch } if pop }
endstream
endobj

292 0 obj
  2873
endobj

293 0 obj
  << /Length 294 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.152941 exch 0.101961 exch 0.454902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.392157 mul 0.152941 add exch dup 0.000000 sub 1.568627 mul 0.101961 add exch dup 0.000000 sub 1.830065 mul 0.454902 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.614379 mul 0.211765 add exch dup 0.150000 sub 0.784314 mul 0.337255 add exch dup 0.150000 sub 1.307189 mul 0.729412 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 3.137255 mul 0.290196 add exch dup 0.180000 sub 0.980392 mul 0.360784 add exch dup 0.180000 sub 1.568628 mul 0.768627 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.352941 add exch dup 0.200000 sub 0.392157 mul 0.380392 add exch dup 0.200000 sub 0.588235 mul 0.800000 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.759804 mul 0.372549 add exch dup 0.220000 sub 0.514706 mul 0.388235 add exch dup 0.220000 sub 0.085784 mul 0.811765 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.056022 mul 0.615686 add exch dup 0.540000 sub 1.008403 mul 0.552941 add exch dup 0.540000 sub 0.392157 mul 0.839216 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -3.193278 mul 0.619608 add exch dup 0.610000 sub 0.840336 mul 0.623529 add exch dup 0.610000 sub -0.336134 mul 0.866667 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -2.679739 mul 0.396078 add exch dup 0.680000 sub 0.718954 mul 0.682353 add exch dup 0.680000 sub -0.261438 mul 0.843137 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -1.960784 mul 0.235294 add exch dup 0.740000 sub 0.549019 mul 0.725490 add exch dup 0.740000 sub -0.235294 mul 0.827451 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.137255 add exch dup 0.790000 sub 0.261438 mul 0.752941 add exch dup 0.790000 sub -0.130719 mul 0.815686 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.522875 mul 0.101961 add exch dup 0.820000 sub -1.045750 mul 0.760784 add exch dup 0.820000 sub -0.784313 mul 0.811765 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -0.941177 mul 0.086275 add exch dup 0.850000 sub -1.725492 mul 0.729412 add exch dup 0.850000 sub -1.333335 mul 0.788235 add exch } if dup 0.900000 gt { exch pop exch pop exch pop dup 0.900000 sub -1.568620 mul 0.039216 add exch dup 0.900000 sub -2.745084 mul 0.643137 add exch dup 0.900000 sub -2.352929 mul 0.721569 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.570807 mul 0.023529 add exch dup 0.910000 sub -6.840961 mul 0.615686 add exch dup 0.910000 sub -2.875818 mul 0.698039 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.254902 exch 0.000000 exch 0.439216 exch } if pop }
endstream
endobj

294 0 obj
  2877
endobj

295 0 obj
  << /Length 296 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.098039 exch 0.133333 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.261438 mul 0.098039 add exch dup 0.000000 sub 2.013072 mul 0.133333 add exch dup 0.000000 sub 1.856209 mul 0.462745 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.784314 mul 0.137255 add exch dup 0.150000 sub 0.392157 mul 0.435294 add exch dup 0.150000 sub 0.392157 mul 0.741176 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 4.901958 mul 0.145098 add exch dup 0.160000 sub 1.764705 mul 0.439216 add exch dup 0.160000 sub 1.960783 mul 0.745098 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 2.091505 mul 0.243137 add exch dup 0.180000 sub 0.653595 mul 0.474510 add exch dup 0.180000 sub 0.784314 mul 0.784314 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960783 mul 0.305882 add exch dup 0.210000 sub 0.784316 mul 0.494118 add exch dup 0.210000 sub 0.784313 mul 0.807843 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.299020 mul 0.325490 add exch dup 0.220000 sub 0.637255 mul 0.501961 add exch dup 0.220000 sub 0.245098 mul 0.815686 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.168067 mul 0.741176 add exch dup 0.540000 sub 0.728291 mul 0.705882 add exch dup 0.540000 sub 0.280112 mul 0.894118 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -5.098044 mul 0.752941 add exch dup 0.610000 sub 0.196079 mul 0.756863 add exch dup 0.610000 sub -0.980393 mul 0.913725 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -3.193278 mul 0.650980 add exch dup 0.630000 sub 0.056022 mul 0.760784 add exch dup 0.630000 sub -0.672269 mul 0.894118 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -3.215685 mul 0.427451 add exch dup 0.700000 sub 0.078431 mul 0.764706 add exch dup 0.700000 sub -0.627451 mul 0.847059 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.960784 mul 0.266667 add exch dup 0.750000 sub 0.078431 mul 0.768627 add exch dup 0.750000 sub -0.392157 mul 0.815686 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.168627 add exch dup 0.800000 sub 0.000000 mul 0.772549 add exch dup 0.800000 sub -0.392157 mul 0.796078 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.784313 mul 0.133333 add exch dup 0.820000 sub -0.686274 mul 0.772549 add exch dup 0.820000 sub -0.588235 mul 0.788235 add exch } if dup 0.860000 gt { exch pop exch pop exch pop dup 0.860000 sub -1.725490 mul 0.101961 add exch dup 0.860000 sub -1.647058 mul 0.745098 add exch dup 0.860000 sub -1.411764 mul 0.764706 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.006537 mul 0.015686 add exch dup 0.910000 sub -7.363837 mul 0.662745 add exch dup 0.910000 sub -2.701526 mul 0.694118 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.286275 exch 0.000000 exch 0.450980 exch } if pop }
endstream
endobj

296 0 obj
  3070
endobj

297 0 obj
  << /Length 298 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.117647 exch 0.121569 exch 0.458824 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.339869 mul 0.117647 add exch dup 0.000000 sub 1.830065 mul 0.121569 add exch dup 0.000000 sub 1.856209 mul 0.458824 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 3.137255 mul 0.168627 add exch dup 0.150000 sub 1.176471 mul 0.396078 add exch dup 0.150000 sub 1.307189 mul 0.737255 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 3.137255 mul 0.262745 add exch dup 0.180000 sub 0.980392 mul 0.431373 add exch dup 0.180000 sub 1.372549 mul 0.776471 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.325490 add exch dup 0.200000 sub 0.392157 mul 0.450980 add exch dup 0.200000 sub 0.392157 mul 0.803922 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.078431 mul 0.345098 add exch dup 0.220000 sub 0.588235 mul 0.458824 add exch dup 0.220000 sub 0.183824 mul 0.811765 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.168067 mul 0.690196 add exch dup 0.540000 sub 0.840336 mul 0.647059 add exch dup 0.540000 sub 0.336134 mul 0.870588 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -3.137258 mul 0.701961 add exch dup 0.610000 sub 0.392157 mul 0.705882 add exch dup 0.610000 sub -0.588236 mul 0.894118 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -3.725490 mul 0.639216 add exch dup 0.630000 sub 0.392157 mul 0.713726 add exch dup 0.630000 sub -0.588235 mul 0.882353 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -2.679738 mul 0.415686 add exch dup 0.690000 sub 0.261438 mul 0.737255 add exch dup 0.690000 sub -0.457516 mul 0.847059 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -2.450979 mul 0.254902 add exch dup 0.750000 sub 0.294117 mul 0.752941 add exch dup 0.750000 sub -0.392157 mul 0.819608 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.156863 add exch dup 0.790000 sub 0.130719 mul 0.764706 add exch dup 0.790000 sub -0.261438 mul 0.803922 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.784313 mul 0.121569 add exch dup 0.820000 sub -1.045750 mul 0.768627 add exch dup 0.820000 sub -0.784313 mul 0.796078 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -1.411766 mul 0.098039 add exch dup 0.850000 sub -1.725492 mul 0.737255 add exch dup 0.850000 sub -1.411766 mul 0.772549 add exch } if dup 0.900000 gt { exch pop exch pop exch pop dup 0.900000 sub -0.784310 mul 0.027451 add exch dup 0.900000 sub -0.784310 mul 0.650980 add exch dup 0.900000 sub -0.784310 mul 0.701961 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.832245 mul 0.019608 add exch dup 0.910000 sub -7.145972 mul 0.643137 add exch dup 0.910000 sub -2.745099 mul 0.694118 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.274510 exch 0.000000 exch 0.447059 exch } if pop }
endstream
endobj

298 0 obj
  3073
endobj

299 0 obj
  << /Length 300 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.145098 exch 0.105882 exch 0.454902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.392157 mul 0.145098 add exch dup 0.000000 sub 1.594771 mul 0.105882 add exch dup 0.000000 sub 1.830065 mul 0.454902 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.614379 mul 0.203922 add exch dup 0.150000 sub 0.915033 mul 0.345098 add exch dup 0.150000 sub 1.307189 mul 0.729412 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 3.137255 mul 0.282353 add exch dup 0.180000 sub 0.980392 mul 0.372549 add exch dup 0.180000 sub 1.568628 mul 0.768627 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.345098 add exch dup 0.200000 sub 0.392157 mul 0.392157 add exch dup 0.200000 sub 0.588235 mul 0.800000 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.821078 mul 0.364706 add exch dup 0.220000 sub 0.526961 mul 0.400000 add exch dup 0.220000 sub 0.098039 mul 0.811765 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.056022 mul 0.627451 add exch dup 0.540000 sub 1.008403 mul 0.568627 add exch dup 0.540000 sub 0.392157 mul 0.843137 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -3.193278 mul 0.623529 add exch dup 0.610000 sub 0.728291 mul 0.639216 add exch dup 0.610000 sub -0.392157 mul 0.870588 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -2.679739 mul 0.400000 add exch dup 0.680000 sub 0.718954 mul 0.690196 add exch dup 0.680000 sub -0.326797 mul 0.843137 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -1.960784 mul 0.239216 add exch dup 0.740000 sub 0.470588 mul 0.733333 add exch dup 0.740000 sub -0.235294 mul 0.823529 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.141176 add exch dup 0.790000 sub 0.261438 mul 0.756863 add exch dup 0.790000 sub -0.130719 mul 0.811765 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.653594 mul 0.105882 add exch dup 0.820000 sub -1.045750 mul 0.764706 add exch dup 0.820000 sub -0.784313 mul 0.807843 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -0.941177 mul 0.086275 add exch dup 0.850000 sub -1.725492 mul 0.733333 add exch dup 0.850000 sub -1.333335 mul 0.784314 add exch } if dup 0.900000 gt { exch pop exch pop exch pop dup 0.900000 sub -1.568620 mul 0.039216 add exch dup 0.900000 sub -2.745084 mul 0.647059 add exch dup 0.900000 sub -1.960774 mul 0.717647 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.614380 mul 0.023529 add exch dup 0.910000 sub -6.884534 mul 0.619608 add exch dup 0.910000 sub -2.875818 mul 0.698039 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.258824 exch 0.000000 exch 0.439216 exch } if pop }
endstream
endobj

300 0 obj
  2878
endobj

301 0 obj
  << /Length 302 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.109804 exch 0.125490 exch 0.458824 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.287582 mul 0.109804 add exch dup 0.000000 sub 1.934640 mul 0.125490 add exch dup 0.000000 sub 1.856209 mul 0.458824 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 3.267974 mul 0.152941 add exch dup 0.150000 sub 1.176471 mul 0.415686 add exch dup 0.150000 sub 1.307189 mul 0.737255 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 2.091504 mul 0.250980 add exch dup 0.180000 sub 0.784314 mul 0.450980 add exch dup 0.180000 sub 0.915033 mul 0.776471 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960783 mul 0.313726 add exch dup 0.210000 sub 0.784313 mul 0.474510 add exch dup 0.210000 sub 0.784313 mul 0.803922 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.188725 mul 0.333333 add exch dup 0.220000 sub 0.612745 mul 0.482353 add exch dup 0.220000 sub 0.220588 mul 0.811765 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.168067 mul 0.713726 add exch dup 0.540000 sub 0.728291 mul 0.678431 add exch dup 0.540000 sub 0.280112 mul 0.882353 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -4.117651 mul 0.725490 add exch dup 0.610000 sub 0.392157 mul 0.729412 add exch dup 0.610000 sub -0.784314 mul 0.901961 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -3.725490 mul 0.643137 add exch dup 0.630000 sub 0.261438 mul 0.737255 add exch dup 0.630000 sub -0.653595 mul 0.886275 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -2.679738 mul 0.419608 add exch dup 0.690000 sub 0.196078 mul 0.752941 add exch dup 0.690000 sub -0.522876 mul 0.847059 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -2.450979 mul 0.258824 add exch dup 0.750000 sub 0.098039 mul 0.764706 add exch dup 0.750000 sub -0.392157 mul 0.815686 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.160784 add exch dup 0.790000 sub 0.130719 mul 0.768627 add exch dup 0.790000 sub -0.261438 mul 0.800000 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.686274 mul 0.125490 add exch dup 0.820000 sub -0.784313 mul 0.772549 add exch dup 0.820000 sub -0.686274 mul 0.792157 add exch } if dup 0.860000 gt { exch pop exch pop exch pop dup 0.860000 sub -1.647058 mul 0.098039 add exch dup 0.860000 sub -1.725490 mul 0.741176 add exch dup 0.860000 sub -1.411764 mul 0.764706 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.962964 mul 0.015686 add exch dup 0.910000 sub -7.276691 mul 0.654902 add exch dup 0.910000 sub -2.745099 mul 0.694118 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.282353 exch 0.000000 exch 0.447059 exch } if pop }
endstream
endobj

302 0 obj
  2876
endobj

303 0 obj
  << /Length 304 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.113725 exch 0.121569 exch 0.458824 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.313726 mul 0.113725 add exch dup 0.000000 sub 1.908497 mul 0.121569 add exch dup 0.000000 sub 1.856209 mul 0.458824 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 3.137255 mul 0.160784 add exch dup 0.150000 sub 1.176471 mul 0.407843 add exch dup 0.150000 sub 1.307189 mul 0.737255 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 3.137255 mul 0.254902 add exch dup 0.180000 sub 0.980392 mul 0.443137 add exch dup 0.180000 sub 1.372549 mul 0.776471 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.317647 add exch dup 0.200000 sub 0.392157 mul 0.462745 add exch dup 0.200000 sub 0.392157 mul 0.803922 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.139706 mul 0.337255 add exch dup 0.220000 sub 0.600490 mul 0.470588 add exch dup 0.220000 sub 0.208333 mul 0.811765 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.168067 mul 0.701961 add exch dup 0.540000 sub 0.784314 mul 0.662745 add exch dup 0.540000 sub 0.280112 mul 0.878431 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -3.725493 mul 0.713726 add exch dup 0.610000 sub 0.392157 mul 0.717647 add exch dup 0.610000 sub -0.588236 mul 0.898039 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -3.725490 mul 0.639216 add exch dup 0.630000 sub 0.326797 mul 0.725490 add exch dup 0.630000 sub -0.653595 mul 0.886275 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -2.679738 mul 0.415686 add exch dup 0.690000 sub 0.196078 mul 0.745098 add exch dup 0.690000 sub -0.457516 mul 0.847059 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -2.450979 mul 0.254902 add exch dup 0.750000 sub 0.196078 mul 0.756863 add exch dup 0.750000 sub -0.392157 mul 0.819608 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.156863 add exch dup 0.790000 sub 0.130719 mul 0.764706 add exch dup 0.790000 sub -0.261438 mul 0.803922 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.686274 mul 0.121569 add exch dup 0.820000 sub -0.784313 mul 0.768627 add exch dup 0.820000 sub -0.686274 mul 0.796078 add exch } if dup 0.860000 gt { exch pop exch pop exch pop dup 0.860000 sub -1.568627 mul 0.094118 add exch dup 0.860000 sub -1.725490 mul 0.737255 add exch dup 0.860000 sub -1.490196 mul 0.768627 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.919391 mul 0.015686 add exch dup 0.910000 sub -7.233118 mul 0.650980 add exch dup 0.910000 sub -2.745099 mul 0.694118 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.278431 exch 0.000000 exch 0.447059 exch } if pop }
endstream
endobj

304 0 obj
  2876
endobj

305 0 obj
  << /Length 306 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.313726 exch 0.007843 exch 0.439216 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.836601 mul 0.313726 add exch dup 0.000000 sub 0.209150 mul 0.007843 add exch dup 0.000000 sub 1.699346 mul 0.439216 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.784314 mul 0.439216 add exch dup 0.150000 sub 0.000000 mul 0.039216 add exch dup 0.150000 sub 1.176471 mul 0.694118 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 1.307189 mul 0.454902 add exch dup 0.170000 sub 0.261438 mul 0.039216 add exch dup 0.170000 sub 2.091503 mul 0.717647 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.784315 mul 0.494118 add exch dup 0.200000 sub 0.000000 mul 0.047059 add exch dup 0.200000 sub 0.980392 mul 0.780392 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.821079 mul 0.509804 add exch dup 0.220000 sub 0.147059 mul 0.047059 add exch dup 0.220000 sub -0.392157 mul 0.800000 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.588235 mul 0.247059 add exch dup 0.540000 sub 1.830065 mul 0.094118 add exch dup 0.540000 sub 0.718954 mul 0.674510 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.392157 mul 0.211765 add exch dup 0.600000 sub 1.568629 mul 0.203922 add exch dup 0.600000 sub 0.392157 mul 0.717647 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.176471 mul 0.207843 add exch dup 0.610000 sub 3.025210 mul 0.219608 add exch dup 0.610000 sub 0.952381 mul 0.721569 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -1.045752 mul 0.125490 add exch dup 0.680000 sub 2.679739 mul 0.431373 add exch dup 0.680000 sub 0.849673 mul 0.788235 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -0.784314 mul 0.062745 add exch dup 0.740000 sub 1.960784 mul 0.592157 add exch dup 0.740000 sub 0.627451 mul 0.839216 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.522876 mul 0.023529 add exch dup 0.790000 sub 1.176472 mul 0.690196 add exch dup 0.790000 sub 0.392157 mul 0.870588 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub 0.196079 mul 0.007843 add exch dup 0.820000 sub -1.568629 mul 0.725490 add exch dup 0.820000 sub -1.176472 mul 0.882353 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub 0.522875 mul 0.011765 add exch dup 0.840000 sub -2.875814 mul 0.694118 add exch dup 0.840000 sub -1.960782 mul 0.858824 add exch } if dup 0.870000 gt { exch pop exch pop exch pop dup 0.870000 sub 0.490196 mul 0.027451 add exch dup 0.870000 sub -3.333332 mul 0.607843 add exch dup 0.870000 sub -2.254901 mul 0.800000 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.176471 mul 0.047059 add exch dup 0.910000 sub -5.272333 mul 0.474510 add exch dup 0.910000 sub -3.398694 mul 0.709804 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.152941 exch 0.000000 exch 0.403922 exch } if pop }
endstream
endobj

306 0 obj
  3068
endobj

307 0 obj
  << /Length 308 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.086275 exch 0.137255 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.235294 mul 0.086275 add exch dup 0.000000 sub 2.117647 mul 0.137255 add exch dup 0.000000 sub 1.856209 mul 0.462745 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 1.568630 mul 0.121569 add exch dup 0.150000 sub 0.784314 mul 0.454902 add exch dup 0.150000 sub 0.784314 mul 0.741176 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 4.901958 mul 0.137255 add exch dup 0.160000 sub 1.764705 mul 0.462745 add exch dup 0.160000 sub 1.764705 mul 0.749020 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 2.091505 mul 0.235294 add exch dup 0.180000 sub 0.653596 mul 0.498039 add exch dup 0.180000 sub 0.784314 mul 0.784314 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960783 mul 0.298039 add exch dup 0.210000 sub 0.784313 mul 0.517647 add exch dup 0.210000 sub 0.784313 mul 0.807843 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.397059 mul 0.317647 add exch dup 0.220000 sub 0.661765 mul 0.525490 add exch dup 0.220000 sub 0.281863 mul 0.815686 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.224090 mul 0.764706 add exch dup 0.540000 sub 0.672269 mul 0.737255 add exch dup 0.540000 sub 0.224090 mul 0.905882 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -4.183010 mul 0.780392 add exch dup 0.610000 sub 0.000000 mul 0.784314 add exch dup 0.610000 sub -0.915034 mul 0.921569 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -3.725490 mul 0.654902 add exch dup 0.640000 sub -0.065359 mul 0.784314 add exch dup 0.640000 sub -0.784314 mul 0.894118 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -3.215685 mul 0.431373 add exch dup 0.700000 sub -0.078431 mul 0.780392 add exch dup 0.700000 sub -0.705882 mul 0.847059 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.960784 mul 0.270588 add exch dup 0.750000 sub 0.000000 mul 0.776471 add exch dup 0.750000 sub -0.392157 mul 0.811765 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.172549 add exch dup 0.800000 sub 0.000000 mul 0.776471 add exch dup 0.800000 sub -0.392157 mul 0.792157 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -1.045751 mul 0.137255 add exch dup 0.820000 sub -0.784313 mul 0.776471 add exch dup 0.820000 sub -0.784313 mul 0.784314 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -1.725492 mul 0.105882 add exch dup 0.850000 sub -1.411766 mul 0.752941 add exch dup 0.850000 sub -1.176472 mul 0.760784 add exch } if dup 0.900000 gt { exch pop exch pop exch pop dup 0.900000 sub -0.784310 mul 0.019608 add exch dup 0.900000 sub -0.784310 mul 0.682353 add exch dup 0.900000 sub -0.784310 mul 0.701961 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.137256 mul 0.011765 add exch dup 0.910000 sub -7.494556 mul 0.674510 add exch dup 0.910000 sub -2.701526 mul 0.694118 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.294118 exch 0.000000 exch 0.450980 exch } if pop }
endstream
endobj

308 0 obj
  3269
endobj

309 0 obj
  << /Length 310 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.141176 exch 0.109804 exch 0.458824 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.366013 mul 0.141176 add exch dup 0.000000 sub 1.647059 mul 0.109804 add exch dup 0.000000 sub 1.803922 mul 0.458824 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.745098 mul 0.196078 add exch dup 0.150000 sub 0.915033 mul 0.356863 add exch dup 0.150000 sub 1.437908 mul 0.729412 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 3.137255 mul 0.278431 add exch dup 0.180000 sub 0.980392 mul 0.384314 add exch dup 0.180000 sub 1.372549 mul 0.772549 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.341176 add exch dup 0.200000 sub 0.392157 mul 0.403922 add exch dup 0.200000 sub 0.588235 mul 0.800000 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.882353 mul 0.360784 add exch dup 0.220000 sub 0.539216 mul 0.411765 add exch dup 0.220000 sub 0.122549 mul 0.811765 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.224090 mul 0.643137 add exch dup 0.540000 sub 1.008403 mul 0.584314 add exch dup 0.540000 sub 0.280112 mul 0.850980 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -3.193278 mul 0.627451 add exch dup 0.610000 sub 0.672269 mul 0.654902 add exch dup 0.610000 sub -0.392157 mul 0.870588 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -2.679739 mul 0.403922 add exch dup 0.680000 sub 0.588235 mul 0.701961 add exch dup 0.680000 sub -0.326797 mul 0.843137 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -1.960784 mul 0.243137 add exch dup 0.740000 sub 0.392157 mul 0.737255 add exch dup 0.740000 sub -0.235294 mul 0.823529 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.145098 add exch dup 0.790000 sub 0.261438 mul 0.756863 add exch dup 0.790000 sub -0.130719 mul 0.811765 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.653594 mul 0.109804 add exch dup 0.820000 sub -1.045750 mul 0.764706 add exch dup 0.820000 sub -0.784313 mul 0.807843 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -1.019609 mul 0.090196 add exch dup 0.850000 sub -1.725492 mul 0.733333 add exch dup 0.850000 sub -1.333335 mul 0.784314 add exch } if dup 0.900000 gt { exch pop exch pop exch pop dup 0.900000 sub -1.568620 mul 0.039216 add exch dup 0.900000 sub -2.352929 mul 0.647059 add exch dup 0.900000 sub -1.960774 mul 0.717647 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.614380 mul 0.023529 add exch dup 0.910000 sub -6.928107 mul 0.623529 add exch dup 0.910000 sub -2.875818 mul 0.698039 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.258824 exch 0.000000 exch 0.439216 exch } if pop }
endstream
endobj

310 0 obj
  2878
endobj

311 0 obj
  << /Length 312 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.188235 exch 0.078431 exch 0.450980 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.522876 mul 0.188235 add exch dup 0.000000 sub 1.254902 mul 0.078431 add exch dup 0.000000 sub 1.803922 mul 0.450980 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.745098 mul 0.266667 add exch dup 0.150000 sub 0.980392 mul 0.266667 add exch dup 0.150000 sub 1.764706 mul 0.721569 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 2.091503 mul 0.321569 add exch dup 0.170000 sub 0.522876 mul 0.286275 add exch dup 0.170000 sub 1.307189 mul 0.756863 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.384314 add exch dup 0.200000 sub 0.392157 mul 0.301961 add exch dup 0.200000 sub 0.588235 mul 0.796078 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.392157 mul 0.403922 add exch dup 0.220000 sub 0.428922 mul 0.309804 add exch dup 0.220000 sub -0.024510 mul 0.807843 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.112045 mul 0.529412 add exch dup 0.540000 sub 1.176471 mul 0.447059 add exch dup 0.540000 sub 0.448179 mul 0.800000 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -2.980392 mul 0.521569 add exch dup 0.610000 sub 1.490196 mul 0.529412 add exch dup 0.610000 sub 0.000000 mul 0.831373 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -2.296919 mul 0.372549 add exch dup 0.660000 sub 1.176471 mul 0.603922 add exch dup 0.660000 sub -0.056022 mul 0.831373 add exch } if dup 0.730000 gt { exch pop exch pop exch pop dup 0.730000 sub -1.633987 mul 0.211765 add exch dup 0.730000 sub 0.784314 mul 0.686275 add exch dup 0.730000 sub 0.000000 mul 0.827451 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.113725 add exch dup 0.790000 sub 0.653595 mul 0.733333 add exch dup 0.790000 sub 0.000000 mul 0.827451 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.261438 mul 0.078431 add exch dup 0.820000 sub -1.045750 mul 0.752941 add exch dup 0.820000 sub -0.784313 mul 0.827451 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -0.686275 mul 0.070588 add exch dup 0.850000 sub -2.156865 mul 0.721569 add exch dup 0.850000 sub -1.666668 mul 0.803922 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -0.784312 mul 0.043137 add exch dup 0.890000 sub -2.549014 mul 0.635294 add exch dup 0.890000 sub -1.960780 mul 0.737255 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.265796 mul 0.027451 add exch dup 0.910000 sub -6.492377 mul 0.584314 add exch dup 0.910000 sub -2.962964 mul 0.698039 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.231373 exch 0.000000 exch 0.431373 exch } if pop }
endstream
endobj

312 0 obj
  2876
endobj

313 0 obj
  << /Length 314 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.200000 exch 0.074510 exch 0.450980 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.549020 mul 0.200000 add exch dup 0.000000 sub 1.150327 mul 0.074510 add exch dup 0.000000 sub 1.777778 mul 0.450980 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.352942 mul 0.282353 add exch dup 0.150000 sub 0.784315 mul 0.247059 add exch dup 0.150000 sub 1.764706 mul 0.717647 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 2.091503 mul 0.329412 add exch dup 0.170000 sub 0.522876 mul 0.262745 add exch dup 0.170000 sub 1.307189 mul 0.752941 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.392157 add exch dup 0.200000 sub 0.392157 mul 0.278431 add exch dup 0.200000 sub 0.784314 mul 0.792157 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.294118 mul 0.411765 add exch dup 0.220000 sub 0.404412 mul 0.286275 add exch dup 0.220000 sub -0.061275 mul 0.807843 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.168068 mul 0.505882 add exch dup 0.540000 sub 1.232494 mul 0.415686 add exch dup 0.540000 sub 0.504202 mul 0.788235 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -2.509803 mul 0.494118 add exch dup 0.610000 sub 1.490196 mul 0.501961 add exch dup 0.610000 sub 0.078431 mul 0.823529 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -2.296919 mul 0.368627 add exch dup 0.660000 sub 1.344538 mul 0.576471 add exch dup 0.660000 sub 0.000000 mul 0.827451 add exch } if dup 0.730000 gt { exch pop exch pop exch pop dup 0.730000 sub -1.633987 mul 0.207843 add exch dup 0.730000 sub 0.980392 mul 0.670588 add exch dup 0.730000 sub 0.065359 mul 0.827451 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.109804 add exch dup 0.790000 sub 0.653595 mul 0.729412 add exch dup 0.790000 sub 0.000000 mul 0.831373 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.261438 mul 0.074510 add exch dup 0.820000 sub -1.045750 mul 0.749020 add exch dup 0.820000 sub -0.784313 mul 0.831373 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -0.490197 mul 0.066667 add exch dup 0.850000 sub -2.156865 mul 0.717647 add exch dup 0.850000 sub -1.568629 mul 0.807843 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -0.784312 mul 0.047059 add exch dup 0.890000 sub -2.941170 mul 0.631373 add exch dup 0.890000 sub -2.156858 mul 0.745098 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.135077 mul 0.031373 add exch dup 0.910000 sub -6.361658 mul 0.572549 add exch dup 0.910000 sub -3.050110 mul 0.701961 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.223529 exch 0.000000 exch 0.427451 exch } if pop }
endstream
endobj

314 0 obj
  2875
endobj

315 0 obj
  << /Length 316 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.133333 exch 0.109804 exch 0.458824 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.366013 mul 0.133333 add exch dup 0.000000 sub 1.699346 mul 0.109804 add exch dup 0.000000 sub 1.830065 mul 0.458824 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.875817 mul 0.188235 add exch dup 0.150000 sub 1.045752 mul 0.364706 add exch dup 0.150000 sub 1.307189 mul 0.733333 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 3.137255 mul 0.274510 add exch dup 0.180000 sub 0.980392 mul 0.396078 add exch dup 0.180000 sub 1.568628 mul 0.772549 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.337255 add exch dup 0.200000 sub 0.392157 mul 0.415686 add exch dup 0.200000 sub 0.392157 mul 0.803922 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.931373 mul 0.356863 add exch dup 0.220000 sub 0.551471 mul 0.423529 add exch dup 0.220000 sub 0.134804 mul 0.811765 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.056022 mul 0.654902 add exch dup 0.540000 sub 0.896359 mul 0.600000 add exch dup 0.540000 sub 0.336134 mul 0.854902 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -3.137258 mul 0.658824 add exch dup 0.610000 sub 0.784314 mul 0.662745 add exch dup 0.610000 sub -0.392157 mul 0.878431 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -3.193278 mul 0.627451 add exch dup 0.620000 sub 0.560224 mul 0.670588 add exch dup 0.620000 sub -0.448179 mul 0.874510 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -2.679739 mul 0.403922 add exch dup 0.690000 sub 0.522876 mul 0.709804 add exch dup 0.690000 sub -0.326797 mul 0.843137 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -2.450979 mul 0.243137 add exch dup 0.750000 sub 0.392157 mul 0.741176 add exch dup 0.750000 sub -0.392157 mul 0.823529 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.145098 add exch dup 0.790000 sub 0.261438 mul 0.756863 add exch dup 0.790000 sub -0.130719 mul 0.807843 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.653594 mul 0.109804 add exch dup 0.820000 sub -1.045750 mul 0.764706 add exch dup 0.820000 sub -0.915032 mul 0.803922 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -1.176472 mul 0.090196 add exch dup 0.850000 sub -1.725492 mul 0.733333 add exch dup 0.850000 sub -1.411766 mul 0.776471 add exch } if dup 0.900000 gt { exch pop exch pop exch pop dup 0.900000 sub -1.176465 mul 0.031373 add exch dup 0.900000 sub -1.568619 mul 0.647059 add exch dup 0.900000 sub -1.176465 mul 0.705882 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.701526 mul 0.019608 add exch dup 0.910000 sub -7.015253 mul 0.631373 add exch dup 0.910000 sub -2.788672 mul 0.694118 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.262745 exch 0.000000 exch 0.443137 exch } if pop }
endstream
endobj

316 0 obj
  3073
endobj

317 0 obj
  << /Length 318 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.074510 exch 0.145098 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.209150 mul 0.074510 add exch dup 0.000000 sub 2.196078 mul 0.145098 add exch dup 0.000000 sub 1.882353 mul 0.462745 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 1.960787 mul 0.105882 add exch dup 0.150000 sub 0.784314 mul 0.474510 add exch dup 0.150000 sub 0.784314 mul 0.745098 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 4.901958 mul 0.125490 add exch dup 0.160000 sub 1.764706 mul 0.482353 add exch dup 0.160000 sub 1.764705 mul 0.752941 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 2.091505 mul 0.223529 add exch dup 0.180000 sub 0.784314 mul 0.517647 add exch dup 0.180000 sub 0.653595 mul 0.788235 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960783 mul 0.286275 add exch dup 0.210000 sub 0.784313 mul 0.541176 add exch dup 0.210000 sub 0.784313 mul 0.807843 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.507353 mul 0.305882 add exch dup 0.220000 sub 0.686274 mul 0.549020 add exch dup 0.220000 sub 0.306373 mul 0.815686 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.280112 mul 0.788235 add exch dup 0.540000 sub 0.616247 mul 0.768627 add exch dup 0.540000 sub 0.280112 mul 0.913725 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -4.836606 mul 0.807843 add exch dup 0.610000 sub -0.261438 mul 0.811765 add exch dup 0.610000 sub -1.176472 mul 0.933333 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -3.725490 mul 0.662745 add exch dup 0.640000 sub -0.130719 mul 0.803922 add exch dup 0.640000 sub -0.849673 mul 0.898039 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -2.679738 mul 0.439216 add exch dup 0.700000 sub -0.130719 mul 0.796078 add exch dup 0.700000 sub -0.653595 mul 0.847059 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -2.450979 mul 0.278431 add exch dup 0.760000 sub -0.196078 mul 0.788235 add exch dup 0.760000 sub -0.588235 mul 0.807843 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.180392 add exch dup 0.800000 sub 0.000000 mul 0.780392 add exch dup 0.800000 sub -0.392157 mul 0.784314 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -1.045751 mul 0.145098 add exch dup 0.820000 sub -0.784313 mul 0.780392 add exch dup 0.820000 sub -0.653594 mul 0.776471 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -1.725492 mul 0.113725 add exch dup 0.850000 sub -1.254903 mul 0.756863 add exch dup 0.850000 sub -1.098040 mul 0.756863 add exch } if dup 0.900000 gt { exch pop exch pop exch pop dup 0.900000 sub -1.568619 mul 0.027451 add exch dup 0.900000 sub -1.176465 mul 0.694118 add exch dup 0.900000 sub -1.176465 mul 0.701961 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.224402 mul 0.011765 add exch dup 0.910000 sub -7.581702 mul 0.682353 add exch dup 0.910000 sub -2.614380 mul 0.690196 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.301961 exch 0.000000 exch 0.454902 exch } if pop }
endstream
endobj

318 0 obj
  3271
endobj

319 0 obj
  << /Length 320 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.003922 exch 0.184314 exch 0.470588 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.026144 mul 0.003922 add exch dup 0.000000 sub 2.797386 mul 0.184314 add exch dup 0.000000 sub 1.934641 mul 0.470588 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.941177 mul 0.007843 add exch dup 0.150000 sub 1.176471 mul 0.603922 add exch dup 0.150000 sub 0.784314 mul 0.760784 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 4.901962 mul 0.066667 add exch dup 0.170000 sub 1.960785 mul 0.627451 add exch dup 0.170000 sub 1.176471 mul 0.776471 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 3.137255 mul 0.164706 add exch dup 0.190000 sub 1.176471 mul 0.666667 add exch dup 0.190000 sub 0.784314 mul 0.800000 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960783 mul 0.227451 add exch dup 0.210000 sub 0.784313 mul 0.690196 add exch dup 0.210000 sub 0.392157 mul 0.815686 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 2.193627 mul 0.247059 add exch dup 0.220000 sub 0.845588 mul 0.698039 add exch dup 0.220000 sub 0.526961 mul 0.819608 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.504202 mul 0.949020 add exch dup 0.540000 sub 0.280112 mul 0.968627 add exch dup 0.540000 sub 0.112045 mul 0.988235 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -4.705882 mul 0.984314 add exch dup 0.610000 sub -1.111111 mul 0.988235 add exch dup 0.610000 sub -1.437908 mul 0.996078 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -4.392156 mul 0.701961 add exch dup 0.670000 sub -1.098039 mul 0.921569 add exch dup 0.670000 sub -1.411764 mul 0.909804 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -4.117651 mul 0.482353 add exch dup 0.720000 sub -0.980393 mul 0.866667 add exch dup 0.720000 sub -1.176472 mul 0.839216 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -2.450979 mul 0.317647 add exch dup 0.760000 sub -0.588235 mul 0.827451 add exch dup 0.760000 sub -0.784313 mul 0.792157 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.219608 add exch dup 0.800000 sub -0.392157 mul 0.803922 add exch dup 0.800000 sub -0.588236 mul 0.760784 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -1.045750 mul 0.184314 add exch dup 0.820000 sub -0.261438 mul 0.796078 add exch dup 0.820000 sub -0.392156 mul 0.749020 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -2.875820 mul 0.152941 add exch dup 0.850000 sub -0.784314 mul 0.788235 add exch dup 0.850000 sub -0.915034 mul 0.737255 add exch } if dup 0.880000 gt { exch pop exch pop exch pop dup 0.880000 sub -2.222220 mul 0.066667 add exch dup 0.880000 sub -0.653594 mul 0.764706 add exch dup 0.880000 sub -0.784313 mul 0.709804 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.834424 mul 0.000000 add exch dup 0.910000 sub -8.278870 mul 0.745098 add exch dup 0.910000 sub -2.396515 mul 0.686275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.345098 exch 0.000000 exch 0.470588 exch } if pop }
endstream
endobj

320 0 obj
  3272
endobj

321 0 obj
  << /Length 322 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.329412 exch 0.000000 exch 0.439216 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.873440 mul 0.329412 add exch dup 0.000000 sub 0.053476 mul 0.000000 add exch dup 0.000000 sub 1.639929 mul 0.439216 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.968137 mul 0.521569 add exch dup 0.220000 sub 0.110294 mul 0.011765 add exch dup 0.220000 sub -0.441176 mul 0.800000 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.588235 mul 0.211765 add exch dup 0.540000 sub 1.895425 mul 0.047059 add exch dup 0.540000 sub 0.653595 mul 0.658824 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -0.751634 mul 0.176471 add exch dup 0.600000 sub 2.352941 mul 0.160784 add exch dup 0.600000 sub 0.816993 mul 0.698039 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -0.862745 mul 0.086275 add exch dup 0.720000 sub 2.784315 mul 0.443137 add exch dup 0.720000 sub 0.941177 mul 0.796078 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub 0.392157 mul 0.000000 add exch dup 0.820000 sub -1.568629 mul 0.721569 add exch dup 0.820000 sub -0.980393 mul 0.890196 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub 0.522875 mul 0.007843 add exch dup 0.840000 sub -2.875814 mul 0.690196 add exch dup 0.840000 sub -1.960782 mul 0.870588 add exch } if dup 0.870000 gt { exch pop exch pop exch pop dup 0.870000 sub 0.686274 mul 0.023529 add exch dup 0.870000 sub -3.529410 mul 0.603922 add exch dup 0.870000 sub -2.450979 mul 0.811765 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 0.980393 mul 0.050980 add exch dup 0.910000 sub -4.901965 mul 0.462745 add exch dup 0.910000 sub -3.333336 mul 0.713726 add exch } if dup 0.950000 gt { exch pop exch pop exch pop dup 0.950000 sub 1.019608 mul 0.090196 add exch dup 0.950000 sub -5.333333 mul 0.266667 add exch dup 0.950000 sub -3.607843 mul 0.580392 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.141176 exch 0.000000 exch 0.400000 exch } if pop }
endstream
endobj

322 0 obj
  2097
endobj

323 0 obj
  << /Length 324 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.066667 exch 0.152941 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.156863 mul 0.066667 add exch dup 0.000000 sub 2.300653 mul 0.152941 add exch dup 0.000000 sub 1.882353 mul 0.462745 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.745100 mul 0.090196 add exch dup 0.150000 sub 1.176475 mul 0.498039 add exch dup 0.150000 sub 0.784314 mul 0.745098 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 4.901958 mul 0.117647 add exch dup 0.160000 sub 1.764705 mul 0.509804 add exch dup 0.160000 sub 1.764705 mul 0.752941 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 2.091505 mul 0.215686 add exch dup 0.180000 sub 0.653595 mul 0.545098 add exch dup 0.180000 sub 0.653595 mul 0.788235 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960783 mul 0.278431 add exch dup 0.210000 sub 0.784313 mul 0.564706 add exch dup 0.210000 sub 0.784313 mul 0.807843 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.605392 mul 0.298039 add exch dup 0.220000 sub 0.710784 mul 0.572549 add exch dup 0.220000 sub 0.343137 mul 0.815686 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.336134 mul 0.811765 add exch dup 0.540000 sub 0.560224 mul 0.800000 add exch dup 0.540000 sub 0.224090 mul 0.925490 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -4.117651 mul 0.835294 add exch dup 0.610000 sub -0.392157 mul 0.839216 add exch dup 0.610000 sub -0.980393 mul 0.941176 add exch } if dup 0.650000 gt { exch pop exch pop exch pop dup 0.650000 sub -3.725490 mul 0.670588 add exch dup 0.650000 sub -0.261438 mul 0.823529 add exch dup 0.650000 sub -0.915033 mul 0.901961 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -3.215685 mul 0.447059 add exch dup 0.710000 sub -0.313725 mul 0.807843 add exch dup 0.710000 sub -0.784313 mul 0.847059 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -2.450979 mul 0.286275 add exch dup 0.760000 sub -0.196078 mul 0.792157 add exch dup 0.760000 sub -0.686274 mul 0.807843 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.188235 add exch dup 0.800000 sub -0.196079 mul 0.784314 add exch dup 0.800000 sub -0.392157 mul 0.780392 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -1.045751 mul 0.152941 add exch dup 0.820000 sub -0.653594 mul 0.780392 add exch dup 0.820000 sub -0.653594 mul 0.772549 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -1.725492 mul 0.121569 add exch dup 0.850000 sub -1.098040 mul 0.760784 add exch dup 0.850000 sub -0.941177 mul 0.752941 add exch } if dup 0.900000 gt { exch pop exch pop exch pop dup 0.900000 sub -2.352930 mul 0.035294 add exch dup 0.900000 sub -1.568619 mul 0.705882 add exch dup 0.900000 sub -1.568619 mul 0.705882 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.311548 mul 0.011765 add exch dup 0.910000 sub -7.668848 mul 0.690196 add exch dup 0.910000 sub -2.614380 mul 0.690196 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.309804 exch 0.000000 exch 0.454902 exch } if pop }
endstream
endobj

324 0 obj
  3272
endobj

325 0 obj
  << /Length 326 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.058824 exch 0.152941 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.156863 mul 0.058824 add exch dup 0.000000 sub 2.352941 mul 0.152941 add exch dup 0.000000 sub 1.882353 mul 0.466667 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 3.137258 mul 0.082353 add exch dup 0.150000 sub 1.176472 mul 0.505882 add exch dup 0.150000 sub 1.176472 mul 0.749020 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 3.267974 mul 0.113725 add exch dup 0.160000 sub 1.176471 mul 0.517647 add exch dup 0.160000 sub 1.045752 mul 0.760784 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 3.137256 mul 0.211765 add exch dup 0.190000 sub 1.176471 mul 0.552941 add exch dup 0.190000 sub 0.784314 mul 0.792157 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960783 mul 0.274510 add exch dup 0.210000 sub 0.784313 mul 0.576471 add exch dup 0.210000 sub 0.784313 mul 0.807843 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.666667 mul 0.294118 add exch dup 0.220000 sub 0.723039 mul 0.584314 add exch dup 0.220000 sub 0.367647 mul 0.815686 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.336134 mul 0.827451 add exch dup 0.540000 sub 0.504202 mul 0.815686 add exch dup 0.540000 sub 0.168067 mul 0.933333 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -4.509808 mul 0.850980 add exch dup 0.610000 sub -0.392157 mul 0.850980 add exch dup 0.610000 sub -1.078432 mul 0.945098 add exch } if dup 0.650000 gt { exch pop exch pop exch pop dup 0.650000 sub -3.725490 mul 0.670588 add exch dup 0.650000 sub -0.392157 mul 0.835294 add exch dup 0.650000 sub -0.915033 mul 0.901961 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -3.215685 mul 0.447059 add exch dup 0.710000 sub -0.313725 mul 0.811765 add exch dup 0.710000 sub -0.784313 mul 0.847059 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -2.450979 mul 0.286275 add exch dup 0.760000 sub -0.196078 mul 0.796078 add exch dup 0.760000 sub -0.686274 mul 0.807843 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.188235 add exch dup 0.800000 sub -0.196079 mul 0.788235 add exch dup 0.800000 sub -0.392157 mul 0.780392 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -1.045751 mul 0.152941 add exch dup 0.820000 sub -0.653594 mul 0.784314 add exch dup 0.820000 sub -0.653594 mul 0.772549 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -1.725492 mul 0.121569 add exch dup 0.850000 sub -1.019609 mul 0.764706 add exch dup 0.850000 sub -0.941177 mul 0.752941 add exch } if dup 0.900000 gt { exch pop exch pop exch pop dup 0.900000 sub -2.745085 mul 0.035294 add exch dup 0.900000 sub -1.568619 mul 0.713726 add exch dup 0.900000 sub -1.568619 mul 0.705882 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.355121 mul 0.007843 add exch dup 0.910000 sub -7.755994 mul 0.698039 add exch dup 0.910000 sub -2.570807 mul 0.690196 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.309804 exch 0.000000 exch 0.458824 exch } if pop }
endstream
endobj

326 0 obj
  3272
endobj

327 0 obj
  << /Length 328 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.262745 exch 0.035294 exch 0.447059 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.732026 mul 0.262745 add exch dup 0.000000 sub 0.601307 mul 0.035294 add exch dup 0.000000 sub 1.725490 mul 0.447059 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 1.568629 mul 0.372549 add exch dup 0.150000 sub 0.392157 mul 0.125490 add exch dup 0.150000 sub 1.568629 mul 0.705882 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 1.470588 mul 0.388235 add exch dup 0.160000 sub 0.392157 mul 0.129412 add exch dup 0.160000 sub 1.568627 mul 0.721569 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.447059 add exch dup 0.200000 sub 0.196078 mul 0.145098 add exch dup 0.200000 sub 0.980392 mul 0.784314 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.330882 mul 0.466667 add exch dup 0.220000 sub 0.257353 mul 0.149020 add exch dup 0.220000 sub -0.245098 mul 0.803922 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.392157 mul 0.360784 add exch dup 0.540000 sub 1.568628 mul 0.231373 add exch dup 0.540000 sub 0.560224 mul 0.725490 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.960786 mul 0.333333 add exch dup 0.610000 sub 2.549022 mul 0.341176 add exch dup 0.610000 sub 0.588236 mul 0.764706 add exch } if dup 0.650000 gt { exch pop exch pop exch pop dup 0.650000 sub -1.470587 mul 0.254902 add exch dup 0.650000 sub 2.009803 mul 0.443137 add exch dup 0.650000 sub 0.490196 mul 0.788235 add exch } if dup 0.730000 gt { exch pop exch pop exch pop dup 0.730000 sub -1.241830 mul 0.137255 add exch dup 0.730000 sub 1.633987 mul 0.603922 add exch dup 0.730000 sub 0.457516 mul 0.827451 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.915034 mul 0.062745 add exch dup 0.790000 sub 1.176472 mul 0.701961 add exch dup 0.790000 sub 0.261438 mul 0.854902 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub 0.000000 mul 0.035294 add exch dup 0.820000 sub -1.568629 mul 0.737255 add exch dup 0.820000 sub -1.176472 mul 0.862745 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub 0.098039 mul 0.035294 add exch dup 0.840000 sub -2.156862 mul 0.705882 add exch dup 0.840000 sub -1.470587 mul 0.839216 add exch } if dup 0.880000 gt { exch pop exch pop exch pop dup 0.880000 sub 0.000000 mul 0.039216 add exch dup 0.880000 sub -3.398689 mul 0.619608 add exch dup 0.880000 sub -2.483657 mul 0.780392 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.568628 mul 0.039216 add exch dup 0.910000 sub -5.751636 mul 0.517647 add exch dup 0.910000 sub -3.224402 mul 0.705882 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.180392 exch 0.000000 exch 0.415686 exch } if pop }
endstream
endobj

328 0 obj
  2873
endobj

329 0 obj
  << /Length 330 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.101961 exch 0.129412 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.287582 mul 0.101961 add exch dup 0.000000 sub 1.986928 mul 0.129412 add exch dup 0.000000 sub 1.830065 mul 0.462745 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.392157 mul 0.145098 add exch dup 0.150000 sub 0.000000 mul 0.427451 add exch dup 0.150000 sub 0.000000 mul 0.737255 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 4.901958 mul 0.149020 add exch dup 0.160000 sub 1.960783 mul 0.427451 add exch dup 0.160000 sub 2.156862 mul 0.737255 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 2.091505 mul 0.247059 add exch dup 0.180000 sub 0.653595 mul 0.466667 add exch dup 0.180000 sub 0.784314 mul 0.780392 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960783 mul 0.309804 add exch dup 0.210000 sub 0.784313 mul 0.486275 add exch dup 0.210000 sub 0.784313 mul 0.803922 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.250000 mul 0.329412 add exch dup 0.220000 sub 0.625000 mul 0.494118 add exch dup 0.220000 sub 0.245098 mul 0.811765 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.168067 mul 0.729412 add exch dup 0.540000 sub 0.728291 mul 0.694118 add exch dup 0.540000 sub 0.280112 mul 0.890196 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -4.705886 mul 0.741176 add exch dup 0.610000 sub 0.196079 mul 0.745098 add exch dup 0.610000 sub -0.980393 mul 0.909804 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -3.193278 mul 0.647059 add exch dup 0.630000 sub 0.168067 mul 0.749020 add exch dup 0.630000 sub -0.560224 mul 0.890196 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -3.215685 mul 0.423529 add exch dup 0.700000 sub 0.078431 mul 0.760784 add exch dup 0.700000 sub -0.627451 mul 0.850980 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.960784 mul 0.262745 add exch dup 0.750000 sub 0.156863 mul 0.764706 add exch dup 0.750000 sub -0.392157 mul 0.819608 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.164706 add exch dup 0.800000 sub 0.000000 mul 0.772549 add exch dup 0.800000 sub -0.392157 mul 0.800000 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.784313 mul 0.129412 add exch dup 0.820000 sub -0.784313 mul 0.772549 add exch dup 0.820000 sub -0.686274 mul 0.792157 add exch } if dup 0.860000 gt { exch pop exch pop exch pop dup 0.860000 sub -1.647058 mul 0.098039 add exch dup 0.860000 sub -1.647058 mul 0.741176 add exch dup 0.860000 sub -1.411764 mul 0.764706 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.962964 mul 0.015686 add exch dup 0.910000 sub -7.320264 mul 0.658824 add exch dup 0.910000 sub -2.745099 mul 0.694118 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.282353 exch 0.000000 exch 0.447059 exch } if pop }
endstream
endobj

330 0 obj
  3070
endobj

331 0 obj
  << /Length 332 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.282353 exch 0.027451 exch 0.443137 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.758170 mul 0.282353 add exch dup 0.000000 sub 0.470588 mul 0.027451 add exch dup 0.000000 sub 1.725490 mul 0.443137 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 1.960786 mul 0.396078 add exch dup 0.150000 sub 0.392157 mul 0.098039 add exch dup 0.150000 sub 1.960786 mul 0.701961 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 1.176470 mul 0.415686 add exch dup 0.160000 sub 0.196078 mul 0.101961 add exch dup 0.160000 sub 1.568627 mul 0.721569 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.462745 add exch dup 0.200000 sub 0.196078 mul 0.109804 add exch dup 0.200000 sub 0.980392 mul 0.784314 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.502451 mul 0.482353 add exch dup 0.220000 sub 0.220588 mul 0.113725 add exch dup 0.220000 sub -0.294118 mul 0.803922 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.522876 mul 0.321569 add exch dup 0.540000 sub 1.830065 mul 0.184314 add exch dup 0.540000 sub 0.588235 mul 0.709804 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub 0.000000 mul 0.290196 add exch dup 0.600000 sub 0.784314 mul 0.294118 add exch dup 0.600000 sub 0.392157 mul 0.745098 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.647059 mul 0.290196 add exch dup 0.610000 sub 2.745097 mul 0.301961 add exch dup 0.610000 sub 0.784313 mul 0.749020 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -1.400560 mul 0.207843 add exch dup 0.660000 sub 2.296919 mul 0.439216 add exch dup 0.660000 sub 0.616247 mul 0.788235 add exch } if dup 0.730000 gt { exch pop exch pop exch pop dup 0.730000 sub -0.980392 mul 0.109804 add exch dup 0.730000 sub 1.633987 mul 0.600000 add exch dup 0.730000 sub 0.457516 mul 0.831373 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.784315 mul 0.050980 add exch dup 0.790000 sub 1.176472 mul 0.698039 add exch dup 0.790000 sub 0.392157 mul 0.858824 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub 0.196079 mul 0.027451 add exch dup 0.820000 sub -1.568629 mul 0.733333 add exch dup 0.820000 sub -1.176472 mul 0.870588 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub 0.098039 mul 0.031373 add exch dup 0.840000 sub -2.156862 mul 0.701961 add exch dup 0.840000 sub -1.470587 mul 0.847059 add exch } if dup 0.880000 gt { exch pop exch pop exch pop dup 0.880000 sub 0.261438 mul 0.035294 add exch dup 0.880000 sub -3.790846 mul 0.615686 add exch dup 0.880000 sub -2.745095 mul 0.788235 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.437909 mul 0.043137 add exch dup 0.910000 sub -5.577344 mul 0.501961 add exch dup 0.910000 sub -3.267975 mul 0.705882 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.172549 exch 0.000000 exch 0.411765 exch } if pop }
endstream
endobj

332 0 obj
  3067
endobj

333 0 obj
  << /Length 334 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.043137 exch 0.164706 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.104575 mul 0.043137 add exch dup 0.000000 sub 2.483660 mul 0.164706 add exch dup 0.000000 sub 1.908497 mul 0.466667 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 3.921572 mul 0.058824 add exch dup 0.150000 sub 1.568629 mul 0.537255 add exch dup 0.150000 sub 1.176472 mul 0.752941 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 3.267974 mul 0.098039 add exch dup 0.160000 sub 1.176471 mul 0.552941 add exch dup 0.160000 sub 0.915033 mul 0.764706 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 3.137256 mul 0.196078 add exch dup 0.190000 sub 1.176471 mul 0.588235 add exch dup 0.190000 sub 0.784314 mul 0.792157 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960783 mul 0.258824 add exch dup 0.210000 sub 0.784313 mul 0.611765 add exch dup 0.210000 sub 0.784313 mul 0.807843 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.825980 mul 0.278431 add exch dup 0.220000 sub 0.759804 mul 0.619608 add exch dup 0.220000 sub 0.416667 mul 0.815686 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.392157 mul 0.862745 add exch dup 0.540000 sub 0.448179 mul 0.862745 add exch dup 0.540000 sub 0.168067 mul 0.949020 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -4.156861 mul 0.890196 add exch dup 0.610000 sub -0.627451 mul 0.894118 add exch dup 0.610000 sub -1.098039 mul 0.960784 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -4.392161 mul 0.682353 add exch dup 0.660000 sub -0.627452 mul 0.862745 add exch dup 0.660000 sub -1.254903 mul 0.905882 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -3.294117 mul 0.462745 add exch dup 0.710000 sub -0.470588 mul 0.831373 add exch dup 0.710000 sub -0.862745 mul 0.843137 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -2.450979 mul 0.298039 add exch dup 0.760000 sub -0.392157 mul 0.807843 add exch dup 0.760000 sub -0.588235 mul 0.800000 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.200000 add exch dup 0.800000 sub -0.196079 mul 0.792157 add exch dup 0.800000 sub -0.588236 mul 0.776471 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -1.045750 mul 0.164706 add exch dup 0.820000 sub -0.522875 mul 0.788235 add exch dup 0.820000 sub -0.522875 mul 0.764706 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -2.156865 mul 0.133333 add exch dup 0.850000 sub -1.078432 mul 0.772549 add exch dup 0.850000 sub -0.980393 mul 0.749020 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -1.960780 mul 0.047059 add exch dup 0.890000 sub -0.980390 mul 0.729412 add exch dup 0.890000 sub -0.980390 mul 0.709804 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.485840 mul 0.007843 add exch dup 0.910000 sub -7.886713 mul 0.709804 add exch dup 0.910000 sub -2.527234 mul 0.690196 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.321569 exch 0.000000 exch 0.462745 exch } if pop }
endstream
endobj

334 0 obj
  3272
endobj

335 0 obj
  << /Length 336 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.243137 exch 0.050980 exch 0.447059 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.653595 mul 0.243137 add exch dup 0.000000 sub 0.784314 mul 0.050980 add exch dup 0.000000 sub 1.751634 mul 0.447059 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 1.176471 mul 0.341176 add exch dup 0.150000 sub 0.392157 mul 0.168627 add exch dup 0.150000 sub 1.176471 mul 0.709804 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 2.091503 mul 0.364706 add exch dup 0.170000 sub 0.522876 mul 0.176471 add exch dup 0.170000 sub 1.699346 mul 0.733333 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.427451 add exch dup 0.200000 sub 0.196078 mul 0.192157 add exch dup 0.200000 sub 0.980392 mul 0.784314 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.122549 mul 0.447059 add exch dup 0.220000 sub 0.306373 mul 0.196078 add exch dup 0.220000 sub -0.183824 mul 0.803922 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.280112 mul 0.407843 add exch dup 0.540000 sub 1.456583 mul 0.294118 add exch dup 0.540000 sub 0.560224 mul 0.745098 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -2.549022 mul 0.388235 add exch dup 0.610000 sub 2.549022 mul 0.396078 add exch dup 0.610000 sub 0.392157 mul 0.784314 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -1.911765 mul 0.337255 add exch dup 0.630000 sub 2.009804 mul 0.447059 add exch dup 0.630000 sub 0.392157 mul 0.792157 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -1.400560 mul 0.184314 add exch dup 0.710000 sub 1.400560 mul 0.607843 add exch dup 0.710000 sub 0.280112 mul 0.823529 add exch } if dup 0.780000 gt { exch pop exch pop exch pop dup 0.780000 sub -0.882353 mul 0.086275 add exch dup 0.780000 sub 0.882352 mul 0.705882 add exch dup 0.780000 sub 0.196078 mul 0.843137 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub 0.000000 mul 0.050980 add exch dup 0.820000 sub -1.568629 mul 0.741176 add exch dup 0.820000 sub -1.176472 mul 0.850980 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub -0.196078 mul 0.050980 add exch dup 0.840000 sub -2.156862 mul 0.709804 add exch dup 0.840000 sub -1.470587 mul 0.827451 add exch } if dup 0.880000 gt { exch pop exch pop exch pop dup 0.880000 sub -0.130719 mul 0.043137 add exch dup 0.880000 sub -3.006533 mul 0.623529 add exch dup 0.880000 sub -2.222220 mul 0.768627 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.742920 mul 0.039216 add exch dup 0.910000 sub -5.925928 mul 0.533333 add exch dup 0.910000 sub -3.137256 mul 0.701961 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.196078 exch 0.000000 exch 0.419608 exch } if pop }
endstream
endobj

336 0 obj
  2875
endobj

337 0 obj
  << /Length 338 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.000000 exch 0.188235 exch 0.470588 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.000000 mul 0.000000 add exch dup 0.000000 sub 2.849673 mul 0.188235 add exch dup 0.000000 sub 1.934641 mul 0.470588 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 3.137258 mul 0.000000 add exch dup 0.150000 sub 1.176472 mul 0.615686 add exch dup 0.150000 sub 0.784314 mul 0.760784 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 3.137255 mul 0.031373 add exch dup 0.160000 sub 1.225490 mul 0.627451 add exch dup 0.160000 sub 0.735294 mul 0.768627 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 3.137255 mul 0.282353 add exch dup 0.240000 sub 1.176470 mul 0.725490 add exch dup 0.240000 sub 0.784314 mul 0.827451 add exch } if dup 0.310000 gt { exch pop exch pop exch pop dup 0.310000 sub 2.577031 mul 0.501961 add exch dup 0.310000 sub 1.008403 mul 0.807843 add exch dup 0.310000 sub 0.616247 mul 0.882353 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub 2.287581 mul 0.682353 add exch dup 0.380000 sub 0.849673 mul 0.878431 add exch dup 0.380000 sub 0.522876 mul 0.925490 add exch } if dup 0.440000 gt { exch pop exch pop exch pop dup 0.440000 sub 1.400560 mul 0.819608 add exch dup 0.440000 sub 0.560224 mul 0.929412 add exch dup 0.440000 sub 0.336134 mul 0.956863 add exch } if dup 0.510000 gt { exch pop exch pop exch pop dup 0.510000 sub 1.254902 mul 0.917647 add exch dup 0.510000 sub 0.470588 mul 0.968627 add exch dup 0.510000 sub 0.313725 mul 0.980392 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub 0.392157 mul 0.980392 add exch dup 0.560000 sub 0.156863 mul 0.992157 add exch dup 0.560000 sub 0.078431 mul 0.996078 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -5.000004 mul 1.000000 add exch dup 0.610000 sub -1.274511 mul 1.000000 add exch dup 0.610000 sub -1.568629 mul 1.000000 add exch } if dup 0.650000 gt { exch pop exch pop exch pop dup 0.650000 sub -3.977588 mul 0.800000 add exch dup 0.650000 sub -1.008403 mul 0.949020 add exch dup 0.650000 sub -1.232492 mul 0.937255 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -3.193278 mul 0.521569 add exch dup 0.720000 sub -0.784314 mul 0.878431 add exch dup 0.720000 sub -1.008403 mul 0.850980 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -3.215689 mul 0.298039 add exch dup 0.790000 sub -0.784314 mul 0.823529 add exch dup 0.790000 sub -1.019609 mul 0.780392 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub -2.549018 mul 0.137255 add exch dup 0.840000 sub -0.686274 mul 0.784314 add exch dup 0.840000 sub -0.784313 mul 0.729412 add exch } if dup 0.880000 gt { exch pop exch pop exch pop dup 0.880000 sub -1.176469 mul 0.035294 add exch dup 0.880000 sub -0.261438 mul 0.756863 add exch dup 0.880000 sub -0.392156 mul 0.698039 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.877997 mul 0.000000 add exch dup 0.910000 sub -8.322443 mul 0.749020 add exch dup 0.910000 sub -2.396515 mul 0.686275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.349020 exch 0.000000 exch 0.470588 exch } if pop }
endstream
endobj

338 0 obj
  3266
endobj

339 0 obj
  << /Length 340 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.211765 exch 0.066667 exch 0.450980 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.549020 mul 0.211765 add exch dup 0.000000 sub 1.071895 mul 0.066667 add exch dup 0.000000 sub 1.751634 mul 0.450980 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.156863 mul 0.294118 add exch dup 0.150000 sub 0.588235 mul 0.227451 add exch dup 0.150000 sub 1.764706 mul 0.713726 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 2.091503 mul 0.337255 add exch dup 0.170000 sub 0.653595 mul 0.239216 add exch dup 0.170000 sub 1.437908 mul 0.749020 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.400000 add exch dup 0.200000 sub 0.196078 mul 0.258824 add exch dup 0.200000 sub 0.784314 mul 0.792157 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.196078 mul 0.419608 add exch dup 0.220000 sub 0.379902 mul 0.262745 add exch dup 0.220000 sub -0.085784 mul 0.807843 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.224090 mul 0.482353 add exch dup 0.540000 sub 1.288515 mul 0.384314 add exch dup 0.540000 sub 0.448179 mul 0.780392 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -2.647061 mul 0.466667 add exch dup 0.610000 sub 1.764708 mul 0.474510 add exch dup 0.610000 sub 0.196079 mul 0.811765 add exch } if dup 0.650000 gt { exch pop exch pop exch pop dup 0.650000 sub -2.009803 mul 0.360784 add exch dup 0.650000 sub 1.372548 mul 0.545098 add exch dup 0.650000 sub 0.147059 mul 0.819608 add exch } if dup 0.730000 gt { exch pop exch pop exch pop dup 0.730000 sub -1.633987 mul 0.200000 add exch dup 0.730000 sub 1.176471 mul 0.654902 add exch dup 0.730000 sub 0.065359 mul 0.831373 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.101961 add exch dup 0.790000 sub 0.784314 mul 0.725490 add exch dup 0.790000 sub 0.130719 mul 0.835294 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.261438 mul 0.066667 add exch dup 0.820000 sub -1.045750 mul 0.749020 add exch dup 0.820000 sub -0.784313 mul 0.839216 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -0.522876 mul 0.058824 add exch dup 0.850000 sub -2.875820 mul 0.717647 add exch dup 0.850000 sub -2.091505 mul 0.815686 add exch } if dup 0.880000 gt { exch pop exch pop exch pop dup 0.880000 sub -0.392156 mul 0.043137 add exch dup 0.880000 sub -2.222220 mul 0.631373 add exch dup 0.880000 sub -1.699345 mul 0.752941 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.047931 mul 0.031373 add exch dup 0.910000 sub -6.274512 mul 0.564706 add exch dup 0.910000 sub -3.093683 mul 0.701961 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.215686 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

340 0 obj
  2875
endobj

341 0 obj
  << /Length 342 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.023529 exch 0.176471 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.052288 mul 0.023529 add exch dup 0.000000 sub 2.666667 mul 0.176471 add exch dup 0.000000 sub 1.934641 mul 0.466667 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 5.098044 mul 0.031373 add exch dup 0.150000 sub 1.960786 mul 0.576471 add exch dup 0.150000 sub 1.568629 mul 0.756863 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 3.267974 mul 0.082353 add exch dup 0.160000 sub 1.176471 mul 0.596078 add exch dup 0.160000 sub 0.784314 mul 0.772549 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 3.137255 mul 0.180392 add exch dup 0.190000 sub 1.176471 mul 0.631373 add exch dup 0.190000 sub 0.980392 mul 0.796078 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960785 mul 0.243137 add exch dup 0.210000 sub 0.784313 mul 0.654902 add exch dup 0.210000 sub 0.392157 mul 0.815686 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 2.022059 mul 0.262745 add exch dup 0.220000 sub 0.808823 mul 0.662745 add exch dup 0.220000 sub 0.465686 mul 0.819608 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.504202 mul 0.909804 add exch dup 0.540000 sub 0.336134 mul 0.921569 add exch dup 0.540000 sub 0.168067 mul 0.968627 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -5.019606 mul 0.945098 add exch dup 0.610000 sub -1.019608 mul 0.945098 add exch dup 0.610000 sub -1.490196 mul 0.980392 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -3.660131 mul 0.694118 add exch dup 0.660000 sub -0.718954 mul 0.894118 add exch dup 0.660000 sub -1.111111 mul 0.905882 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -4.117651 mul 0.474510 add exch dup 0.720000 sub -0.784314 mul 0.850980 add exch dup 0.720000 sub -1.176472 mul 0.839216 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -2.450979 mul 0.309804 add exch dup 0.760000 sub -0.490196 mul 0.819608 add exch dup 0.760000 sub -0.686274 mul 0.792157 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.211765 add exch dup 0.800000 sub -0.392157 mul 0.800000 add exch dup 0.800000 sub -0.588236 mul 0.764706 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -1.045750 mul 0.176471 add exch dup 0.820000 sub -0.392156 mul 0.792157 add exch dup 0.820000 sub -0.392156 mul 0.752941 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -2.156865 mul 0.145098 add exch dup 0.850000 sub -0.784314 mul 0.780392 add exch dup 0.850000 sub -0.882354 mul 0.741176 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -2.745092 mul 0.058824 add exch dup 0.890000 sub -0.980390 mul 0.749020 add exch dup 0.890000 sub -0.980390 mul 0.705882 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.703705 mul 0.003922 add exch dup 0.910000 sub -8.104578 mul 0.729412 add exch dup 0.910000 sub -2.440088 mul 0.686275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.337255 exch 0.000000 exch 0.466667 exch } if pop }
endstream
endobj

342 0 obj
  3272
endobj

343 0 obj
  << /Length 344 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.325490 exch 0.003922 exch 0.439216 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.862745 mul 0.325490 add exch dup 0.000000 sub 0.104575 mul 0.003922 add exch dup 0.000000 sub 1.673203 mul 0.439216 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.784314 mul 0.454902 add exch dup 0.150000 sub 0.000000 mul 0.019608 add exch dup 0.150000 sub 1.372549 mul 0.690196 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 1.176471 mul 0.470588 add exch dup 0.170000 sub 0.130719 mul 0.019608 add exch dup 0.170000 sub 2.091503 mul 0.717647 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.588235 mul 0.505882 add exch dup 0.200000 sub 0.000000 mul 0.023529 add exch dup 0.200000 sub 0.980392 mul 0.780392 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.919118 mul 0.517647 add exch dup 0.220000 sub 0.122549 mul 0.023529 add exch dup 0.220000 sub -0.428922 mul 0.800000 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.588235 mul 0.223529 add exch dup 0.540000 sub 1.830065 mul 0.062745 add exch dup 0.540000 sub 0.653595 mul 0.662745 add exch } if dup 0.600000 gt { exch pop exch pop exch pop dup 0.600000 sub -1.176472 mul 0.188235 add exch dup 0.600000 sub 3.137258 mul 0.172549 add exch dup 0.600000 sub 1.176472 mul 0.701961 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.064426 mul 0.176471 add exch dup 0.610000 sub 3.193278 mul 0.203922 add exch dup 0.610000 sub 1.064426 mul 0.713726 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -0.915033 mul 0.101961 add exch dup 0.680000 sub 2.679739 mul 0.427451 add exch dup 0.680000 sub 0.915033 mul 0.788235 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -0.627451 mul 0.047059 add exch dup 0.740000 sub 1.960784 mul 0.588235 add exch dup 0.740000 sub 0.627451 mul 0.843137 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.392157 mul 0.015686 add exch dup 0.790000 sub 1.176472 mul 0.686275 add exch dup 0.790000 sub 0.392157 mul 0.874510 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub 0.196079 mul 0.003922 add exch dup 0.820000 sub -1.568629 mul 0.721569 add exch dup 0.820000 sub -0.980393 mul 0.886275 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub 0.522875 mul 0.007843 add exch dup 0.840000 sub -2.875814 mul 0.690196 add exch dup 0.840000 sub -1.960782 mul 0.866667 add exch } if dup 0.870000 gt { exch pop exch pop exch pop dup 0.870000 sub 0.686274 mul 0.023529 add exch dup 0.870000 sub -3.529410 mul 0.603922 add exch dup 0.870000 sub -2.450979 mul 0.807843 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.045752 mul 0.050980 add exch dup 0.910000 sub -5.141614 mul 0.462745 add exch dup 0.910000 sub -3.442267 mul 0.709804 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.145098 exch 0.000000 exch 0.400000 exch } if pop }
endstream
endobj

344 0 obj
  3068
endobj

345 0 obj
  << /Length 346 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.039216 exch 0.164706 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.104575 mul 0.039216 add exch dup 0.000000 sub 2.535948 mul 0.164706 add exch dup 0.000000 sub 1.908497 mul 0.466667 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 3.921572 mul 0.054902 add exch dup 0.150000 sub 1.568629 mul 0.545098 add exch dup 0.150000 sub 1.176472 mul 0.752941 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 3.267974 mul 0.094118 add exch dup 0.160000 sub 1.307189 mul 0.560784 add exch dup 0.160000 sub 0.915033 mul 0.764706 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 3.137256 mul 0.192157 add exch dup 0.190000 sub 1.176471 mul 0.600000 add exch dup 0.190000 sub 0.784314 mul 0.792157 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960783 mul 0.254902 add exch dup 0.210000 sub 0.784313 mul 0.623529 add exch dup 0.210000 sub 0.784313 mul 0.807843 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.875000 mul 0.274510 add exch dup 0.220000 sub 0.772059 mul 0.631373 add exch dup 0.220000 sub 0.428922 mul 0.815686 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.448179 mul 0.874510 add exch dup 0.540000 sub 0.392157 mul 0.878431 add exch dup 0.540000 sub 0.168067 mul 0.952941 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -4.470587 mul 0.905882 add exch dup 0.610000 sub -0.705882 mul 0.905882 add exch dup 0.610000 sub -1.254902 mul 0.964706 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -4.470593 mul 0.682353 add exch dup 0.660000 sub -0.705883 mul 0.870588 add exch dup 0.660000 sub -1.176472 mul 0.901961 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -3.215685 mul 0.458824 add exch dup 0.710000 sub -0.549019 mul 0.835294 add exch dup 0.710000 sub -0.941176 mul 0.843137 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -2.450979 mul 0.298039 add exch dup 0.760000 sub -0.392157 mul 0.807843 add exch dup 0.760000 sub -0.588235 mul 0.796078 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.200000 add exch dup 0.800000 sub -0.196079 mul 0.792157 add exch dup 0.800000 sub -0.588236 mul 0.772549 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -1.045750 mul 0.164706 add exch dup 0.820000 sub -0.522875 mul 0.788235 add exch dup 0.820000 sub -0.522875 mul 0.760784 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -2.156865 mul 0.133333 add exch dup 0.850000 sub -0.882354 mul 0.772549 add exch dup 0.850000 sub -0.882354 mul 0.745098 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -2.156858 mul 0.047059 add exch dup 0.890000 sub -0.980390 mul 0.737255 add exch dup 0.890000 sub -0.980390 mul 0.709804 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.572986 mul 0.003922 add exch dup 0.910000 sub -7.973859 mul 0.717647 add exch dup 0.910000 sub -2.527234 mul 0.690196 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.325490 exch 0.000000 exch 0.462745 exch } if pop }
endstream
endobj

346 0 obj
  3272
endobj

347 0 obj
  << /Length 348 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.274510 exch 0.031373 exch 0.443137 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.758170 mul 0.274510 add exch dup 0.000000 sub 0.496732 mul 0.031373 add exch dup 0.000000 sub 1.725490 mul 0.443137 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 1.960786 mul 0.388235 add exch dup 0.150000 sub 0.392157 mul 0.105882 add exch dup 0.150000 sub 1.960786 mul 0.701961 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 1.176470 mul 0.407843 add exch dup 0.160000 sub 0.294118 mul 0.109804 add exch dup 0.160000 sub 1.568627 mul 0.721569 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.454902 add exch dup 0.200000 sub 0.196079 mul 0.121569 add exch dup 0.200000 sub 0.980392 mul 0.784314 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.441176 mul 0.474510 add exch dup 0.220000 sub 0.232843 mul 0.125490 add exch dup 0.220000 sub -0.281863 mul 0.803922 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.392157 mul 0.333333 add exch dup 0.540000 sub 1.624650 mul 0.200000 add exch dup 0.540000 sub 0.560224 mul 0.713726 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.647059 mul 0.305882 add exch dup 0.610000 sub 2.509803 mul 0.313726 add exch dup 0.610000 sub 0.705882 mul 0.752941 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -1.456583 mul 0.223529 add exch dup 0.660000 sub 2.296919 mul 0.439216 add exch dup 0.660000 sub 0.616247 mul 0.788235 add exch } if dup 0.730000 gt { exch pop exch pop exch pop dup 0.730000 sub -1.111111 mul 0.121569 add exch dup 0.730000 sub 1.633987 mul 0.600000 add exch dup 0.730000 sub 0.392157 mul 0.831373 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.784314 mul 0.054902 add exch dup 0.790000 sub 1.176472 mul 0.698039 add exch dup 0.790000 sub 0.392157 mul 0.854902 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub 0.000000 mul 0.031373 add exch dup 0.820000 sub -1.568629 mul 0.733333 add exch dup 0.820000 sub -1.176472 mul 0.866667 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub 0.196078 mul 0.031373 add exch dup 0.840000 sub -2.156862 mul 0.701961 add exch dup 0.840000 sub -1.470587 mul 0.843137 add exch } if dup 0.880000 gt { exch pop exch pop exch pop dup 0.880000 sub 0.130719 mul 0.039216 add exch dup 0.880000 sub -3.660127 mul 0.615686 add exch dup 0.880000 sub -2.614376 mul 0.784314 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.481482 mul 0.043137 add exch dup 0.910000 sub -5.620917 mul 0.505882 add exch dup 0.910000 sub -3.267975 mul 0.705882 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.176471 exch 0.000000 exch 0.411765 exch } if pop }
endstream
endobj

348 0 obj
  2873
endobj

349 0 obj
  << /Length 350 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.219608 exch 0.062745 exch 0.450980 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.601307 mul 0.219608 add exch dup 0.000000 sub 0.967320 mul 0.062745 add exch dup 0.000000 sub 1.751634 mul 0.450980 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 1.960785 mul 0.309804 add exch dup 0.150000 sub 0.588235 mul 0.207843 add exch dup 0.150000 sub 1.568628 mul 0.713726 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 2.091503 mul 0.349020 add exch dup 0.170000 sub 0.522876 mul 0.219608 add exch dup 0.170000 sub 1.568627 mul 0.745098 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.411765 add exch dup 0.200000 sub 0.196078 mul 0.235294 add exch dup 0.200000 sub 0.784314 mul 0.792157 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.085784 mul 0.431373 add exch dup 0.220000 sub 0.355392 mul 0.239216 add exch dup 0.220000 sub -0.122549 mul 0.807843 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.224090 mul 0.458824 add exch dup 0.540000 sub 1.400560 mul 0.352941 add exch dup 0.540000 sub 0.504202 mul 0.768627 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -2.875820 mul 0.443137 add exch dup 0.610000 sub 2.222225 mul 0.450980 add exch dup 0.610000 sub 0.261438 mul 0.803922 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -2.009803 mul 0.356863 add exch dup 0.640000 sub 1.519607 mul 0.517647 add exch dup 0.640000 sub 0.196078 mul 0.811765 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -1.633988 mul 0.196078 add exch dup 0.720000 sub 1.307191 mul 0.639216 add exch dup 0.720000 sub 0.196079 mul 0.827451 add exch } if dup 0.780000 gt { exch pop exch pop exch pop dup 0.780000 sub -0.882352 mul 0.098039 add exch dup 0.780000 sub 0.686274 mul 0.717647 add exch dup 0.780000 sub 0.098039 mul 0.839216 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.130719 mul 0.062745 add exch dup 0.820000 sub -1.045750 mul 0.745098 add exch dup 0.820000 sub -0.784313 mul 0.843137 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -0.392157 mul 0.058824 add exch dup 0.850000 sub -2.875820 mul 0.713726 add exch dup 0.850000 sub -2.091505 mul 0.819608 add exch } if dup 0.880000 gt { exch pop exch pop exch pop dup 0.880000 sub -0.392156 mul 0.047059 add exch dup 0.880000 sub -2.483657 mul 0.627451 add exch dup 0.880000 sub -1.830063 mul 0.756863 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.917212 mul 0.035294 add exch dup 0.910000 sub -6.143793 mul 0.552941 add exch dup 0.910000 sub -3.093683 mul 0.701961 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.207843 exch 0.000000 exch 0.423529 exch } if pop }
endstream
endobj

350 0 obj
  2875
endobj

351 0 obj
  << /Length 352 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.054902 exch 0.156863 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.130719 mul 0.054902 add exch dup 0.000000 sub 2.405229 mul 0.156863 add exch dup 0.000000 sub 1.882353 mul 0.466667 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 3.529415 mul 0.074510 add exch dup 0.150000 sub 1.176472 mul 0.517647 add exch dup 0.150000 sub 1.176472 mul 0.749020 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 3.267974 mul 0.109804 add exch dup 0.160000 sub 1.176471 mul 0.529412 add exch dup 0.160000 sub 1.045752 mul 0.760784 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 3.137256 mul 0.207843 add exch dup 0.190000 sub 1.176471 mul 0.564706 add exch dup 0.190000 sub 0.784314 mul 0.792157 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960783 mul 0.270588 add exch dup 0.210000 sub 0.784313 mul 0.588235 add exch dup 0.210000 sub 0.784313 mul 0.807843 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.715686 mul 0.290196 add exch dup 0.220000 sub 0.735294 mul 0.596078 add exch dup 0.220000 sub 0.379902 mul 0.815686 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.336134 mul 0.839216 add exch dup 0.540000 sub 0.504202 mul 0.831373 add exch dup 0.540000 sub 0.224090 mul 0.937255 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -4.705886 mul 0.862745 add exch dup 0.610000 sub -0.588236 mul 0.866667 add exch dup 0.610000 sub -1.274511 mul 0.952941 add exch } if dup 0.650000 gt { exch pop exch pop exch pop dup 0.650000 sub -3.725490 mul 0.674510 add exch dup 0.650000 sub -0.392157 mul 0.843137 add exch dup 0.650000 sub -0.915033 mul 0.901961 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -3.215685 mul 0.450980 add exch dup 0.710000 sub -0.392157 mul 0.819608 add exch dup 0.710000 sub -0.862745 mul 0.847059 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -2.450979 mul 0.290196 add exch dup 0.760000 sub -0.294117 mul 0.800000 add exch dup 0.760000 sub -0.686274 mul 0.803922 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.192157 add exch dup 0.800000 sub -0.196079 mul 0.788235 add exch dup 0.800000 sub -0.392157 mul 0.776471 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -1.045750 mul 0.156863 add exch dup 0.820000 sub -0.522875 mul 0.784314 add exch dup 0.820000 sub -0.522875 mul 0.768627 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -2.156865 mul 0.125490 add exch dup 0.850000 sub -1.274511 mul 0.768627 add exch dup 0.850000 sub -1.176472 mul 0.752941 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -1.568624 mul 0.039216 add exch dup 0.890000 sub -0.784312 mul 0.717647 add exch dup 0.890000 sub -0.784312 mul 0.705882 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.398694 mul 0.007843 add exch dup 0.910000 sub -7.799567 mul 0.701961 add exch dup 0.910000 sub -2.570807 mul 0.690196 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.313726 exch 0.000000 exch 0.458824 exch } if pop }
endstream
endobj

352 0 obj
  3272
endobj

353 0 obj
  << /Length 354 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.070588 exch 0.149020 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.183007 mul 0.070588 add exch dup 0.000000 sub 2.248366 mul 0.149020 add exch dup 0.000000 sub 1.882353 mul 0.462745 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.352943 mul 0.098039 add exch dup 0.150000 sub 0.784314 mul 0.486275 add exch dup 0.150000 sub 0.784314 mul 0.745098 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 4.901958 mul 0.121569 add exch dup 0.160000 sub 1.764706 mul 0.494118 add exch dup 0.160000 sub 1.764705 mul 0.752941 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 2.091505 mul 0.219608 add exch dup 0.180000 sub 0.784314 mul 0.529412 add exch dup 0.180000 sub 0.653595 mul 0.788235 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960783 mul 0.282353 add exch dup 0.210000 sub 0.784313 mul 0.552941 add exch dup 0.210000 sub 0.784313 mul 0.807843 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.556372 mul 0.301961 add exch dup 0.220000 sub 0.698529 mul 0.560784 add exch dup 0.220000 sub 0.330882 mul 0.815686 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.336134 mul 0.800000 add exch dup 0.540000 sub 0.560224 mul 0.784314 add exch dup 0.540000 sub 0.224090 mul 0.921569 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -3.921572 mul 0.823529 add exch dup 0.610000 sub -0.294118 mul 0.823529 add exch dup 0.610000 sub -0.980393 mul 0.937255 add exch } if dup 0.650000 gt { exch pop exch pop exch pop dup 0.650000 sub -3.725490 mul 0.666667 add exch dup 0.650000 sub -0.196078 mul 0.811765 add exch dup 0.650000 sub -0.849673 mul 0.898039 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -3.215685 mul 0.443137 add exch dup 0.710000 sub -0.235294 mul 0.800000 add exch dup 0.710000 sub -0.784313 mul 0.847059 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -2.450979 mul 0.282353 add exch dup 0.760000 sub -0.098039 mul 0.788235 add exch dup 0.760000 sub -0.588235 mul 0.807843 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.184314 add exch dup 0.800000 sub -0.196079 mul 0.784314 add exch dup 0.800000 sub -0.392157 mul 0.784314 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -1.045751 mul 0.149020 add exch dup 0.820000 sub -0.653594 mul 0.780392 add exch dup 0.820000 sub -0.653594 mul 0.776471 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -1.725492 mul 0.117647 add exch dup 0.850000 sub -1.176472 mul 0.760784 add exch dup 0.850000 sub -1.098040 mul 0.756863 add exch } if dup 0.900000 gt { exch pop exch pop exch pop dup 0.900000 sub -1.960775 mul 0.031373 add exch dup 0.900000 sub -1.568619 mul 0.701961 add exch dup 0.900000 sub -1.176465 mul 0.701961 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.267975 mul 0.011765 add exch dup 0.910000 sub -7.625275 mul 0.686275 add exch dup 0.910000 sub -2.614380 mul 0.690196 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.305882 exch 0.000000 exch 0.454902 exch } if pop }
endstream
endobj

354 0 obj
  3272
endobj

355 0 obj
  << /Length 356 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.172549 exch 0.090196 exch 0.454902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.470588 mul 0.172549 add exch dup 0.000000 sub 1.385621 mul 0.090196 add exch dup 0.000000 sub 1.803922 mul 0.454902 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.091504 mul 0.243137 add exch dup 0.150000 sub 0.653595 mul 0.298039 add exch dup 0.150000 sub 1.176471 mul 0.725490 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 3.137255 mul 0.305882 add exch dup 0.180000 sub 0.980392 mul 0.317647 add exch dup 0.180000 sub 1.764706 mul 0.760784 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.368627 add exch dup 0.200000 sub 0.392157 mul 0.337255 add exch dup 0.200000 sub 0.588235 mul 0.796078 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.563726 mul 0.388235 add exch dup 0.220000 sub 0.465686 mul 0.345098 add exch dup 0.220000 sub 0.024510 mul 0.807843 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.056022 mul 0.568627 add exch dup 0.540000 sub 1.064426 mul 0.494118 add exch dup 0.540000 sub 0.448179 mul 0.815686 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -3.006536 mul 0.564706 add exch dup 0.610000 sub 1.176471 mul 0.568627 add exch dup 0.610000 sub -0.196078 mul 0.847059 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -2.296919 mul 0.384314 add exch dup 0.670000 sub 0.896359 mul 0.639216 add exch dup 0.670000 sub -0.112045 mul 0.835294 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -1.960784 mul 0.223529 add exch dup 0.740000 sub 0.784313 mul 0.701961 add exch dup 0.740000 sub -0.078431 mul 0.827451 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.125490 add exch dup 0.790000 sub 0.522876 mul 0.741176 add exch dup 0.790000 sub -0.130719 mul 0.823529 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.392156 mul 0.090196 add exch dup 0.820000 sub -1.045750 mul 0.756863 add exch dup 0.820000 sub -0.784313 mul 0.819608 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -0.882354 mul 0.078431 add exch dup 0.850000 sub -2.156865 mul 0.725490 add exch dup 0.850000 sub -1.666668 mul 0.796078 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -0.784312 mul 0.043137 add exch dup 0.890000 sub -2.156858 mul 0.639216 add exch dup 0.890000 sub -1.568624 mul 0.729412 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.352942 mul 0.027451 add exch dup 0.910000 sub -6.623096 mul 0.596078 add exch dup 0.910000 sub -2.919391 mul 0.698039 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.239216 exch 0.000000 exch 0.435294 exch } if pop }
endstream
endobj

356 0 obj
  2878
endobj

357 0 obj
  << /Length 358 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.031373 exch 0.168627 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.104575 mul 0.031373 add exch dup 0.000000 sub 2.588235 mul 0.168627 add exch dup 0.000000 sub 1.908497 mul 0.466667 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 4.313730 mul 0.047059 add exch dup 0.150000 sub 1.568629 mul 0.556863 add exch dup 0.150000 sub 1.176472 mul 0.752941 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 3.267974 mul 0.090196 add exch dup 0.160000 sub 1.176471 mul 0.572549 add exch dup 0.160000 sub 1.045752 mul 0.764706 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 3.137256 mul 0.188235 add exch dup 0.190000 sub 1.176471 mul 0.607843 add exch dup 0.190000 sub 0.784314 mul 0.796078 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960783 mul 0.250980 add exch dup 0.210000 sub 0.784313 mul 0.631373 add exch dup 0.210000 sub 0.784313 mul 0.811765 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.924020 mul 0.270588 add exch dup 0.220000 sub 0.784314 mul 0.639216 add exch dup 0.220000 sub 0.441176 mul 0.819608 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.448179 mul 0.886275 add exch dup 0.540000 sub 0.392157 mul 0.890196 add exch dup 0.540000 sub 0.168067 mul 0.960784 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -4.627450 mul 0.917647 add exch dup 0.610000 sub -0.784313 mul 0.917647 add exch dup 0.610000 sub -1.333333 mul 0.972549 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -4.392161 mul 0.686275 add exch dup 0.660000 sub -0.784314 mul 0.878431 add exch dup 0.660000 sub -1.254903 mul 0.905882 add exch } if dup 0.710000 gt { exch pop exch pop exch pop dup 0.710000 sub -3.294117 mul 0.466667 add exch dup 0.710000 sub -0.549019 mul 0.839216 add exch dup 0.710000 sub -0.862745 mul 0.843137 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -2.450979 mul 0.301961 add exch dup 0.760000 sub -0.392157 mul 0.811765 add exch dup 0.760000 sub -0.686274 mul 0.800000 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.203922 add exch dup 0.800000 sub -0.392157 mul 0.796078 add exch dup 0.800000 sub -0.588236 mul 0.772549 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -1.045750 mul 0.168627 add exch dup 0.820000 sub -0.392156 mul 0.788235 add exch dup 0.820000 sub -0.392156 mul 0.760784 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -2.156865 mul 0.137255 add exch dup 0.850000 sub -0.882354 mul 0.776471 add exch dup 0.850000 sub -0.980393 mul 0.749020 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -2.352937 mul 0.050980 add exch dup 0.890000 sub -0.980390 mul 0.741176 add exch dup 0.890000 sub -0.980390 mul 0.709804 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.616559 mul 0.003922 add exch dup 0.910000 sub -8.017431 mul 0.721569 add exch dup 0.910000 sub -2.527234 mul 0.690196 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.329412 exch 0.000000 exch 0.462745 exch } if pop }
endstream
endobj

358 0 obj
  3272
endobj

359 0 obj
  << /Length 360 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.015686 exch 0.180392 exch 0.470588 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.052288 mul 0.015686 add exch dup 0.000000 sub 2.692811 mul 0.180392 add exch dup 0.000000 sub 1.908497 mul 0.470588 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 5.098044 mul 0.023529 add exch dup 0.150000 sub 1.960786 mul 0.584314 add exch dup 0.150000 sub 1.568629 mul 0.756863 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 3.267974 mul 0.074510 add exch dup 0.160000 sub 1.307189 mul 0.603922 add exch dup 0.160000 sub 0.784314 mul 0.772549 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 3.137255 mul 0.172549 add exch dup 0.190000 sub 1.176471 mul 0.643137 add exch dup 0.190000 sub 0.980392 mul 0.796078 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960785 mul 0.235294 add exch dup 0.210000 sub 0.784313 mul 0.666667 add exch dup 0.210000 sub 0.392157 mul 0.815686 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 2.095588 mul 0.254902 add exch dup 0.220000 sub 0.821078 mul 0.674510 add exch dup 0.220000 sub 0.490196 mul 0.819608 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.504202 mul 0.925490 add exch dup 0.540000 sub 0.336134 mul 0.937255 add exch dup 0.540000 sub 0.112045 mul 0.976471 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -5.254900 mul 0.960784 add exch dup 0.610000 sub -1.098039 mul 0.960784 add exch dup 0.610000 sub -1.568627 mul 0.984314 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -3.725490 mul 0.698039 add exch dup 0.660000 sub -0.849673 mul 0.905882 add exch dup 0.660000 sub -1.111111 mul 0.905882 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -4.019611 mul 0.474510 add exch dup 0.720000 sub -0.882354 mul 0.854902 add exch dup 0.720000 sub -1.176472 mul 0.839216 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -2.450979 mul 0.313726 add exch dup 0.760000 sub -0.490196 mul 0.819608 add exch dup 0.760000 sub -0.686274 mul 0.792157 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.215686 add exch dup 0.800000 sub -0.392157 mul 0.800000 add exch dup 0.800000 sub -0.588236 mul 0.764706 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -1.045750 mul 0.180392 add exch dup 0.820000 sub -0.392156 mul 0.792157 add exch dup 0.820000 sub -0.392156 mul 0.752941 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -2.156865 mul 0.149020 add exch dup 0.850000 sub -0.686275 mul 0.780392 add exch dup 0.850000 sub -0.784314 mul 0.741176 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -2.941171 mul 0.062745 add exch dup 0.890000 sub -0.980390 mul 0.752941 add exch dup 0.890000 sub -1.176468 mul 0.709804 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.703705 mul 0.003922 add exch dup 0.910000 sub -8.148150 mul 0.733333 add exch dup 0.910000 sub -2.440088 mul 0.686275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.337255 exch 0.000000 exch 0.466667 exch } if pop }
endstream
endobj

360 0 obj
  3272
endobj

361 0 obj
  << /Length 362 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.160784 exch 0.094118 exch 0.454902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.444444 mul 0.160784 add exch dup 0.000000 sub 1.490196 mul 0.094118 add exch dup 0.000000 sub 1.803922 mul 0.454902 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.352942 mul 0.227451 add exch dup 0.150000 sub 0.784314 mul 0.317647 add exch dup 0.150000 sub 1.307189 mul 0.725490 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 3.137255 mul 0.298039 add exch dup 0.180000 sub 0.784314 mul 0.341176 add exch dup 0.180000 sub 1.764706 mul 0.764706 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.360784 add exch dup 0.200000 sub 0.392157 mul 0.356863 add exch dup 0.200000 sub 0.588235 mul 0.800000 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.661765 mul 0.380392 add exch dup 0.220000 sub 0.490196 mul 0.364706 add exch dup 0.220000 sub 0.049020 mul 0.811765 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.000000 mul 0.592157 add exch dup 0.540000 sub 1.064426 mul 0.521569 add exch dup 0.540000 sub 0.392157 mul 0.827451 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -2.913166 mul 0.592157 add exch dup 0.610000 sub 0.952381 mul 0.596078 add exch dup 0.610000 sub -0.224090 mul 0.854902 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -2.679739 mul 0.388235 add exch dup 0.680000 sub 0.915033 mul 0.662745 add exch dup 0.680000 sub -0.196078 mul 0.839216 add exch } if dup 0.740000 gt { exch pop exch pop exch pop dup 0.740000 sub -1.960784 mul 0.227451 add exch dup 0.740000 sub 0.627451 mul 0.717647 add exch dup 0.740000 sub -0.156863 mul 0.827451 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.129412 add exch dup 0.790000 sub 0.392157 mul 0.749020 add exch dup 0.790000 sub -0.130719 mul 0.819608 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.522875 mul 0.094118 add exch dup 0.820000 sub -1.045750 mul 0.760784 add exch dup 0.820000 sub -0.784313 mul 0.815686 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -0.980393 mul 0.078431 add exch dup 0.850000 sub -2.156865 mul 0.729412 add exch dup 0.850000 sub -1.666668 mul 0.792157 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -0.784312 mul 0.039216 add exch dup 0.890000 sub -1.764702 mul 0.643137 add exch dup 0.890000 sub -1.372546 mul 0.725490 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.483661 mul 0.023529 add exch dup 0.910000 sub -6.753815 mul 0.607843 add exch dup 0.910000 sub -2.919391 mul 0.698039 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.247059 exch 0.000000 exch 0.435294 exch } if pop }
endstream
endobj

362 0 obj
  2877
endobj

363 0 obj
  << /Length 364 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.090196 exch 0.137255 exch 0.462745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.261438 mul 0.090196 add exch dup 0.000000 sub 2.065359 mul 0.137255 add exch dup 0.000000 sub 1.856209 mul 0.462745 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 1.176472 mul 0.129412 add exch dup 0.150000 sub 0.392157 mul 0.447059 add exch dup 0.150000 sub 0.392157 mul 0.741176 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 4.901958 mul 0.141176 add exch dup 0.160000 sub 1.764705 mul 0.450980 add exch dup 0.160000 sub 1.960783 mul 0.745098 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 2.091505 mul 0.239216 add exch dup 0.180000 sub 0.653596 mul 0.486275 add exch dup 0.180000 sub 0.784314 mul 0.784314 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960783 mul 0.301961 add exch dup 0.210000 sub 0.784313 mul 0.505882 add exch dup 0.210000 sub 0.784313 mul 0.807843 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.348039 mul 0.321569 add exch dup 0.220000 sub 0.649510 mul 0.513726 add exch dup 0.220000 sub 0.257353 mul 0.815686 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.224090 mul 0.752941 add exch dup 0.540000 sub 0.728291 mul 0.721569 add exch dup 0.540000 sub 0.280112 mul 0.898039 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -3.790853 mul 0.768627 add exch dup 0.610000 sub 0.000000 mul 0.772549 add exch dup 0.610000 sub -0.784314 mul 0.917647 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -3.725490 mul 0.654902 add exch dup 0.640000 sub 0.065359 mul 0.772549 add exch dup 0.640000 sub -0.784314 mul 0.894118 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -3.215685 mul 0.431373 add exch dup 0.700000 sub 0.000000 mul 0.776471 add exch dup 0.700000 sub -0.705882 mul 0.847059 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.960784 mul 0.270588 add exch dup 0.750000 sub 0.000000 mul 0.776471 add exch dup 0.750000 sub -0.392157 mul 0.811765 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.172549 add exch dup 0.800000 sub 0.000000 mul 0.776471 add exch dup 0.800000 sub -0.392157 mul 0.792157 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -1.045751 mul 0.137255 add exch dup 0.820000 sub -0.915032 mul 0.776471 add exch dup 0.820000 sub -0.784313 mul 0.784314 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -1.503268 mul 0.105882 add exch dup 0.850000 sub -1.372549 mul 0.749020 add exch dup 0.850000 sub -1.111111 mul 0.760784 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.050110 mul 0.015686 add exch dup 0.910000 sub -7.407410 mul 0.666667 add exch dup 0.910000 sub -2.701526 mul 0.694118 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.290196 exch 0.000000 exch 0.450980 exch } if pop }
endstream
endobj

364 0 obj
  3070
endobj

365 0 obj
  << /Length 366 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.125490 exch 0.117647 exch 0.458824 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.313725 mul 0.125490 add exch dup 0.000000 sub 1.803922 mul 0.117647 add exch dup 0.000000 sub 1.830065 mul 0.458824 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 3.137255 mul 0.172549 add exch dup 0.150000 sub 1.045752 mul 0.388235 add exch dup 0.150000 sub 1.437908 mul 0.733333 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 3.137255 mul 0.266667 add exch dup 0.180000 sub 0.980392 mul 0.419608 add exch dup 0.180000 sub 1.372549 mul 0.776471 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.329412 add exch dup 0.200000 sub 0.392157 mul 0.439216 add exch dup 0.200000 sub 0.392157 mul 0.803922 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.029412 mul 0.349020 add exch dup 0.220000 sub 0.575980 mul 0.447059 add exch dup 0.220000 sub 0.171569 mul 0.811765 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.112045 mul 0.678431 add exch dup 0.540000 sub 0.840336 mul 0.631373 add exch dup 0.540000 sub 0.336134 mul 0.866667 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -5.098044 mul 0.686275 add exch dup 0.610000 sub 0.784314 mul 0.690196 add exch dup 0.610000 sub -0.784314 mul 0.890196 add exch } if dup 0.620000 gt { exch pop exch pop exch pop dup 0.620000 sub -3.193278 mul 0.635294 add exch dup 0.620000 sub 0.448179 mul 0.698039 add exch dup 0.620000 sub -0.504202 mul 0.882353 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -2.679738 mul 0.411765 add exch dup 0.690000 sub 0.326797 mul 0.729412 add exch dup 0.690000 sub -0.457516 mul 0.847059 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -2.450979 mul 0.250980 add exch dup 0.750000 sub 0.392157 mul 0.749020 add exch dup 0.750000 sub -0.392157 mul 0.819608 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -1.176472 mul 0.152941 add exch dup 0.790000 sub 0.130719 mul 0.764706 add exch dup 0.790000 sub -0.130719 mul 0.803922 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.784313 mul 0.117647 add exch dup 0.820000 sub -1.045750 mul 0.768627 add exch dup 0.820000 sub -0.915032 mul 0.800000 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -1.333335 mul 0.094118 add exch dup 0.850000 sub -1.725492 mul 0.737255 add exch dup 0.850000 sub -1.333335 mul 0.772549 add exch } if dup 0.900000 gt { exch pop exch pop exch pop dup 0.900000 sub -0.784310 mul 0.027451 add exch dup 0.900000 sub -1.176465 mul 0.650980 add exch dup 0.900000 sub -1.176465 mul 0.705882 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 2.788672 mul 0.019608 add exch dup 0.910000 sub -7.102399 mul 0.639216 add exch dup 0.910000 sub -2.788672 mul 0.694118 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.270588 exch 0.000000 exch 0.443137 exch } if pop }
endstream
endobj

366 0 obj
  3073
endobj

367 0 obj
  << /Length 368 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.270588 exch 0.035294 exch 0.443137 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.732026 mul 0.270588 add exch dup 0.000000 sub 0.549020 mul 0.035294 add exch dup 0.000000 sub 1.725490 mul 0.443137 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 1.960786 mul 0.380392 add exch dup 0.150000 sub 0.392157 mul 0.117647 add exch dup 0.150000 sub 1.960786 mul 0.701961 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 1.274510 mul 0.400000 add exch dup 0.160000 sub 0.294118 mul 0.121569 add exch dup 0.160000 sub 1.568627 mul 0.721569 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 0.980392 mul 0.450980 add exch dup 0.200000 sub 0.196078 mul 0.133333 add exch dup 0.200000 sub 0.980392 mul 0.784314 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub -0.392157 mul 0.470588 add exch dup 0.220000 sub 0.245098 mul 0.137255 add exch dup 0.220000 sub -0.269608 mul 0.803922 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub -0.392157 mul 0.345098 add exch dup 0.540000 sub 1.624650 mul 0.215686 add exch dup 0.540000 sub 0.616247 mul 0.717647 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -1.960786 mul 0.317647 add exch dup 0.610000 sub 2.745100 mul 0.329412 add exch dup 0.610000 sub 0.686275 mul 0.760784 add exch } if dup 0.650000 gt { exch pop exch pop exch pop dup 0.650000 sub -1.372548 mul 0.239216 add exch dup 0.650000 sub 2.009803 mul 0.439216 add exch dup 0.650000 sub 0.490196 mul 0.788235 add exch } if dup 0.730000 gt { exch pop exch pop exch pop dup 0.730000 sub -1.176471 mul 0.129412 add exch dup 0.730000 sub 1.633987 mul 0.600000 add exch dup 0.730000 sub 0.457516 mul 0.827451 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.784314 mul 0.058824 add exch dup 0.790000 sub 1.176472 mul 0.698039 add exch dup 0.790000 sub 0.261438 mul 0.854902 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub 0.000000 mul 0.035294 add exch dup 0.820000 sub -1.568629 mul 0.733333 add exch dup 0.820000 sub -1.176472 mul 0.862745 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub 0.098039 mul 0.035294 add exch dup 0.840000 sub -2.156862 mul 0.701961 add exch dup 0.840000 sub -1.470587 mul 0.839216 add exch } if dup 0.880000 gt { exch pop exch pop exch pop dup 0.880000 sub 0.130719 mul 0.039216 add exch dup 0.880000 sub -3.529408 mul 0.615686 add exch dup 0.880000 sub -2.483657 mul 0.780392 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 1.525055 mul 0.043137 add exch dup 0.910000 sub -5.664490 mul 0.509804 add exch dup 0.910000 sub -3.267975 mul 0.705882 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.180392 exch 0.000000 exch 0.411765 exch } if pop }
endstream
endobj

368 0 obj
  2873
endobj

369 0 obj
  << /Length 370 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.011765 exch 0.180392 exch 0.470588 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.026144 mul 0.011765 add exch dup 0.000000 sub 2.771242 mul 0.180392 add exch dup 0.000000 sub 1.908497 mul 0.470588 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 2.745099 mul 0.015686 add exch dup 0.150000 sub 0.980392 mul 0.596078 add exch dup 0.150000 sub 0.784314 mul 0.756863 add exch } if dup 0.170000 gt { exch pop exch pop exch pop dup 0.170000 sub 4.901962 mul 0.070588 add exch dup 0.170000 sub 1.960785 mul 0.615686 add exch dup 0.170000 sub 1.176471 mul 0.772549 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 3.137255 mul 0.168627 add exch dup 0.190000 sub 1.176471 mul 0.654902 add exch dup 0.190000 sub 0.980392 mul 0.796078 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960785 mul 0.231373 add exch dup 0.210000 sub 0.784313 mul 0.678431 add exch dup 0.210000 sub 0.392157 mul 0.815686 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 2.144608 mul 0.250980 add exch dup 0.220000 sub 0.833333 mul 0.686275 add exch dup 0.220000 sub 0.502451 mul 0.819608 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.504202 mul 0.937255 add exch dup 0.540000 sub 0.280112 mul 0.952941 add exch dup 0.540000 sub 0.168067 mul 0.980392 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -5.490194 mul 0.972549 add exch dup 0.610000 sub -1.254902 mul 0.972549 add exch dup 0.610000 sub -1.647058 mul 0.992157 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -3.660131 mul 0.698039 add exch dup 0.660000 sub -0.849673 mul 0.909804 add exch dup 0.660000 sub -1.176471 mul 0.909804 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -4.117651 mul 0.478431 add exch dup 0.720000 sub -0.882354 mul 0.858824 add exch dup 0.720000 sub -1.176472 mul 0.839216 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -2.450979 mul 0.313726 add exch dup 0.760000 sub -0.588235 mul 0.823529 add exch dup 0.760000 sub -0.784313 mul 0.792157 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.215686 add exch dup 0.800000 sub -0.392157 mul 0.800000 add exch dup 0.800000 sub -0.588236 mul 0.760784 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -1.045750 mul 0.180392 add exch dup 0.820000 sub -0.261438 mul 0.792157 add exch dup 0.820000 sub -0.392156 mul 0.749020 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -2.156865 mul 0.149020 add exch dup 0.850000 sub -0.588236 mul 0.784314 add exch dup 0.850000 sub -0.686275 mul 0.737255 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -3.137249 mul 0.062745 add exch dup 0.890000 sub -0.980390 mul 0.760784 add exch dup 0.890000 sub -1.176468 mul 0.709804 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.790851 mul 0.000000 add exch dup 0.910000 sub -8.235296 mul 0.741176 add exch dup 0.910000 sub -2.440088 mul 0.686275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.341176 exch 0.000000 exch 0.466667 exch } if pop }
endstream
endobj

370 0 obj
  3272
endobj

371 0 obj
  << /Length 372 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.027451 exch 0.172549 exch 0.466667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.078431 mul 0.027451 add exch dup 0.000000 sub 2.614379 mul 0.172549 add exch dup 0.000000 sub 1.934641 mul 0.466667 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 4.705887 mul 0.039216 add exch dup 0.150000 sub 1.960786 mul 0.564706 add exch dup 0.150000 sub 1.176472 mul 0.756863 add exch } if dup 0.160000 gt { exch pop exch pop exch pop dup 0.160000 sub 3.267974 mul 0.086275 add exch dup 0.160000 sub 1.176471 mul 0.584314 add exch dup 0.160000 sub 0.915033 mul 0.768627 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 3.137255 mul 0.184314 add exch dup 0.190000 sub 1.176471 mul 0.619608 add exch dup 0.190000 sub 0.980392 mul 0.796078 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.960785 mul 0.247059 add exch dup 0.210000 sub 0.784313 mul 0.643137 add exch dup 0.210000 sub 0.392157 mul 0.815686 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.973039 mul 0.266667 add exch dup 0.220000 sub 0.796569 mul 0.650980 add exch dup 0.220000 sub 0.453431 mul 0.819608 add exch } if dup 0.540000 gt { exch pop exch pop exch pop dup 0.540000 sub 0.504202 mul 0.898039 add exch dup 0.540000 sub 0.392157 mul 0.905882 add exch dup 0.540000 sub 0.168067 mul 0.964706 add exch } if dup 0.610000 gt { exch pop exch pop exch pop dup 0.610000 sub -4.862744 mul 0.933333 add exch dup 0.610000 sub -0.941176 mul 0.933333 add exch dup 0.610000 sub -1.411764 mul 0.976471 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -3.660131 mul 0.690196 add exch dup 0.660000 sub -0.718954 mul 0.886275 add exch dup 0.660000 sub -1.045752 mul 0.905882 add exch } if dup 0.720000 gt { exch pop exch pop exch pop dup 0.720000 sub -4.117651 mul 0.470588 add exch dup 0.720000 sub -0.686275 mul 0.843137 add exch dup 0.720000 sub -1.176472 mul 0.843137 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -2.450979 mul 0.305882 add exch dup 0.760000 sub -0.490196 mul 0.815686 add exch dup 0.760000 sub -0.686274 mul 0.796078 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -1.764707 mul 0.207843 add exch dup 0.800000 sub -0.392157 mul 0.796078 add exch dup 0.800000 sub -0.588236 mul 0.768627 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -1.045750 mul 0.172549 add exch dup 0.820000 sub -0.392156 mul 0.788235 add exch dup 0.820000 sub -0.392156 mul 0.756863 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -2.156865 mul 0.141176 add exch dup 0.850000 sub -0.784314 mul 0.776471 add exch dup 0.850000 sub -0.980393 mul 0.745098 add exch } if dup 0.890000 gt { exch pop exch pop exch pop dup 0.890000 sub -2.549015 mul 0.054902 add exch dup 0.890000 sub -0.980390 mul 0.745098 add exch dup 0.890000 sub -0.980390 mul 0.705882 add exch } if dup 0.910000 gt { exch pop exch pop exch pop dup 0.910000 sub 3.660132 mul 0.003922 add exch dup 0.910000 sub -8.061005 mul 0.725490 add exch dup 0.910000 sub -2.440088 mul 0.686275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.333333 exch 0.000000 exch 0.466667 exch } if pop }
endstream
endobj

372 0 obj
  3272
endobj

373 0 obj
  << /Type /XObject
     /Length 374 0 R
     /Group << /Type /Group
               /S /Transparency
               /I true
            >>
     /Subtype /Form
     /Resources << /ExtGState << /E51 << /ca 0.700000 >>
                                 /E55 << /ca 0.680000 >>
                                 /E54 << /ca 0.680000 >>
                                 /E49 << /ca 0.710000 >>
                                 /E47 << /ca 0.720000 >>
                                 /E40 << /ca 0.760000 >>
                                 /E8 << /ca 0.950000 >>
                                 /E41 << /ca 0.760000 >>
                                 /E50 << /ca 0.700000 >>
                                 /E57 << /ca 0.660000 >>
                                 /E61 << /ca 0.640000 >>
                                 /E26 << /ca 0.850000 >>
                                 /E52 << /ca 0.690000 >>
                                 /E59 << /ca 0.650000 >>
                                 /E48 << /ca 0.720000 >>
                                 /E53 << /ca 0.690000 >>
                                 /E43 << /ca 0.750000 >>
                                 /E27 << /ca 0.840000 >>
                                 /E42 << /ca 0.750000 >>
                                 /E45 << /ca 0.730000 >>
                                 /E25 << /ca 0.850000 >>
                                 /E58 << /ca 0.660000 >>
                                 /E38 << /ca 0.780000 >>
                                 /E44 << /ca 0.740000 >>
                                 /E37 << /ca 0.780000 >>
                                 /E36 << /ca 0.790000 >>
                                 /E39 << /ca 0.770000 >>
                                 /E33 << /ca 0.810000 >>
                                 /E30 << /ca 0.820000 >>
                                 /E19 << /ca 0.890000 >>
                                 /E18 << /ca 0.890000 >>
                                 /E15 << /ca 0.910000 >>
                                 /E46 << /ca 0.730000 >>
                                 /E28 << /ca 0.830000 >>
                                 /E7 << /ca 0.960000 >>
                                 /E23 << /ca 0.860000 >>
                                 /E20 << /ca 0.880000 >>
                                 /E14 << /ca 0.920000 >>
                                 /E29 << /ca 0.830000 >>
                                 /E31 << /ca 0.820000 >>
                                 /E17 << /ca 0.900000 >>
                                 /E11 << /ca 0.940000 >>
                                 /E22 << /ca 0.870000 >>
                                 /E1 << /ca 0.990000 >>
                                 /E12 << /ca 0.930000 >>
                                 /E21 << /ca 0.880000 >>
                                 /E5 << /ca 0.970000 >>
                                 /E35 << /ca 0.790000 >>
                                 /E34 << /ca 0.800000 >>
                                 /E24 << /ca 0.860000 >>
                                 /E13 << /ca 0.920000 >>
                                 /E6 << /ca 0.960000 >>
                                 /E16 << /ca 0.910000 >>
                                 /E2 << /ca 0.990000 >>
                                 /E9 << /ca 0.950000 >>
                                 /E4 << /ca 0.980000 >>
                                 /E32 << /ca 0.810000 >>
                                 /E56 << /ca 0.670000 >>
                                 /E3 << /ca 0.980000 >>
                                 /E60 << /ca 0.650000 >>
                                 /E10 << /ca 0.940000 >>
                              >>
                   /Pattern << /P56 << /Matrix [ 32.842751 0.000000 -0.000000 32.842751 10.965332 5.567406 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 253 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P55 << /Matrix [ 32.854439 0.000000 -0.000000 32.854439 10.953613 5.350639 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 255 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P48 << /Matrix [ 32.854435 0.000000 -0.000000 32.854435 10.955078 4.196346 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 257 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P12 << /Matrix [ 32.889500 0.000000 -0.000000 32.889500 10.920898 -1.600437 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 325 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P37 << /Matrix [ 32.866123 0.000000 -0.000000 32.866123 10.942383 2.395596 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 281 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P58 << /Matrix [ 32.842747 0.000000 -0.000000 32.842747 10.966309 5.967800 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 249 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P57 << /Matrix [ 32.842751 0.000000 -0.000000 32.842751 10.965332 5.686546 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 251 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P25 << /Matrix [ 32.877815 0.000000 -0.000000 32.877815 10.930664 0.407341 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 261 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P47 << /Matrix [ 32.854435 0.000000 -0.000000 32.854435 10.954590 4.085018 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 263 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P10 << /Matrix [ 32.889503 0.000000 -0.000000 32.889503 10.917969 -1.868019 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 259 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P30 << /Matrix [ 32.877811 0.000000 -0.000000 32.877811 10.931152 1.204220 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 287 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P27 << /Matrix [ 32.877808 0.000000 -0.000000 32.877808 10.929688 0.743286 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 309 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P44 << /Matrix [ 32.854435 0.000000 -0.000000 32.854435 10.953613 3.506893 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 265 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P43 << /Matrix [ 32.866123 0.000000 -0.000000 32.866123 10.943848 3.344814 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 271 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P16 << /Matrix [ 32.889503 0.000000 -0.000000 32.889503 10.918945 -1.028175 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 269 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P54 << /Matrix [ 32.854439 0.000000 -0.000000 32.854439 10.952637 5.237358 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 267 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P32 << /Matrix [ 32.866123 0.000000 -0.000000 32.866123 10.942871 1.465908 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 285 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P45 << /Matrix [ 32.854435 0.000000 -0.000000 32.854435 10.955078 3.719784 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 273 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P41 << /Matrix [ 32.866119 0.000000 -0.000000 32.866119 10.942871 3.022552 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 275 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P29 << /Matrix [ 32.877811 0.000000 -0.000000 32.877811 10.932129 1.042110 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 293 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P49 << /Matrix [ 32.854435 0.000000 -0.000000 32.854435 10.952637 4.362362 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 291 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P35 << /Matrix [ 32.866123 0.000000 -0.000000 32.866123 10.942383 2.049892 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 289 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P39 << /Matrix [ 32.866123 0.000000 -0.000000 32.866123 10.942383 2.655361 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 279 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P60 << /Matrix [ 32.842747 0.000000 -0.000000 32.842747 10.966309 6.321316 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 277 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P34 << /Matrix [ 32.866123 0.000000 -0.000000 32.866123 10.941406 1.844814 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 283 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P19 << /Matrix [ 32.889500 0.000000 -0.000000 32.889500 10.921387 -0.577000 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 295 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P23 << /Matrix [ 32.877811 0.000000 -0.000000 32.877811 10.930664 0.104610 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 297 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P28 << /Matrix [ 32.877808 0.000000 -0.000000 32.877808 10.931152 0.934692 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 299 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P21 << /Matrix [ 32.877811 0.000000 -0.000000 32.877811 10.930664 -0.194218 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 301 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P22 << /Matrix [ 32.877815 0.000000 -0.000000 32.877815 10.930664 -0.053596 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 303 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P17 << /Matrix [ 32.889503 0.000000 -0.000000 32.889503 10.918945 -0.836769 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 307 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P59 << /Matrix [ 32.842747 0.000000 -0.000000 32.842747 10.965332 6.139675 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 305 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P36 << /Matrix [ 32.866123 0.000000 -0.000000 32.866123 10.941406 2.198330 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 311 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P38 << /Matrix [ 32.866123 0.000000 -0.000000 32.866123 10.942383 2.504971 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 313 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P26 << /Matrix [ 32.877811 0.000000 -0.000000 32.877811 10.931152 0.581173 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 315 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P15 << /Matrix [ 32.889500 0.000000 -0.000000 32.889500 10.918457 -1.121922 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 317 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P2 << /Matrix [ 32.901192 0.000000 -0.000000 32.901192 10.908691 -2.932442 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 319 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P13 << /Matrix [ 32.889500 0.000000 -0.000000 32.889500 10.920898 -1.412937 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 323 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P62 << /Matrix [ 32.842747 0.000000 -0.000000 32.842747 10.966309 6.616238 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 321 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P50 << /Matrix [ 32.854435 0.000000 -0.000000 32.854435 10.952637 4.571346 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 327 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P20 << /Matrix [ 32.877811 0.000000 -0.000000 32.877811 10.932129 -0.391483 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 329 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P40 << /Matrix [ 32.866119 0.000000 -0.000000 32.866119 10.943848 2.864349 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 339 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P5 << /Matrix [ 32.901192 0.000000 -0.000000 32.901192 10.907715 -2.543770 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 341 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P9 << /Matrix [ 32.889500 0.000000 -0.000000 32.889500 10.917969 -2.004734 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 333 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P53 << /Matrix [ 32.854435 0.000000 -0.000000 32.854435 10.954102 5.086971 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 331 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P46 << /Matrix [ 32.854435 0.000000 -0.000000 32.854435 10.953125 3.846737 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 335 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P1 << /Matrix [ 32.901192 0.000000 -0.000000 32.901192 10.906738 -3.094551 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 337 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P61 << /Matrix [ 32.842747 0.000000 -0.000000 32.842747 10.966309 6.479519 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 343 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P8 << /Matrix [ 32.889500 0.000000 -0.000000 32.889500 10.917969 -2.141453 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 345 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P52 << /Matrix [ 32.854435 0.000000 -0.000000 32.854435 10.953613 4.913143 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 347 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P42 << /Matrix [ 32.866123 0.000000 -0.000000 32.866123 10.941895 3.163174 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 349 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P11 << /Matrix [ 32.889500 0.000000 -0.000000 32.889500 10.918457 -1.719578 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 351 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P14 << /Matrix [ 32.889500 0.000000 -0.000000 32.889500 10.917480 -1.272312 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 353 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P33 << /Matrix [ 32.866119 0.000000 -0.000000 32.866119 10.942383 1.684662 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 355 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P7 << /Matrix [ 32.901192 0.000000 -0.000000 32.901192 10.907715 -2.272285 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 357 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P4 << /Matrix [ 32.901188 0.000000 -0.000000 32.901188 10.907715 -2.709782 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 359 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P31 << /Matrix [ 32.877811 0.000000 -0.000000 32.877811 10.930176 1.352657 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 361 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P18 << /Matrix [ 32.889500 0.000000 -0.000000 32.889500 10.921387 -0.692478 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 363 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P24 << /Matrix [ 32.877815 0.000000 -0.000000 32.877815 10.929688 0.266716 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 365 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P51 << /Matrix [ 32.854435 0.000000 -0.000000 32.854435 10.955566 4.700253 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 367 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P3 << /Matrix [ 32.901192 0.000000 -0.000000 32.901192 10.907715 -2.731270 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 369 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P6 << /Matrix [ 32.901192 0.000000 -0.000000 32.901192 10.907715 -2.403145 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 371 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                            >>
                >>
     /BBox [ 0.000000 0.000000 56.000000 56.000000 ]
  >>
stream
q
1.000000 0.000000 -0.000000 1.000000 10.903320 21.940674 cm
/Pattern cs
/P1 scn
22.993378 0.602022 m
20.515562 0.602022 18.318256 1.852619 16.331327 4.318747 c
13.993766 7.240700 10.604300 8.257540 6.174620 7.334202 c
4.069551 6.861865 2.048059 6.073759 0.178773 4.996640 c
0.150875 4.981141 0.117962 4.977359 0.087276 4.986126 c
0.056590 4.994894 0.030642 5.015491 0.015143 5.043390 c
-0.000356 5.071288 -0.004137 5.104202 0.004630 5.134888 c
0.013398 5.165575 0.033996 5.191522 0.061895 5.207021 c
1.957688 6.280785 4.001762 7.068482 6.127869 7.544583 c
10.580925 8.467920 14.180771 7.392642 16.518333 4.435625 c
18.505260 1.922746 20.796072 0.695526 23.332327 0.824091 c
27.072426 0.999409 30.812525 4.213556 32.682575 7.112133 c
32.698074 7.136931 32.722786 7.154557 32.751282 7.161133 c
32.779774 7.167708 32.809719 7.162696 32.834518 7.147197 c
32.859314 7.131699 32.876942 7.106984 32.883518 7.078489 c
32.890091 7.049994 32.885078 7.020053 32.869579 6.995255 c
30.976154 4.108365 27.165928 0.800715 23.344015 0.602022 c
22.993378 0.602022 l
h
f
n
Q
q
/E1 gs
1.000000 0.000000 -0.000000 1.000000 10.899414 21.646973 cm
/Pattern cs
/P2 scn
23.080797 1.014116 m
20.614670 1.014116 18.347237 2.276400 16.336933 4.812655 c
15.950641 5.292147 15.520200 5.734325 15.051273 6.133377 c
12.059194 8.622880 8.190528 8.283936 5.455580 7.559291 c
3.609485 7.056602 1.837301 6.313934 0.184376 5.350293 c
0.163206 5.332186 0.136263 5.322236 0.108405 5.322236 c
0.080547 5.322236 0.053605 5.332186 0.032435 5.350293 c
0.022182 5.360112 0.014022 5.371907 0.008448 5.384963 c
0.002874 5.398019 0.000000 5.412068 0.000000 5.426265 c
0.000000 5.440461 0.002874 5.454510 0.008448 5.467566 c
0.014022 5.480623 0.022182 5.492417 0.032435 5.502236 c
1.706403 6.498738 3.506915 7.265330 5.385452 7.781358 c
9.370996 8.844949 12.760461 8.330685 15.191525 6.308693 c
15.672142 5.897934 16.114222 5.444119 16.512249 4.952908 c
19.165382 1.621882 22.250961 0.523229 25.687180 1.703698 c
28.559431 2.849651 31.008310 4.853651 32.699867 7.442412 c
32.715366 7.467211 32.740082 7.484836 32.768578 7.491412 c
32.797070 7.497987 32.827011 7.492973 32.851810 7.477474 c
32.876606 7.461975 32.894234 7.437261 32.900806 7.408766 c
32.907383 7.380271 32.902370 7.350332 32.886871 7.325534 c
31.179012 4.689976 28.696438 2.648384 25.780684 1.481628 c
24.912790 1.177471 24.000427 1.019486 23.080797 1.014116 c
h
f
n
Q
q
/E2 gs
1.000000 0.000000 -0.000000 1.000000 10.897461 21.789551 cm
/Pattern cs
/P3 scn
23.151903 0.964608 m
20.662397 0.964608 18.418339 2.250267 16.337908 4.844961 c
15.950680 5.327449 15.516057 5.769901 15.040561 6.165683 c
12.048481 8.655187 8.168127 8.257802 5.444867 7.498095 c
3.597186 6.961844 1.831544 6.175366 0.197040 5.160532 c
0.174008 5.141532 0.145082 5.131140 0.115224 5.131140 c
0.085367 5.131140 0.056442 5.141532 0.033410 5.160532 c
0.011995 5.182381 0.000000 5.211754 0.000000 5.242347 c
0.000000 5.272940 0.011995 5.302313 0.033410 5.324161 c
1.699827 6.375344 3.500392 7.197000 5.386428 7.766914 c
9.371971 8.935695 12.761436 8.409743 15.192501 6.399440 c
15.675985 5.991752 16.118341 5.537652 16.513226 5.043654 c
19.236485 1.654189 22.216879 0.555535 25.641407 1.665877 c
28.516216 2.778068 30.969175 4.764962 32.654095 7.346152 c
32.669594 7.370950 32.694305 7.388578 32.722801 7.395154 c
32.751297 7.401729 32.781235 7.396715 32.806034 7.381216 c
32.830830 7.365717 32.848457 7.341002 32.855034 7.312508 c
32.861607 7.284013 32.856598 7.254074 32.841099 7.229276 c
31.137257 4.562423 28.621462 2.513734 25.664780 1.385370 c
24.853495 1.117858 24.006079 0.975964 23.151903 0.964608 c
h
f
n
Q
q
/E3 gs
1.000000 0.000000 -0.000000 1.000000 10.897461 21.846436 cm
/Pattern cs
/P4 scn
23.268776 1.009840 m
20.767584 1.009840 18.476776 2.318875 16.337906 4.972008 c
15.946531 5.454653 15.508018 5.897082 15.028871 6.292732 c
12.013415 8.747172 8.156439 8.314723 5.444867 7.519951 c
3.600028 6.975959 1.835397 6.189932 0.197040 5.182389 c
0.174008 5.163389 0.145081 5.152998 0.115224 5.152998 c
0.085367 5.152998 0.056442 5.163389 0.033410 5.182389 c
0.011995 5.204237 0.000000 5.233610 0.000000 5.264204 c
0.000000 5.294797 0.011995 5.324170 0.033410 5.346018 c
1.708549 6.360396 3.507800 7.153954 5.386427 7.706956 c
9.360283 8.875737 12.749747 8.431601 15.192499 6.432985 c
15.686088 6.032948 16.136564 5.582475 16.536600 5.088887 c
19.318298 1.640982 22.193497 0.530640 25.606339 1.582543 c
28.525536 2.641622 31.022911 4.618198 32.724216 7.216068 c
32.739716 7.240867 32.764431 7.258492 32.792927 7.265068 c
32.821419 7.271643 32.851360 7.266631 32.876160 7.251132 c
32.900955 7.235633 32.918583 7.210917 32.925156 7.182422 c
32.931732 7.153927 32.926720 7.123988 32.911221 7.099190 c
31.188587 4.449775 28.648422 2.434877 25.676466 1.360474 c
24.896780 1.120165 24.084616 1.001890 23.268776 1.009840 c
h
f
n
Q
q
/E4 gs
1.000000 0.000000 -0.000000 1.000000 10.912109 22.000488 cm
/Pattern cs
/P5 scn
23.324478 0.939900 m
20.811600 0.939900 18.544165 2.272310 16.311792 5.007258 c
15.923470 5.489119 15.484618 5.927971 15.002757 6.316294 c
11.975615 8.770734 8.118636 8.279846 5.407064 7.485075 c
3.564923 6.906206 1.808016 6.084743 0.182614 5.042322 c
0.169568 5.033880 0.154985 5.028090 0.139701 5.025284 c
0.124418 5.022477 0.108731 5.022708 0.093537 5.025964 c
0.078342 5.029220 0.063938 5.035437 0.051146 5.044259 c
0.038354 5.053082 0.027426 5.064338 0.018984 5.077384 c
0.010542 5.090430 0.004752 5.105014 0.001946 5.120297 c
-0.000861 5.135581 -0.000629 5.151267 0.002627 5.166461 c
0.005883 5.181656 0.012100 5.196059 0.020922 5.208851 c
0.029745 5.221643 0.041001 5.232574 0.054047 5.241015 c
1.714761 6.273780 3.502294 7.087008 5.372001 7.660391 c
9.334168 8.887611 12.723634 8.490226 15.178074 6.491611 c
15.675267 6.087335 16.129583 5.633018 16.533859 5.135824 c
19.338934 1.629481 22.202446 0.530826 25.545160 1.489226 c
28.484615 2.515196 31.005863 4.477990 32.721481 7.076001 c
32.736980 7.100800 32.761692 7.118424 32.790188 7.125000 c
32.818680 7.131576 32.848621 7.126564 32.873417 7.111065 c
32.898216 7.095566 32.915840 7.070849 32.922417 7.042355 c
32.928993 7.013860 32.923985 6.983921 32.908485 6.959122 c
31.174938 4.306402 28.609674 2.304348 25.615290 1.267159 c
24.871046 1.050089 24.099731 0.939900 23.324478 0.939900 c
h
f
n
Q
q
/E5 gs
1.000000 0.000000 -0.000000 1.000000 10.912109 22.129639 cm
/Pattern cs
/P6 scn
23.394608 0.905262 m
20.870041 0.905262 18.625980 2.237672 16.311794 5.054435 c
15.919516 5.540159 15.476794 5.982881 14.991071 6.375159 c
11.952240 8.806224 8.095263 8.268583 5.395378 7.391997 c
3.554058 6.784044 1.801263 5.935157 0.182614 4.867430 c
0.169568 4.858989 0.154985 4.853201 0.139702 4.850394 c
0.124418 4.847588 0.108731 4.847818 0.093537 4.851074 c
0.078342 4.854330 0.063938 4.860547 0.051146 4.869370 c
0.038354 4.878192 0.027426 4.889448 0.018984 4.902494 c
0.010542 4.915541 0.004752 4.930122 0.001946 4.945406 c
-0.000861 4.960690 -0.000629 4.976377 0.002627 4.991572 c
0.005883 5.006766 0.012100 5.021170 0.020922 5.033961 c
0.029745 5.046753 0.041001 5.057681 0.054047 5.066123 c
1.706233 6.146855 3.494482 7.003643 5.372002 7.614067 c
9.322482 8.899726 12.711947 8.537404 15.178076 6.562164 c
15.679346 6.158503 16.137600 5.704165 16.545549 5.206378 c
19.409063 1.700035 22.179075 0.531253 25.510101 1.419527 c
28.471054 2.403710 31.015066 4.354942 32.733170 6.959550 c
32.748669 6.984348 32.773384 7.001973 32.801880 7.008549 c
32.830376 7.015125 32.860313 7.010111 32.885113 6.994612 c
32.909908 6.979113 32.927536 6.954398 32.934113 6.925903 c
32.940685 6.897408 32.935673 6.867470 32.920174 6.842671 c
31.180210 4.182158 28.588034 2.191665 25.568539 1.197458 c
24.860497 1.001935 24.129148 0.903636 23.394608 0.905262 c
h
f
n
Q
q
/E6 gs
1.000000 0.000000 -0.000000 1.000000 10.912109 22.248779 cm
/Pattern cs
/P7 scn
23.464733 0.867544 m
20.940166 0.867544 18.707796 2.211641 16.311794 5.121906 c
15.911277 5.608027 15.460767 6.050702 14.967694 6.442630 c
11.928864 8.850319 8.083574 8.265930 5.383690 7.354280 c
3.542249 6.719592 1.793264 5.843132 0.182614 4.747897 c
0.156266 4.730848 0.124223 4.724965 0.093537 4.731541 c
0.062850 4.738116 0.036033 4.756613 0.018984 4.782961 c
0.001935 4.809309 -0.003949 4.841352 0.002627 4.872038 c
0.009203 4.902725 0.027699 4.929541 0.054047 4.946589 c
1.681656 6.047426 3.445786 6.931456 5.301875 7.576347 c
9.252356 8.908758 12.641821 8.581499 15.119637 6.617947 c
15.624394 6.218577 16.086565 5.768156 16.498798 5.273849 c
19.397377 1.697379 22.097260 0.528597 25.404911 1.346744 c
28.391882 2.285393 30.963675 4.225591 32.686417 6.840016 c
32.694092 6.852295 32.704113 6.862941 32.715900 6.871348 c
32.727692 6.879756 32.741016 6.885759 32.755127 6.889015 c
32.769238 6.892272 32.783848 6.892717 32.798130 6.890326 c
32.812412 6.887935 32.826080 6.882752 32.838360 6.875078 c
32.850639 6.867404 32.861286 6.857387 32.869694 6.845598 c
32.878101 6.833809 32.884102 6.820478 32.887360 6.806370 c
32.890614 6.792261 32.891060 6.777648 32.888668 6.763367 c
32.886280 6.749086 32.881096 6.735416 32.873421 6.723137 c
31.130674 4.051046 28.509932 2.071021 25.463348 1.124675 c
24.810284 0.956935 24.138990 0.870571 23.464733 0.867544 c
h
f
n
Q
q
/E7 gs
1.000000 0.000000 -0.000000 1.000000 10.902344 22.344482 cm
/Pattern cs
/P8 scn
23.590012 0.854443 m
21.042070 0.854443 18.786324 2.233606 16.320194 5.213998 c
15.918418 5.699464 15.463670 6.138530 14.964409 6.523031 c
11.913891 8.919032 8.068600 8.287891 5.380404 7.341179 c
3.539735 6.677642 1.794832 5.773749 0.191016 4.652981 c
0.181197 4.642728 0.169404 4.634571 0.156348 4.628997 c
0.143291 4.623423 0.129241 4.620548 0.115045 4.620548 c
0.100849 4.620548 0.086800 4.623423 0.073743 4.628997 c
0.060687 4.634571 0.048894 4.642728 0.039075 4.652981 c
0.026873 4.662842 0.017031 4.675307 0.010270 4.689464 c
0.003509 4.703620 0.000000 4.719108 0.000000 4.734796 c
0.000000 4.750484 0.003509 4.765974 0.010270 4.780130 c
0.017031 4.794287 0.026873 4.806752 0.039075 4.816612 c
1.656737 5.951281 3.417388 6.866976 5.275213 7.539872 c
9.214005 8.930721 12.603470 8.638524 15.092974 6.686660 c
15.597731 6.287290 16.059902 5.836869 16.472136 5.342563 c
19.499279 1.695966 22.058908 0.527185 25.331495 1.286893 c
28.344759 2.171704 30.945940 4.097738 32.671440 6.721725 c
32.686939 6.746523 32.711655 6.764148 32.740150 6.770724 c
32.768646 6.777299 32.798584 6.772287 32.823383 6.756789 c
32.848179 6.741290 32.865807 6.716573 32.872383 6.688078 c
32.878956 6.659583 32.873943 6.629644 32.858444 6.604846 c
31.105772 3.922504 28.453239 1.953827 25.378248 1.053136 c
24.791193 0.921922 24.191551 0.855295 23.590012 0.854443 c
h
f
n
Q
q
/E8 gs
1.000000 0.000000 -0.000000 1.000000 10.902344 22.481445 cm
/Pattern cs
/P9 scn
23.660139 0.800196 m
21.112196 0.800196 18.891514 2.179359 16.320194 5.264942 c
15.911218 5.747734 15.452904 6.186460 14.952721 6.573976 c
11.890515 8.911538 8.056912 8.280396 5.368716 7.286933 c
3.531075 6.597694 1.793713 5.666121 0.202703 4.516921 c
0.179672 4.497921 0.150746 4.487530 0.120889 4.487530 c
0.091032 4.487530 0.062106 4.497921 0.039075 4.516921 c
0.026873 4.526781 0.017031 4.539247 0.010270 4.553403 c
0.003509 4.567559 0.000000 4.583047 0.000000 4.598735 c
0.000000 4.614423 0.003509 4.629913 0.010270 4.644070 c
0.017031 4.658226 0.026873 4.670691 0.039075 4.680552 c
1.650114 5.840476 3.406645 6.783580 5.263525 7.485626 c
9.190629 8.934915 12.580094 8.654406 15.081285 6.737604 c
15.592516 6.337244 16.058855 5.882662 16.472136 5.381818 c
19.557718 1.746909 22.105659 0.531377 25.249681 1.232646 c
28.276911 2.094129 30.899220 4.003898 32.648067 6.620728 c
32.663567 6.645526 32.688278 6.663152 32.716774 6.669727 c
32.745270 6.676303 32.775208 6.671289 32.800007 6.655790 c
32.824802 6.640291 32.842430 6.615576 32.849007 6.587081 c
32.855579 6.558587 32.850571 6.528647 32.835072 6.503849 c
31.062824 3.824997 28.387655 1.871501 25.296434 0.998889 c
24.758596 0.880576 24.210661 0.814041 23.660139 0.800196 c
h
f
n
Q
q
/E9 gs
1.000000 0.000000 -0.000000 1.000000 10.902344 22.571289 cm
/Pattern cs
/P10 scn
23.718582 0.788886 m
21.182325 0.788886 18.985018 2.168047 16.320196 5.347132 c
15.907296 5.833797 15.445110 6.276398 14.941034 6.667854 c
11.867140 9.005416 8.033537 8.304148 5.357028 7.275620 c
3.520315 6.557238 1.787074 5.598255 0.202703 4.423794 c
0.179672 4.404794 0.150746 4.394403 0.120889 4.394403 c
0.091032 4.394403 0.062106 4.404794 0.039075 4.423794 c
0.026873 4.433654 0.017031 4.446120 0.010270 4.460276 c
0.003509 4.474432 0.000000 4.489921 0.000000 4.505609 c
0.000000 4.521296 0.003509 4.536787 0.010270 4.550942 c
0.017031 4.565099 0.026873 4.577564 0.039075 4.587425 c
1.639191 5.769743 3.387883 6.736435 5.240150 7.462626 c
9.167255 8.970353 12.568409 8.748285 15.057913 6.819797 c
15.578900 6.427001 16.053375 5.976051 16.472137 5.475697 c
19.639534 1.758972 22.093975 0.555129 25.249683 1.139520 c
28.303236 1.951578 30.955011 3.851046 32.706509 6.480849 c
32.722008 6.505648 32.746719 6.523273 32.775215 6.529849 c
32.803711 6.536424 32.833649 6.531412 32.858448 6.515913 c
32.883247 6.500414 32.900875 6.475699 32.907452 6.447205 c
32.914028 6.418711 32.909012 6.388769 32.893513 6.363971 c
31.094217 3.682596 28.374922 1.753311 25.249683 0.940827 c
24.745316 0.841569 24.232622 0.790692 23.718582 0.788886 c
h
f
n
Q
q
/E10 gs
1.000000 0.000000 -0.000000 1.000000 10.908203 22.625977 cm
/Pattern cs
/P11 scn
23.783043 0.807094 m
21.246788 0.807094 19.107918 2.197943 16.302843 5.482218 c
15.895564 5.970684 15.432718 6.409994 14.923681 6.791251 c
11.838099 9.128814 8.004498 8.369106 5.339677 7.305516 c
3.503963 6.557943 1.774845 5.571559 0.197040 4.371875 c
0.174008 4.352875 0.145083 4.342484 0.115226 4.342484 c
0.085368 4.342484 0.056443 4.352875 0.033411 4.371875 c
0.011996 4.393723 0.000000 4.423096 0.000000 4.453689 c
0.000000 4.484282 0.011996 4.513658 0.033411 4.535506 c
1.622157 5.750365 3.367737 6.745030 5.222798 7.492520 c
9.138215 9.058687 12.539369 8.871683 15.040560 6.954883 c
15.562599 6.559174 16.040642 6.108559 16.466473 5.610785 c
19.692308 1.788870 22.053244 0.585024 25.150515 1.146039 c
28.226774 1.915087 30.906137 3.802725 32.665775 6.440618 c
32.681274 6.465416 32.705994 6.483042 32.734489 6.489617 c
32.762981 6.496193 32.792923 6.491181 32.817719 6.475682 c
32.842518 6.460183 32.860142 6.435466 32.866718 6.406972 c
32.873295 6.378477 32.868282 6.348538 32.852783 6.323740 c
31.072138 3.648960 28.359900 1.732476 25.244019 0.947346 c
24.762623 0.854055 24.273396 0.807090 23.783043 0.807094 c
h
f
n
Q
q
/E11 gs
1.000000 0.000000 -0.000000 1.000000 10.920898 22.675049 cm
/Pattern cs
/P12 scn
23.843132 0.828495 m
21.306877 0.828495 19.168011 2.219345 16.292809 5.620498 c
15.875932 6.090048 15.409616 6.513258 14.901958 6.882781 c
11.816377 9.220344 7.982775 8.390509 5.317955 7.291855 c
3.482335 6.516989 1.757100 5.503069 0.187005 4.276400 c
0.162207 4.257801 0.131036 4.249815 0.100350 4.254199 c
0.069663 4.258582 0.041975 4.274978 0.023376 4.299776 c
0.004778 4.324574 -0.003209 4.355743 0.001175 4.386430 c
0.005559 4.417117 0.021953 4.444806 0.046751 4.463405 c
1.633753 5.696322 3.374223 6.717817 5.224452 7.502236 c
9.128181 9.115153 12.529334 8.974899 15.042213 7.069786 c
15.567280 6.673259 16.045645 6.218420 16.468124 5.714000 c
19.834215 1.763520 22.019835 0.606426 25.105415 1.109002 c
28.202972 1.837141 30.909361 3.712400 32.679115 6.356829 c
32.686790 6.369108 32.696812 6.379756 32.708603 6.388164 c
32.720390 6.396571 32.733719 6.402575 32.747826 6.405830 c
32.761936 6.409086 32.776550 6.409530 32.790829 6.407139 c
32.805111 6.404748 32.818779 6.399568 32.831059 6.391893 c
32.843338 6.384219 32.853989 6.374200 32.862392 6.362411 c
32.870800 6.350622 32.876804 6.337294 32.880058 6.323184 c
32.883316 6.309075 32.883762 6.294463 32.881371 6.280182 c
32.878979 6.265901 32.873795 6.252231 32.866123 6.239952 c
31.074417 3.534359 28.313679 1.618573 25.152168 0.886935 c
24.718433 0.828530 24.280348 0.808971 23.843132 0.828495 c
h
f
n
Q
q
/E12 gs
1.000000 0.000000 -0.000000 1.000000 10.920898 22.792480 cm
/Pattern cs
/P13 scn
23.901573 0.777916 m
21.061436 0.777916 19.016068 2.496026 16.292809 5.675110 c
15.874559 6.164897 15.404282 6.607742 14.890270 6.995834 c
11.793000 9.333397 7.959399 8.433435 5.294579 7.288030 c
3.463683 6.488757 1.746321 5.451264 0.187005 4.202446 c
0.174726 4.193236 0.160753 4.186537 0.145885 4.182728 c
0.131017 4.178918 0.115544 4.178074 0.100350 4.180244 c
0.069663 4.184628 0.041975 4.201024 0.023376 4.225822 c
0.004778 4.250620 -0.003209 4.281792 0.001175 4.312478 c
0.005559 4.343164 0.021953 4.370852 0.046751 4.389451 c
1.627268 5.647672 3.363627 6.696558 5.212764 7.510096 c
9.104805 9.181454 12.505958 9.064576 15.030525 7.182839 c
15.561659 6.789357 16.044231 6.334248 16.468124 5.827053 c
19.974468 1.794758 22.019836 0.649352 25.058666 1.151928 c
28.787077 1.701255 31.673965 4.798524 32.679115 6.341315 c
32.694614 6.366114 32.719334 6.383741 32.747826 6.390317 c
32.776321 6.396893 32.806263 6.391878 32.831059 6.376379 c
32.855858 6.360880 32.873482 6.336165 32.880058 6.307671 c
32.886635 6.279177 32.881622 6.249237 32.866123 6.224439 c
31.068647 3.507602 28.278597 1.602813 25.093729 0.918171 c
24.700100 0.843679 24.301743 0.796813 23.901573 0.777916 c
h
f
n
Q
q
/E13 gs
1.000000 0.000000 -0.000000 1.000000 10.906250 22.804443 cm
/Pattern cs
/P14 scn
23.982843 0.840533 m
21.166080 0.840533 19.167465 2.535264 16.303951 5.854603 c
15.881277 6.340815 15.407093 6.779729 14.889726 7.163639 c
11.780767 9.501201 7.958854 8.542801 5.294034 7.362331 c
3.466944 6.535535 1.757357 5.470482 0.209835 4.194933 c
0.184959 4.175017 0.154043 4.164165 0.122176 4.164165 c
0.090310 4.164165 0.059394 4.175017 0.034518 4.194933 c
0.012336 4.218733 0.000000 4.250059 0.000000 4.282593 c
0.000000 4.315127 0.012336 4.346451 0.034518 4.370250 c
1.605513 5.652165 3.333686 6.728347 5.177155 7.572712 c
9.069196 9.302508 12.470349 9.220693 15.006604 7.338955 c
15.541033 6.949665 16.027512 6.498495 16.455893 5.994858 c
19.611601 2.348260 21.692034 0.688591 24.987997 1.132728 c
28.751472 1.635304 31.650045 4.720886 32.666885 6.275365 c
32.682384 6.300163 32.707104 6.317789 32.735596 6.324364 c
32.764091 6.330940 32.794029 6.325928 32.818829 6.310429 c
32.843628 6.294930 32.861252 6.270213 32.867828 6.241718 c
32.874405 6.213224 32.869389 6.183285 32.853889 6.158486 c
31.961237 4.811154 30.810772 3.653802 29.468788 2.753129 c
28.126804 1.852455 26.619841 1.226270 25.034746 0.910659 c
24.685984 0.864694 24.334621 0.841270 23.982843 0.840533 c
h
f
n
Q
q
/E14 gs
1.000000 0.000000 -0.000000 1.000000 10.972656 22.873047 cm
/Pattern cs
/P15 scn
24.010773 0.836655 m
21.240761 0.836655 19.335648 2.461260 16.296818 5.979291 c
15.870023 6.465694 15.391948 6.904585 14.870906 7.288327 c
11.750260 9.625889 7.928346 8.609049 5.275213 7.381829 c
3.451315 6.522069 1.746325 5.429932 0.202703 4.132617 c
0.179672 4.113617 0.150746 4.103226 0.120889 4.103226 c
0.091032 4.103226 0.062105 4.113617 0.039074 4.132617 c
0.026872 4.142478 0.017030 4.154943 0.010269 4.169099 c
0.003508 4.183255 0.000000 4.198743 0.000000 4.214431 c
0.000000 4.230119 0.003508 4.245610 0.010269 4.259766 c
0.017030 4.273922 0.026872 4.286386 0.039074 4.296246 c
1.596947 5.612655 3.322254 6.717010 5.170023 7.580522 c
9.050376 9.368757 12.451530 9.333694 14.987784 7.463644 c
15.526757 7.071315 16.020653 6.620539 16.460449 6.119546 c
19.803162 2.274256 21.719963 0.731464 24.934111 1.117162 c
28.732649 1.572987 31.654600 4.623506 32.671440 6.213048 c
32.686939 6.237847 32.711655 6.255472 32.740150 6.262048 c
32.768646 6.268623 32.798584 6.263609 32.823383 6.248110 c
32.848179 6.232612 32.865807 6.207896 32.872383 6.179402 c
32.878956 6.150908 32.873943 6.120968 32.858444 6.096169 c
31.958862 4.727010 30.790554 3.554839 29.424370 2.650746 c
28.058186 1.746653 26.522596 1.129480 24.910734 0.836655 c
24.610928 0.821896 24.310577 0.821896 24.010773 0.836655 c
h
f
n
Q
q
/E15 gs
1.000000 0.000000 -0.000000 1.000000 10.915039 22.955322 cm
/Pattern cs
/P16 scn
24.069212 0.758137 m
21.217386 0.758137 19.394089 2.464557 16.285131 6.029339 c
15.863733 6.517563 15.384971 6.953160 14.859219 7.326687 c
11.726886 9.605810 7.916658 8.588970 5.275213 7.326687 c
3.446821 6.441470 1.741619 5.321693 0.202703 3.995660 c
0.179672 3.976661 0.150746 3.966268 0.120889 3.966268 c
0.091032 3.966268 0.062105 3.976661 0.039074 3.995660 c
0.026872 4.005521 0.017031 4.017984 0.010270 4.032140 c
0.003509 4.046297 0.000000 4.061787 0.000000 4.077475 c
0.000000 4.093163 0.003509 4.108651 0.010270 4.122807 c
0.017031 4.136963 0.026872 4.149429 0.039074 4.159289 c
1.589518 5.502254 3.310884 6.634112 5.158335 7.525380 c
9.026999 9.372054 12.428152 9.360366 14.976095 7.525380 c
15.521185 7.136247 16.019299 6.685199 16.460447 6.181280 c
19.814850 2.347678 21.626461 0.699697 24.875671 1.038644 c
28.861216 1.459405 31.888359 4.825494 32.671440 6.087777 c
32.686939 6.112576 32.711655 6.130201 32.740147 6.136777 c
32.768642 6.143353 32.798584 6.138341 32.823383 6.122842 c
32.848183 6.107343 32.865807 6.082628 32.872383 6.054133 c
32.878960 6.025639 32.873947 5.995697 32.858448 5.970899 c
31.956583 4.610328 30.784662 3.449671 29.415445 2.560987 c
28.046230 1.672304 26.508947 1.074568 24.899046 0.804889 c
24.618538 0.828264 24.338032 0.758137 24.069212 0.758137 c
h
f
n
Q
q
/E16 gs
1.000000 0.000000 -0.000000 1.000000 10.915039 23.053223 cm
/Pattern cs
/P17 scn
24.127651 0.760790 m
21.170635 0.760790 19.452528 2.595777 16.285131 6.148871 c
15.855635 6.641126 15.369123 7.080555 14.835842 7.457905 c
11.703509 9.725341 7.904970 8.626686 5.263525 7.352715 c
3.438498 6.434633 1.737867 5.287786 0.202703 3.939874 c
0.179672 3.920874 0.150746 3.910483 0.120889 3.910483 c
0.091032 3.910483 0.062105 3.920874 0.039074 3.939874 c
0.026872 3.949734 0.017031 3.962200 0.010270 3.976356 c
0.003509 3.990512 0.000000 4.006000 0.000000 4.021688 c
0.000000 4.037376 0.003509 4.052866 0.010270 4.067022 c
0.017031 4.081179 0.026872 4.093644 0.039074 4.103505 c
1.583069 5.471765 3.300321 6.631006 5.146648 7.551408 c
9.015313 9.456521 12.404777 9.479897 14.964407 7.633222 c
15.509183 7.248146 16.007317 6.801004 16.448759 6.300812 c
19.779785 2.525649 21.521269 0.725725 24.817232 1.017921 c
28.837839 1.391931 31.829920 4.758021 32.671440 6.020305 c
32.686939 6.045103 32.711655 6.062729 32.740147 6.069304 c
32.768642 6.075880 32.798584 6.070868 32.823383 6.055369 c
32.848183 6.039870 32.865807 6.015153 32.872383 5.986659 c
32.878960 5.958164 32.873947 5.928225 32.858448 5.903426 c
32.028610 4.606079 28.954718 1.169864 24.840607 0.784166 c
24.127651 0.760790 l
h
f
n
Q
q
/E17 gs
1.000000 0.000000 -0.000000 1.000000 10.922852 23.115479 cm
/Pattern cs
/P18 scn
24.180428 0.775716 m
21.164974 0.775716 19.505302 2.657454 16.337906 6.222236 c
16.279467 6.280676 l
15.843930 6.778145 15.353863 7.225086 14.818491 7.613086 c
11.674470 9.857145 7.875932 8.781867 5.234487 7.402705 c
3.412031 6.454601 1.719009 5.276164 0.197040 3.896362 c
0.174008 3.877362 0.145083 3.866971 0.115226 3.866971 c
0.085368 3.866971 0.056442 3.877362 0.033410 3.896362 c
0.011995 3.918210 0.000000 3.947583 0.000000 3.978176 c
0.000000 4.008769 0.011995 4.038143 0.033410 4.059990 c
1.569535 5.443522 3.278504 6.622121 5.117608 7.566334 c
8.986273 9.518198 12.375739 9.588327 14.947058 7.753341 c
15.497976 7.376008 16.003849 6.936798 16.454784 6.444305 c
16.513224 6.444305 l
19.820875 2.715893 21.468857 0.845844 24.764818 1.102976 c
28.820490 1.406859 31.847628 4.784636 32.677464 6.046919 c
32.692963 6.071718 32.717678 6.089343 32.746174 6.095919 c
32.774670 6.102494 32.804607 6.097483 32.829407 6.081984 c
32.854202 6.066484 32.871830 6.041770 32.878407 6.013275 c
32.884979 5.984780 32.879967 5.954839 32.864468 5.930041 c
32.034634 4.621006 28.937368 1.184790 24.788195 0.869219 c
24.587551 0.826507 24.384632 0.795289 24.180428 0.775716 c
h
f
n
Q
q
/E18 gs
1.000000 0.000000 -0.000000 1.000000 10.922852 23.125732 cm
/Pattern cs
/P19 scn
24.238867 0.808590 m
21.293539 0.808590 19.657244 2.643576 16.817106 5.846036 c
16.279467 6.430427 l
15.843979 6.921972 15.349332 7.357734 14.806803 7.727775 c
11.651094 9.960146 7.864244 8.803053 5.234487 7.423891 c
3.409266 6.452121 1.716291 5.250149 0.197040 3.847422 c
0.174008 3.828422 0.145083 3.818028 0.115226 3.818028 c
0.085368 3.818028 0.056442 3.828422 0.033410 3.847422 c
0.011995 3.869269 0.000000 3.898643 0.000000 3.929236 c
0.000000 3.959829 0.011995 3.989202 0.033410 4.011050 c
1.570152 5.416590 3.278430 6.622201 5.117608 7.599208 c
8.974586 9.609511 12.364052 9.714702 14.947058 7.891403 c
15.499358 7.502475 16.005238 7.051497 16.454784 6.547305 c
16.992424 5.939538 l
20.031256 2.515009 21.562355 0.796903 24.706377 1.007283 c
28.808798 1.264415 31.847628 4.630503 32.677464 5.904474 c
32.692963 5.929273 32.717678 5.946900 32.746174 5.953476 c
32.774670 5.960052 32.804607 5.955037 32.829407 5.939538 c
32.854202 5.924039 32.871830 5.899324 32.878407 5.870830 c
32.884979 5.842336 32.879967 5.812396 32.864468 5.787598 c
32.022945 4.478563 28.913992 1.042345 24.683004 0.773526 c
24.238867 0.808590 l
h
f
n
Q
q
/E19 gs
1.000000 0.000000 -0.000000 1.000000 10.971680 23.206299 cm
/Pattern cs
/P20 scn
24.224539 0.788289 m
21.349339 0.788289 19.829922 2.494709 17.211851 5.463413 c
16.276825 6.527004 l
15.831306 7.012775 15.333508 7.447862 14.792475 7.824351 c
11.625077 10.045035 7.838226 8.829503 5.208468 7.415277 c
3.391838 6.414142 1.710734 5.184737 0.206085 3.756994 c
0.182286 3.734811 0.150961 3.722476 0.118427 3.722476 c
0.085892 3.722476 0.054567 3.734811 0.030767 3.756994 c
0.010851 3.781869 0.000000 3.812785 0.000000 3.844651 c
0.000000 3.876518 0.010851 3.907435 0.030767 3.932311 c
1.555525 5.371537 3.255916 6.612468 5.091591 7.625659 c
8.936881 9.694401 12.338033 9.822967 14.921039 8.011356 c
15.476611 7.626546 15.986391 7.179510 16.440456 6.678946 c
17.375481 5.615356 l
20.110428 2.541461 21.618156 0.846728 24.633612 0.998670 c
28.771097 1.209050 31.833305 4.575140 32.663139 5.849111 c
32.678638 5.873909 32.703354 5.891535 32.731846 5.898110 c
32.760342 5.904686 32.790279 5.899674 32.815079 5.884175 c
32.839878 5.868676 32.857502 5.843961 32.864079 5.815467 c
32.870655 5.786972 32.865646 5.757030 32.850147 5.732232 c
32.008621 4.423198 28.887974 0.975293 24.668673 0.764913 c
24.224539 0.788289 l
h
f
n
Q
q
/E20 gs
1.000000 0.000000 -0.000000 1.000000 10.942383 23.286621 cm
/Pattern cs
/P21 scn
24.287268 0.763737 m
21.458818 0.763737 20.044596 2.364966 17.531717 5.216792 c
17.134331 5.672616 16.713570 6.151816 16.257746 6.654392 c
15.808403 7.144099 15.306726 7.583067 14.761704 7.963428 c
11.582621 10.160736 7.807458 8.898452 5.189388 7.449163 c
3.368754 6.421658 1.687553 5.164685 0.187006 3.709063 c
0.164498 3.692183 0.136657 3.683987 0.108593 3.685981 c
0.080530 3.687975 0.054128 3.700028 0.034234 3.719922 c
0.014340 3.739816 0.002289 3.766218 0.000294 3.794281 c
-0.001700 3.822345 0.006495 3.850186 0.023376 3.872694 c
1.534995 5.345409 3.232378 6.614516 5.072511 7.647856 c
8.906113 9.775038 12.307265 9.985418 14.890271 8.150433 c
15.453965 7.771569 15.968289 7.323988 16.421373 6.818020 c
16.888885 6.303757 17.309649 5.824557 17.707033 5.368732 c
20.254976 2.481843 21.657511 0.892302 24.579464 0.997492 c
28.752012 1.149433 31.825907 4.503835 32.655739 5.801182 c
32.663414 5.813461 32.673435 5.824107 32.685226 5.832515 c
32.697014 5.840922 32.710342 5.846926 32.724453 5.850182 c
32.738560 5.853437 32.753174 5.853884 32.767452 5.851492 c
32.781734 5.849101 32.795406 5.843919 32.807682 5.836244 c
32.819962 5.828570 32.830612 5.818553 32.839020 5.806765 c
32.847427 5.794975 32.853428 5.781645 32.856682 5.767536 c
32.859940 5.753427 32.860386 5.738814 32.857994 5.724533 c
32.855602 5.710252 32.850418 5.696583 32.842747 5.684303 c
32.001225 4.363581 28.857203 0.927366 24.579464 0.763737 c
24.287268 0.763737 l
h
f
n
Q
q
/E21 gs
1.000000 0.000000 -0.000000 1.000000 10.942383 23.298584 cm
/Pattern cs
/P22 scn
24.766474 0.796583 m
24.521029 0.796583 l
21.505573 0.901773 20.114725 2.467941 17.613533 5.308079 c
16.246059 6.827494 l
15.804823 7.322051 15.302051 7.758049 14.750018 8.124842 c
11.570933 10.322149 7.737332 9.001427 5.177701 7.517075 c
3.360859 6.456812 1.684204 5.172815 0.187006 3.695160 c
0.164498 3.678279 0.136657 3.670084 0.108593 3.672078 c
0.080530 3.674072 0.054128 3.686125 0.034234 3.706018 c
0.014340 3.725913 0.002289 3.752315 0.000294 3.780378 c
-0.001700 3.808442 0.006495 3.836283 0.023376 3.858791 c
1.526012 5.354978 3.215173 6.651309 5.049135 7.715767 c
8.882737 9.901388 12.283891 10.111769 14.878585 8.323534 c
15.444087 7.937952 15.961953 7.486780 16.421375 6.979436 c
16.923952 6.441797 17.356401 5.939219 17.788849 5.460020 c
20.254978 2.666633 21.610764 1.135530 24.521029 1.030340 c
28.436445 0.901774 31.533714 4.092546 32.702496 5.787279 c
32.710171 5.799558 32.720188 5.810204 32.731976 5.818611 c
32.743767 5.827019 32.757099 5.833022 32.771206 5.836278 c
32.785316 5.839534 32.799927 5.839980 32.814209 5.837589 c
32.828491 5.835198 32.842159 5.830015 32.854439 5.822341 c
32.866718 5.814667 32.877361 5.804650 32.885769 5.792861 c
32.894176 5.781072 32.900181 5.767742 32.903439 5.753633 c
32.906696 5.739523 32.907139 5.724911 32.904751 5.710630 c
32.902359 5.696349 32.897175 5.682679 32.889500 5.670401 c
31.744095 3.917229 28.716953 0.796583 24.766474 0.796583 c
h
f
n
Q
q
/E22 gs
1.000000 0.000000 -0.000000 1.000000 10.895508 23.339844 cm
/Pattern cs
/P23 scn
24.836597 0.804756 m
24.497652 0.804756 l
21.587387 0.945010 20.290039 2.429360 17.940790 5.117557 c
17.461590 5.666884 16.912262 6.286338 16.292809 6.975919 c
15.827007 7.467501 15.305303 7.902909 14.738330 8.273267 c
11.547558 10.447199 7.725644 9.091413 5.154325 7.560309 c
3.343838 6.468985 1.675383 5.157775 0.187006 3.656581 c
0.164498 3.639700 0.136657 3.631505 0.108593 3.633499 c
0.080530 3.635493 0.054128 3.647545 0.034234 3.667439 c
0.014340 3.687334 0.002289 3.713736 0.000294 3.741799 c
-0.001700 3.769863 0.006495 3.797704 0.023376 3.820211 c
1.519769 5.341768 3.204828 6.665461 5.037447 7.759002 c
8.859361 10.003061 12.260514 10.248507 14.866897 8.460271 c
15.437996 8.081906 15.960117 7.634375 16.421375 7.127861 c
17.040829 6.461657 17.590157 5.830514 18.081043 5.269499 c
20.418606 2.628055 21.657513 1.178765 24.462587 1.038511 c
29.394844 0.804755 32.644054 5.713635 32.644054 5.713635 c
32.659554 5.738434 32.684273 5.756059 32.712765 5.762635 c
32.741261 5.769210 32.771198 5.764198 32.795998 5.748700 c
32.820797 5.733201 32.838421 5.708486 32.844997 5.679991 c
32.851574 5.651497 32.846558 5.621555 32.831059 5.596757 c
31.790844 3.878649 28.763700 0.804756 24.836597 0.804756 c
h
f
n
Q
q
/E23 gs
1.000000 0.000000 -0.000000 1.000000 10.906250 23.314941 cm
/Pattern cs
/P24 scn
24.871662 0.862199 m
24.427523 0.862199 l
21.599073 1.049204 20.313416 2.545244 18.232985 5.069811 c
17.683657 5.700953 17.064203 6.425597 16.339558 7.208681 c
15.853379 7.694715 15.312070 8.122272 14.726642 8.482653 c
11.524181 10.644897 7.713955 9.230672 5.142637 7.664505 c
3.330656 6.548362 1.665791 5.209401 0.187006 3.678961 c
0.164498 3.662081 0.136657 3.653885 0.108593 3.655879 c
0.080530 3.657874 0.054127 3.669926 0.034233 3.689820 c
0.014339 3.709714 0.002289 3.736116 0.000294 3.764180 c
-0.001700 3.792243 0.006495 3.820085 0.023376 3.842592 c
1.513088 5.390054 3.194117 6.741159 5.025759 7.863197 c
8.835985 10.200760 12.237139 10.434517 14.855208 8.669657 c
15.429838 8.291306 15.955831 7.843822 16.421375 7.337247 c
17.146019 6.554164 17.765472 5.817832 18.314798 5.186690 c
20.570547 2.662123 21.739326 1.271274 24.439211 1.119332 c
29.418219 0.815449 32.620678 5.724330 32.690804 5.794456 c
32.706303 5.819255 32.731022 5.836881 32.759514 5.843456 c
32.788010 5.850032 32.817951 5.845017 32.842747 5.829519 c
32.867546 5.814020 32.885170 5.789305 32.891747 5.760810 c
32.898323 5.732316 32.893311 5.702376 32.877811 5.677578 c
32.854435 5.595763 29.733789 0.862199 24.871662 0.862199 c
h
f
n
Q
q
/E24 gs
1.000000 0.000000 -0.000000 1.000000 10.918945 23.338623 cm
/Pattern cs
/P25 scn
24.895039 0.885477 m
24.357399 0.885477 l
21.610764 1.072482 20.395231 2.521769 18.373240 4.906083 c
17.765472 5.619039 17.087580 6.437187 16.269434 7.313773 c
15.809705 7.818491 15.287306 8.262332 14.714955 8.634495 c
11.500807 10.785051 7.702268 9.324077 5.130949 7.722847 c
3.323128 6.573940 1.662791 5.207988 0.187005 3.655487 c
0.164497 3.638607 0.136657 3.630411 0.108593 3.632405 c
0.080530 3.634399 0.054127 3.646452 0.034233 3.666346 c
0.014339 3.686240 0.002289 3.712642 0.000294 3.740705 c
-0.001700 3.768769 0.006495 3.796610 0.023376 3.819118 c
1.506913 5.391977 3.183844 6.770435 5.014071 7.921537 c
8.824298 10.259099 12.213764 10.586359 14.843522 8.833187 c
15.417058 8.448674 15.946235 8.001813 16.421375 7.500777 c
17.239521 6.612504 17.917416 5.794358 18.525183 5.081401 c
20.512110 2.743839 21.704268 1.329614 24.369087 1.142609 c
28.529949 0.838725 31.767473 4.368444 32.667435 5.747606 c
32.682934 5.772404 32.707645 5.790030 32.736141 5.796606 c
32.764637 5.803181 32.794579 5.798167 32.819378 5.782668 c
32.844177 5.767169 32.861801 5.742454 32.868378 5.713960 c
32.874950 5.685465 32.869938 5.655526 32.854439 5.630727 c
32.842751 5.572289 29.745480 0.885477 24.895039 0.885477 c
h
f
n
Q
q
/E25 gs
1.000000 0.000000 -0.000000 1.000000 10.931641 23.337402 cm
/Pattern cs
/P26 scn
24.882803 0.934479 m
24.286728 0.934479 l
21.610218 1.156547 20.382998 2.629212 18.536324 4.861584 c
17.893494 5.644667 17.157162 6.532941 16.198761 7.503029 c
15.752785 7.999594 15.250754 8.442791 14.702721 8.823750 c
11.488572 10.962620 7.690034 9.443206 5.130404 7.806912 c
3.320663 6.638433 1.667163 5.244149 0.209835 3.657738 c
0.184959 3.637822 0.154042 3.626970 0.122175 3.626970 c
0.090309 3.626970 0.059393 3.637822 0.034517 3.657738 c
0.012334 3.681538 0.000000 3.712863 0.000000 3.745398 c
0.000000 3.777932 0.012334 3.809256 0.034517 3.833055 c
1.509358 5.429451 3.178084 6.835109 5.001837 8.017294 c
8.812063 10.424982 12.201530 10.775616 14.842976 9.022444 c
15.418187 8.644643 15.947670 8.201446 16.420828 7.701722 c
17.332478 6.719946 18.068810 5.831672 18.758390 5.048588 c
20.546625 2.711026 21.715406 1.401993 24.310101 1.191612 c
28.517714 0.840978 31.766924 4.370696 32.666885 5.749858 c
32.682384 5.774656 32.707104 5.792282 32.735596 5.798857 c
32.764091 5.805433 32.794029 5.800419 32.818829 5.784920 c
32.843628 5.769421 32.861252 5.744706 32.867828 5.716211 c
32.874405 5.687717 32.869389 5.657778 32.853889 5.632979 c
31.977304 4.277193 28.915098 0.934479 24.882803 0.934479 c
h
f
n
Q
q
/E26 gs
1.000000 0.000000 -0.000000 1.000000 10.949219 23.499512 cm
/Pattern cs
/P27 scn
24.513348 0.844222 m
24.209467 0.844222 l
21.614773 0.937724 20.457678 2.387012 18.727880 4.596008 c
18.038300 5.472594 17.243530 6.466058 16.226692 7.553024 c
15.767176 8.043308 15.249010 8.475111 14.683901 8.838682 c
11.458065 10.965863 7.671215 9.411386 5.111585 7.728341 c
3.306160 6.527045 1.657202 5.105801 0.202703 3.497353 c
0.179672 3.478354 0.150746 3.467963 0.120889 3.467963 c
0.091032 3.467963 0.062106 3.478354 0.039075 3.497353 c
0.026873 3.507214 0.017031 3.519679 0.010270 3.533835 c
0.003509 3.547992 0.000000 3.563480 0.000000 3.579167 c
0.000000 3.594855 0.003509 3.610346 0.010270 3.624502 c
0.017031 3.638659 0.026873 3.651124 0.039075 3.660984 c
1.509025 5.284983 3.173437 6.721715 4.994706 7.938723 c
8.793244 10.404850 12.194398 10.790546 14.824156 9.049063 c
15.411819 8.674047 15.949811 8.226375 16.425385 7.716653 c
17.453911 6.629687 18.236994 5.624535 18.938263 4.747949 c
20.609619 2.550640 21.696587 1.171479 24.221153 1.077977 c
28.604082 0.926035 31.853292 4.373940 32.648064 5.589472 c
32.663563 5.614271 32.688278 5.631896 32.716774 5.638472 c
32.745270 5.645047 32.775208 5.640033 32.800007 5.624534 c
32.824802 5.609035 32.842430 5.584320 32.849007 5.555826 c
32.855579 5.527331 32.850567 5.497392 32.835068 5.472594 c
32.051983 4.245374 28.849525 0.844222 24.513348 0.844222 c
h
f
n
Q
q
/E27 gs
1.000000 0.000000 -0.000000 1.000000 10.967773 23.562256 cm
/Pattern cs
/P28 scn
24.531061 0.818400 m
24.133677 0.818400 l
21.574045 0.946966 20.487078 2.372879 18.815722 4.523436 c
18.006727 5.615890 17.136541 6.661674 16.209339 7.655769 c
15.753213 8.156338 15.234712 8.596279 14.666550 8.964806 c
11.440714 11.068611 7.653863 9.467381 5.105920 7.796024 c
3.299696 6.564215 1.651131 5.115832 0.197040 3.483222 c
0.174008 3.464221 0.145083 3.453828 0.115226 3.453828 c
0.085368 3.453828 0.056442 3.464221 0.033410 3.483222 c
0.011995 3.505069 0.000000 3.534443 0.000000 3.565036 c
0.000000 3.595629 0.011995 3.625002 0.033410 3.646850 c
1.493852 5.299809 3.154636 6.764283 4.977355 8.006403 c
8.764205 10.519282 12.165359 10.940043 14.806804 9.175184 c
15.397989 8.800164 15.939849 8.352541 16.419722 7.842774 c
17.351110 6.840986 18.225191 5.787406 19.037790 4.687065 c
20.662395 2.583259 21.737675 1.180723 24.180426 1.075533 c
28.610106 0.865152 31.871008 4.324744 32.665779 5.540277 c
32.681278 5.565075 32.705990 5.582700 32.734486 5.589276 c
32.762981 5.595851 32.792919 5.590837 32.817719 5.575338 c
32.842514 5.559839 32.860142 5.535125 32.866718 5.506630 c
32.873291 5.478136 32.868282 5.448196 32.852783 5.423398 c
31.906673 4.074055 30.665524 2.958045 29.223591 2.160121 c
27.781656 1.362198 26.176857 0.903341 24.531061 0.818400 c
h
f
n
Q
q
/E28 gs
1.000000 0.000000 -0.000000 1.000000 10.982422 23.529297 cm
/Pattern cs
/P29 scn
24.552559 0.893093 m
24.061670 0.893093 l
21.548792 1.045034 20.438450 2.529386 18.907347 4.574753 c
18.072254 5.728221 17.166670 6.828974 16.195774 7.870716 c
15.739025 8.370640 15.220612 8.810507 14.652983 9.179751 c
11.415460 11.271870 7.640297 9.612200 5.080667 7.859028 c
3.281250 6.596096 1.640880 5.120548 0.195162 3.464410 c
0.173985 3.445308 0.146554 3.434608 0.118037 3.434326 c
0.089519 3.434043 0.061883 3.444198 0.040331 3.462876 c
0.018780 3.481554 0.004801 3.507467 0.001028 3.535736 c
-0.002745 3.564004 0.003946 3.592676 0.019844 3.616353 c
1.472702 5.292887 3.129662 6.781010 4.952100 8.046032 c
8.727262 10.629039 12.128417 11.084865 14.781549 9.378445 c
15.371425 8.996756 15.916399 8.549796 16.406155 8.046032 c
17.378435 6.994139 18.287771 5.885765 19.129416 4.726694 c
20.672207 2.657951 21.700733 1.278790 24.108423 1.138535 c
28.573166 0.881404 31.857443 4.329309 32.652214 5.556529 c
32.667713 5.581327 32.692425 5.598953 32.720921 5.605529 c
32.749416 5.612104 32.779354 5.607090 32.804153 5.591591 c
32.828949 5.576092 32.846577 5.551377 32.853153 5.522883 c
32.859726 5.494388 32.854717 5.464449 32.839218 5.439651 c
31.893045 4.103157 30.655334 2.999327 29.219704 2.211655 c
27.784075 1.423982 26.188120 0.973094 24.552559 0.893093 c
h
f
n
Q
q
/E29 gs
1.000000 0.000000 -0.000000 1.000000 10.993164 23.528076 cm
/Pattern cs
/P30 scn
24.575935 0.943384 m
24.381306 0.931943 24.186172 0.931943 23.991545 0.943384 c
21.513729 1.107014 20.485201 2.579680 18.977472 4.601671 c
18.124771 5.812355 17.191532 6.964259 16.184086 8.049574 c
15.723949 8.545970 15.205995 8.985448 14.641295 9.358609 c
11.392084 11.439039 7.628609 9.744306 5.068979 7.944383 c
3.271190 6.652533 1.634891 5.149649 0.195162 3.467952 c
0.173985 3.448850 0.146554 3.438151 0.118037 3.437868 c
0.089519 3.437585 0.061883 3.447740 0.040331 3.466418 c
0.018780 3.485096 0.004801 3.511009 0.001028 3.539278 c
-0.002745 3.567546 0.003946 3.596218 0.019844 3.619895 c
1.470162 5.318524 3.122595 6.833580 4.940412 8.131388 c
8.703887 10.772833 12.105041 11.263722 14.769861 9.557302 c
15.361568 9.182646 15.906890 8.739325 16.394466 8.236578 c
17.414989 7.135764 18.356268 5.964051 19.211229 4.730236 c
20.648830 2.708244 21.653982 1.352459 23.991545 1.200518 c
28.503038 0.884947 31.787315 4.332851 32.593773 5.560071 c
32.609272 5.584869 32.633984 5.602495 32.662479 5.609070 c
32.690975 5.615646 32.720917 5.610632 32.745716 5.595133 c
32.770515 5.579634 32.788139 5.554919 32.794716 5.526425 c
32.801292 5.497930 32.796276 5.467991 32.780777 5.443192 c
31.841829 4.122166 30.615810 3.031019 29.194771 2.251674 c
27.773729 1.472328 26.194597 1.025037 24.575935 0.943384 c
h
f
n
Q
q
/E30 gs
1.000000 0.000000 -0.000000 1.000000 11.003906 23.594482 cm
/Pattern cs
/P31 scn
24.611000 0.912360 m
24.381287 0.900723 24.151131 0.900723 23.921419 0.912360 c
21.466978 1.111053 20.415075 2.560341 19.035913 4.570644 c
18.173498 5.837373 17.216248 7.036866 16.172400 8.158803 c
15.709183 8.651970 15.191624 9.091112 14.629608 9.467838 c
11.368709 11.536581 7.616922 9.783410 5.057292 7.948424 c
3.261198 6.627626 1.628970 5.097411 0.195162 3.390175 c
0.173985 3.371074 0.146555 3.360374 0.118038 3.360091 c
0.089520 3.359808 0.061884 3.369964 0.040332 3.388642 c
0.018781 3.407320 0.004801 3.433233 0.001028 3.461501 c
-0.002746 3.489769 0.003947 3.518441 0.019845 3.542118 c
1.464172 5.266284 3.112530 6.808678 4.928725 8.135428 c
8.692200 10.823626 12.081666 11.361264 14.758175 9.666532 c
15.340371 9.279966 15.870638 8.820400 16.336027 8.299057 c
17.393715 7.174663 18.359133 5.966914 19.222918 4.687523 c
20.648830 2.653844 21.560480 1.321433 23.898043 1.181180 c
25.973757 1.061707 28.030083 1.637477 29.741947 2.817473 c
30.836458 3.534303 31.794283 4.440678 32.570396 5.493983 c
32.585896 5.518781 32.610611 5.536407 32.639107 5.542982 c
32.667599 5.549558 32.697540 5.544544 32.722340 5.529045 c
32.747135 5.513546 32.764763 5.488831 32.771336 5.460336 c
32.777912 5.431842 32.772900 5.401903 32.757401 5.377104 c
31.825722 4.065144 30.608505 2.981681 29.197416 2.208315 c
27.786327 1.434949 26.218155 0.991841 24.611000 0.912360 c
h
f
n
Q
q
/E31 gs
1.000000 0.000000 -0.000000 1.000000 10.946289 23.520996 cm
/Pattern cs
/P32 scn
24.681124 1.034084 m
24.423992 1.034084 24.166861 1.034084 23.921415 1.034084 c
21.490351 1.256152 20.508575 2.693754 19.152790 4.692370 c
18.287018 6.012653 17.309441 7.256132 16.230837 8.409095 c
15.749784 8.907531 15.207884 9.343407 14.617920 9.706440 c
11.345333 11.751807 7.605233 9.951885 5.057291 8.081835 c
3.258907 6.719459 1.626989 5.150306 0.195162 3.406711 c
0.173985 3.387609 0.146554 3.376909 0.118037 3.376626 c
0.089519 3.376344 0.061883 3.386497 0.040331 3.405175 c
0.018780 3.423852 0.004801 3.449766 0.001028 3.478034 c
-0.002745 3.506302 0.003946 3.534975 0.019844 3.558651 c
1.452340 5.309742 3.092940 6.879694 4.905349 8.233776 c
8.668824 10.980412 12.069976 11.541428 14.746485 9.870071 c
15.348422 9.495265 15.901914 9.047759 16.394464 8.537659 c
17.492331 7.406053 18.485924 6.177756 19.363171 4.867687 c
20.683893 2.927510 21.642294 1.524973 23.968168 1.361343 c
28.643293 0.940582 32.021069 4.622242 32.675587 5.627394 c
32.691086 5.652193 32.715801 5.669818 32.744297 5.676394 c
32.772793 5.682970 32.802731 5.677958 32.827530 5.662458 c
32.852325 5.646960 32.869953 5.622245 32.876530 5.593750 c
32.883102 5.565256 32.878090 5.535314 32.862591 5.510516 c
32.080166 4.426029 31.100870 3.498273 29.975704 2.775568 c
28.424597 1.678886 26.580381 1.072292 24.681124 1.034084 c
h
f
n
Q
q
/E32 gs
1.000000 0.000000 -0.000000 1.000000 10.938477 23.458984 cm
/Pattern cs
/P33 scn
24.723728 1.130188 m
24.443222 1.130188 24.151028 1.130188 23.870520 1.130188 c
21.462831 1.375632 20.516117 2.813232 19.195395 4.800160 c
18.330290 6.176457 17.332027 7.464411 16.215002 8.645451 c
15.730497 9.136724 15.189019 9.568338 14.602085 9.931110 c
11.317811 11.976478 7.589399 10.129802 5.041456 8.213001 c
3.245317 6.856150 1.620517 5.286294 0.202703 3.537877 c
0.179672 3.518877 0.150745 3.508486 0.120888 3.508486 c
0.091031 3.508486 0.062105 3.518877 0.039074 3.537877 c
0.026872 3.547737 0.017030 3.560203 0.010269 3.574358 c
0.003508 3.588515 0.000000 3.604003 0.000000 3.619691 c
0.000000 3.635379 0.003508 3.650869 0.010269 3.665025 c
0.017030 3.679182 0.026872 3.691647 0.039074 3.701508 c
1.462258 5.470304 3.094911 7.059785 4.901203 8.435070 c
8.652989 11.240145 12.054144 11.836223 14.730652 10.164865 c
15.344033 9.800921 15.906110 9.356763 16.402006 8.844144 c
17.519154 7.640838 18.513636 6.329221 19.370712 4.928727 c
20.656372 2.988550 21.579708 1.597702 23.870520 1.363945 c
28.545643 0.884746 31.970169 4.578092 32.636375 5.583243 c
32.651875 5.608042 32.676590 5.625667 32.705086 5.632243 c
32.733582 5.638819 32.763519 5.633807 32.788319 5.618308 c
32.813118 5.602808 32.830742 5.578094 32.837318 5.549599 c
32.843891 5.521105 32.838879 5.491163 32.823380 5.466365 c
31.878000 4.189579 30.661165 3.138403 29.260561 2.388584 c
27.859955 1.638764 26.310461 1.208977 24.723728 1.130188 c
h
f
n
Q
q
/E33 gs
1.000000 0.000000 -0.000000 1.000000 10.949219 23.467285 cm
/Pattern cs
/P34 scn
24.747105 1.170641 m
24.427870 1.153462 24.107941 1.153462 23.788706 1.170641 c
21.451143 1.439461 20.504429 2.877062 19.230457 4.852301 c
18.373343 6.282999 17.362169 7.615556 16.215004 8.826157 c
15.726267 9.317505 15.180915 9.749080 14.590399 10.111815 c
11.294436 12.145494 7.577712 10.240379 5.018081 8.288515 c
3.223120 6.889587 1.605989 5.276383 0.202703 3.484828 c
0.179672 3.465827 0.150746 3.455435 0.120889 3.455435 c
0.091032 3.455435 0.062106 3.465827 0.039075 3.484828 c
0.026873 3.494688 0.017031 3.507151 0.010270 3.521307 c
0.003509 3.535464 0.000000 3.550954 0.000000 3.566642 c
0.000000 3.582330 0.003509 3.597818 0.010270 3.611974 c
0.017031 3.626131 0.026873 3.638596 0.039075 3.648456 c
1.457959 5.455688 3.090563 7.084366 4.901204 8.498897 c
8.641303 11.362410 12.042457 12.005239 14.730653 10.333882 c
15.340351 9.959484 15.905060 9.516344 16.413696 9.013161 c
17.568808 7.790827 18.587729 6.446637 19.452528 5.004242 c
20.679749 3.075753 21.579708 1.684904 23.847143 1.427773 c
28.522268 0.901821 32.028610 4.583481 32.671440 5.600320 c
32.686939 5.625119 32.711655 5.642744 32.740150 5.649320 c
32.768646 5.655896 32.798584 5.650884 32.823383 5.635385 c
32.848179 5.619885 32.865807 5.595169 32.872383 5.566674 c
32.878956 5.538179 32.873943 5.508240 32.858444 5.483442 c
31.914701 4.204046 30.696150 3.152492 29.292423 2.406129 c
27.888697 1.659767 26.335508 1.237587 24.747105 1.170641 c
h
f
n
Q
q
/E34 gs
1.000000 0.000000 -0.000000 1.000000 10.950195 23.508545 cm
/Pattern cs
/P35 scn
24.770481 1.162706 m
24.422590 1.163556 24.075123 1.186980 23.730267 1.232833 c
21.392704 1.513340 20.445993 3.021070 19.265524 4.926183 c
18.416681 6.403763 17.392418 7.773370 16.215004 9.005228 c
15.727924 9.506568 15.177911 9.942649 14.578711 10.302574 c
11.282748 12.312878 7.566024 10.361013 5.018081 8.374085 c
3.223141 6.944253 1.606437 5.304004 0.202703 3.488581 c
0.179672 3.469581 0.150746 3.459190 0.120889 3.459190 c
0.091032 3.459190 0.062106 3.469581 0.039075 3.488581 c
0.026873 3.498441 0.017031 3.510906 0.010270 3.525063 c
0.003509 3.539219 0.000000 3.554707 0.000000 3.570395 c
0.000000 3.586083 0.003509 3.601573 0.010270 3.615729 c
0.017031 3.629886 0.026873 3.642351 0.039075 3.652211 c
1.448613 5.488023 3.077536 7.144422 4.889515 8.584467 c
8.617928 11.506419 12.019081 12.172625 14.718966 10.524643 c
15.333765 10.153029 15.899240 9.705361 16.402008 9.192233 c
17.591650 7.949438 18.627607 6.568162 19.487591 5.078124 c
20.656372 3.149634 21.532957 1.758785 23.788706 1.478278 c
28.569019 0.905575 31.970171 4.587236 32.671440 5.604076 c
32.686939 5.628874 32.711655 5.646500 32.740150 5.653075 c
32.768646 5.659651 32.798584 5.654637 32.823383 5.639138 c
32.848179 5.623639 32.865807 5.598924 32.872383 5.570429 c
32.878956 5.541935 32.873943 5.511996 32.858444 5.487197 c
31.919519 4.207418 30.705484 3.154551 29.305740 2.406133 c
27.905996 1.657715 26.356199 1.232807 24.770481 1.162706 c
h
f
n
Q
q
/E35 gs
1.000000 0.000000 -0.000000 1.000000 10.906250 23.493652 cm
/Pattern cs
/P36 scn
24.848286 1.211859 m
24.457169 1.209096 24.066422 1.236447 23.679504 1.293674 c
21.341942 1.597556 20.441980 3.105285 19.296576 5.022085 c
18.456123 6.543202 17.422968 7.949552 16.222683 9.206322 c
15.729768 9.707532 15.171514 10.139982 14.563013 10.491981 c
11.267051 12.502284 7.550326 10.491980 5.014071 8.469988 c
3.220952 7.011191 1.608320 5.343628 0.210381 3.502668 c
0.191782 3.477870 0.164094 3.461477 0.133408 3.457093 c
0.102721 3.452709 0.071550 3.460696 0.046751 3.479295 c
0.021953 3.497893 0.005559 3.525580 0.001175 3.556267 c
-0.003209 3.586954 0.004778 3.618125 0.023376 3.642923 c
1.438230 5.494692 3.061869 7.177157 4.862131 8.656993 c
8.613917 11.625696 12.015070 12.338654 14.726642 10.737424 c
15.347155 10.373597 15.916979 9.929529 16.421375 9.416702 c
17.636513 8.144173 18.685118 6.722468 19.542021 5.185714 c
20.710802 3.257225 21.517260 1.866375 23.749630 1.562492 c
28.565008 0.931351 32.024601 4.624698 32.690804 5.641538 c
32.706303 5.666336 32.731022 5.683964 32.759514 5.690539 c
32.788010 5.697115 32.817951 5.692101 32.842747 5.676602 c
32.867546 5.661103 32.885170 5.636388 32.891747 5.607893 c
32.898323 5.579399 32.893311 5.549460 32.877811 5.524662 c
31.948532 4.249639 30.744343 3.199986 29.354418 2.453432 c
27.964491 1.706878 26.424433 1.282545 24.848286 1.211859 c
h
f
n
Q
q
/E36 gs
1.000000 0.000000 -0.000000 1.000000 10.942383 23.445312 cm
/Pattern cs
/P37 scn
24.848286 1.292390 m
24.436468 1.310795 24.026415 1.357659 23.621063 1.432645 c
21.283503 1.759903 20.418604 3.267630 19.319950 5.184430 c
18.493242 6.755611 17.450706 8.203358 16.222679 9.485545 c
15.719398 9.979876 15.158209 10.411559 14.551323 10.771205 c
11.243672 12.758133 7.538638 10.712767 5.002383 8.655712 c
3.212771 7.161829 1.604459 5.463295 0.210380 3.594890 c
0.191781 3.570091 0.164093 3.553696 0.133407 3.549312 c
0.102720 3.544929 0.071550 3.552915 0.046752 3.571513 c
0.021953 3.590112 0.005559 3.617802 0.001175 3.648488 c
-0.003209 3.679174 0.004777 3.710343 0.023375 3.735142 c
1.432387 5.612642 3.051982 7.322433 4.850441 8.831028 c
8.567165 11.858171 11.968317 12.606191 14.679890 10.969897 c
15.306061 10.595292 15.879859 10.139400 16.386311 9.614112 c
17.630278 8.317139 18.688362 6.853912 19.530331 5.266247 c
20.640673 3.337758 21.435444 1.935221 23.656128 1.631337 c
28.518257 0.941757 31.989536 4.635105 32.655739 5.651945 c
32.663414 5.664223 32.673435 5.674870 32.685226 5.683277 c
32.697014 5.691684 32.710342 5.697688 32.724453 5.700944 c
32.738560 5.704200 32.753174 5.704644 32.767452 5.702252 c
32.781734 5.699861 32.795406 5.694681 32.807682 5.687006 c
32.819962 5.679332 32.830612 5.669316 32.839020 5.657526 c
32.847427 5.645738 32.853428 5.632407 32.856682 5.618298 c
32.859940 5.604189 32.860386 5.589576 32.857994 5.575295 c
32.855602 5.561014 32.850418 5.547345 32.842747 5.535066 c
31.909966 4.277471 30.708202 3.243974 29.325136 2.509978 c
27.942070 1.775983 26.412590 1.360003 24.848286 1.292390 c
h
f
n
Q
q
/E37 gs
1.000000 0.000000 -0.000000 1.000000 10.942383 23.832275 cm
/Pattern cs
/P38 scn
24.883347 0.958444 m
24.441353 0.955495 23.999796 0.986755 23.562626 1.051947 c
21.225063 1.402580 20.406916 2.921996 19.343325 4.838797 c
18.523203 6.448144 17.471834 7.928723 16.222679 9.233414 c
15.712768 9.725024 15.148049 10.156407 14.539637 10.519073 c
11.220299 12.494313 7.526950 10.402195 4.990695 8.298389 c
3.202957 6.775630 1.598706 5.049783 0.210380 3.155751 c
0.191781 3.130953 0.164093 3.114560 0.133407 3.110176 c
0.102720 3.105792 0.071550 3.113778 0.046752 3.132378 c
0.021953 3.150976 0.005559 3.178663 0.001175 3.209350 c
-0.003209 3.240036 0.004777 3.271208 0.023375 3.296006 c
1.424437 5.197361 3.035893 6.934283 4.827066 8.473706 c
8.543790 11.559288 11.944942 12.330684 14.656513 10.717766 c
15.282556 10.346358 15.863088 9.903114 16.386311 9.397041 c
17.655540 8.079313 18.719341 6.578170 19.542019 4.943987 c
20.617296 3.003811 21.388693 1.601274 23.597691 1.274015 c
25.322865 1.089908 27.066208 1.359729 28.655006 2.056751 c
30.243807 2.753773 31.622925 3.853806 32.655739 5.247870 c
32.671238 5.272669 32.695957 5.290294 32.724453 5.296870 c
32.752945 5.303445 32.782887 5.298434 32.807682 5.282935 c
32.832481 5.267436 32.850109 5.242719 32.856682 5.214224 c
32.863258 5.185730 32.858246 5.155790 32.842747 5.130992 c
31.912943 3.884103 30.715069 2.861869 29.337486 2.139700 c
27.959902 1.417530 26.437759 1.013852 24.883347 0.958444 c
h
f
n
Q
q
/E38 gs
1.000000 0.000000 -0.000000 1.000000 10.942383 23.829346 cm
/Pattern cs
/P39 scn
24.906723 0.994738 m
24.437279 0.995736 23.968531 1.030893 23.504187 1.099928 c
21.166626 1.473938 20.383541 2.993352 19.355013 4.933528 c
18.552477 6.587320 17.491119 8.102418 16.210991 9.421647 c
15.711855 9.925655 15.145489 10.358298 14.527948 10.707307 c
11.208611 12.670859 7.515262 10.531990 4.979007 8.369745 c
3.196736 6.814476 1.596934 5.061754 0.210380 3.145294 c
0.191781 3.120496 0.164093 3.104101 0.133407 3.099717 c
0.102720 3.095333 0.071550 3.103320 0.046752 3.121919 c
0.021953 3.140517 0.005559 3.168204 0.001175 3.198891 c
-0.003209 3.229577 0.004777 3.260749 0.023375 3.285547 c
1.419327 5.212137 3.026682 6.976306 4.815378 8.545061 c
8.520414 11.689082 11.921565 12.495542 14.644825 10.882624 c
15.274983 10.521976 15.856320 10.082047 16.374622 9.573590 c
17.665977 8.229616 18.738691 6.691533 19.553707 5.015343 c
20.593922 3.063478 21.341942 1.660941 23.539249 1.310307 c
25.755327 0.978851 28.015711 1.478385 29.885731 2.712845 c
30.979540 3.377872 31.938936 4.242123 32.714180 5.260787 c
32.729679 5.285586 32.754395 5.303212 32.782890 5.309787 c
32.811382 5.316363 32.841324 5.311349 32.866123 5.295850 c
32.890919 5.280351 32.908546 5.255636 32.915119 5.227141 c
32.921696 5.198647 32.916687 5.168707 32.901188 5.143909 c
31.966522 3.895555 30.762262 2.874149 29.378099 2.155761 c
27.993937 1.437372 26.465534 1.040513 24.906723 0.994738 c
h
f
n
Q
q
/E39 gs
1.000000 0.000000 -0.000000 1.000000 10.969727 23.388184 cm
/Pattern cs
/P40 scn
24.892406 1.489884 m
24.399134 1.488101 23.906559 1.527195 23.419743 1.606763 c
21.082180 2.004148 20.334160 3.535252 19.329008 5.475428 c
18.546669 7.172388 17.483759 8.725265 16.184988 10.068737 c
15.676243 10.566684 15.106861 10.998631 14.490256 11.354397 c
11.159230 13.306262 7.477570 11.108953 4.941315 8.935020 c
3.157887 7.354078 1.561797 5.573672 0.184375 3.628754 c
0.174556 3.618501 0.162763 3.610341 0.149707 3.604767 c
0.136650 3.599193 0.122602 3.596320 0.108405 3.596320 c
0.094209 3.596320 0.080159 3.599193 0.067102 3.604767 c
0.054046 3.610341 0.042253 3.618501 0.032434 3.628754 c
0.022181 3.638573 0.014022 3.650365 0.008448 3.663422 c
0.002874 3.676477 0.000000 3.690529 0.000000 3.704725 c
0.000000 3.718922 0.002874 3.732971 0.008448 3.746027 c
0.014022 3.759084 0.022181 3.770875 0.032434 3.780695 c
1.417128 5.741009 3.020935 7.536962 4.812748 9.133714 c
8.471033 12.289423 11.872186 13.177695 14.665573 11.529714 c
15.302524 11.169342 15.888244 10.725137 16.407057 10.208990 c
17.730860 8.845110 18.810186 7.263677 19.597828 5.533866 c
20.567917 3.652128 21.327625 2.167778 23.513245 1.793768 c
28.445501 0.963934 32.057034 4.704032 32.688175 5.674121 c
32.703674 5.698919 32.728390 5.716545 32.756886 5.723120 c
32.785381 5.729696 32.815319 5.724684 32.840118 5.709185 c
32.864914 5.693686 32.882542 5.668969 32.889118 5.640474 c
32.895691 5.611980 32.890682 5.582041 32.875183 5.557242 c
32.088741 4.508353 31.108816 3.619677 29.988293 2.939173 c
28.461151 1.983326 26.693996 1.480741 24.892406 1.489884 c
h
f
n
Q
q
/E40 gs
1.000000 0.000000 -0.000000 1.000000 10.967773 23.452881 cm
/Pattern cs
/P41 scn
24.916759 1.428588 m
24.395290 1.425117 23.874708 1.472087 23.362282 1.568842 c
21.024719 1.977916 20.300074 3.520704 19.329985 5.472569 c
18.570492 7.206697 17.505562 8.790236 16.185965 10.147694 c
15.672512 10.641853 15.099255 11.069834 14.479545 11.421665 c
11.136831 13.361841 7.466858 11.129470 4.930604 8.908786 c
3.150846 7.300719 1.562497 5.492747 0.197040 3.520707 c
0.174008 3.501707 0.145083 3.491314 0.115226 3.491314 c
0.085368 3.491314 0.056442 3.501707 0.033410 3.520707 c
0.011995 3.542555 0.000000 3.571928 0.000000 3.602521 c
0.000000 3.633114 0.011995 3.662488 0.033410 3.684336 c
1.412614 5.670213 3.012358 7.493449 4.802038 9.119167 c
8.495386 12.368378 11.884850 13.256652 14.631485 11.667109 c
15.271778 11.306440 15.861324 10.862313 16.384657 10.346386 c
17.721798 8.966827 18.802294 7.359939 19.575430 5.601136 c
20.522142 3.707710 21.258474 2.211671 23.432407 1.814285 c
28.399727 0.926012 32.034637 4.677800 32.665779 5.647888 c
32.681278 5.672686 32.705990 5.690312 32.734486 5.696887 c
32.762981 5.703463 32.792919 5.698449 32.817719 5.682950 c
32.842514 5.667451 32.860142 5.642736 32.866718 5.614242 c
32.873291 5.585747 32.868282 5.555808 32.852783 5.531009 c
32.066456 4.488366 31.086222 3.607346 29.965893 2.936316 c
28.457577 1.970115 26.707905 1.447642 24.916759 1.428588 c
h
f
n
Q
q
/E41 gs
1.000000 0.000000 -0.000000 1.000000 11.001953 23.418213 cm
/Pattern cs
/P42 scn
24.905071 1.462396 m
24.356117 1.462372 23.808340 1.513236 23.268776 1.614336 c
20.931213 2.035097 20.241636 3.601265 19.294924 5.564817 c
18.559095 7.342978 17.492174 8.965172 16.150900 10.345131 c
15.633193 10.839333 15.056067 11.267271 14.432794 11.619103 c
11.078392 13.547592 7.420107 11.256781 4.872164 9.001034 c
3.109069 7.363162 1.540370 5.527784 0.197040 3.531138 c
0.174008 3.512138 0.145083 3.501745 0.115226 3.501745 c
0.085368 3.501745 0.056443 3.512138 0.033411 3.531138 c
0.011996 3.552986 0.000000 3.582359 0.000000 3.612952 c
0.000000 3.643546 0.011996 3.672919 0.033411 3.694767 c
1.407735 5.705779 3.003363 7.556235 4.790349 9.211412 c
8.472010 12.519063 11.873163 13.442400 14.619798 11.852858 c
15.261276 11.493214 15.854336 11.053330 16.384657 10.543824 c
17.744173 9.146797 18.826838 7.504953 19.575428 5.705070 c
20.487078 3.788269 21.211721 2.280542 23.373966 1.871469 c
28.388037 0.936444 32.022945 4.688231 32.665775 5.658319 c
32.681274 5.683118 32.705994 5.700743 32.734489 5.707319 c
32.762981 5.713894 32.792923 5.708883 32.817719 5.693384 c
32.842518 5.677885 32.860142 5.653168 32.866718 5.624673 c
32.873295 5.596179 32.868282 5.566239 32.852783 5.541441 c
31.915325 4.312666 30.715271 3.308770 29.340250 2.603061 c
27.965229 1.897351 26.449955 1.507645 24.905071 1.462396 c
h
f
n
Q
q
/E42 gs
1.000000 0.000000 -0.000000 1.000000 10.971680 23.951172 cm
/Pattern cs
/P43 scn
24.960772 1.000968 m
24.379883 1.003734 23.800610 1.062443 23.230976 1.176285 c
20.951853 1.620421 20.238897 3.198276 19.327248 5.185204 c
18.610781 6.994265 17.542093 8.642985 16.183228 10.035648 c
15.664796 10.537372 15.083323 10.969546 14.453431 11.321305 c
11.087341 13.238107 7.440745 10.888856 4.892802 8.598045 c
3.135288 6.924767 1.567456 5.062968 0.217677 3.046334 c
0.200628 3.019986 0.173810 3.001490 0.143124 2.994914 c
0.112437 2.988338 0.080396 2.994224 0.054047 3.011272 c
0.027699 3.028321 0.009203 3.055138 0.002627 3.085824 c
-0.003949 3.116510 0.001935 3.148553 0.018984 3.174901 c
1.386055 5.209343 2.977830 7.083405 4.764235 8.761676 c
8.434208 12.139454 11.776923 13.097853 14.593686 11.519999 c
15.236254 11.156526 15.832726 10.717020 16.370232 10.210964 c
17.750547 8.794875 18.835209 7.118217 19.561005 5.278707 c
20.449278 3.350218 21.138859 1.830803 23.301104 1.410042 c
25.564753 0.978353 27.907887 1.421083 29.857965 2.648949 c
30.946836 3.296435 31.905928 4.140596 32.686413 5.138454 c
32.701912 5.163252 32.726631 5.180878 32.755123 5.187453 c
32.783619 5.194029 32.813560 5.189015 32.838356 5.173516 c
32.863155 5.158017 32.880779 5.133302 32.887356 5.104807 c
32.893932 5.076313 32.888924 5.046374 32.873425 5.021575 c
31.936666 3.804997 30.740250 2.812770 29.371387 2.117218 c
28.002525 1.421666 26.495708 1.040317 24.960772 1.000968 c
h
f
n
Q
q
/E43 gs
1.000000 0.000000 -0.000000 1.000000 10.994141 23.984619 cm
/Pattern cs
/P44 scn
24.971178 1.000496 m
24.358673 1.001423 23.747824 1.064074 23.147882 1.187501 c
20.810320 1.655013 20.179178 3.244555 19.302591 5.243170 c
18.605879 7.092639 17.531092 8.776473 16.146883 10.187116 c
15.627348 10.671198 15.045630 11.083901 14.417086 11.414334 c
11.050997 13.319448 7.404401 10.935135 4.868146 8.597572 c
3.103979 6.900493 1.535795 5.010832 0.193022 2.964048 c
0.171174 2.942634 0.141799 2.930638 0.111206 2.930638 c
0.080613 2.930638 0.051240 2.942634 0.029392 2.964048 c
0.010392 2.987081 0.000000 3.016006 0.000000 3.045862 c
0.000000 3.075720 0.010392 3.104646 0.029392 3.127677 c
1.398370 5.182259 2.985444 7.082829 4.762955 8.796266 c
8.421240 12.232482 11.775642 13.214256 14.580717 11.659778 c
15.231698 11.299183 15.832849 10.855196 16.368950 10.339056 c
17.776571 8.911030 18.867729 7.202614 19.571411 5.324986 c
20.424622 3.384810 21.102516 1.818644 23.253073 1.409570 c
25.515232 0.942539 27.870354 1.360856 29.833307 2.578351 c
30.921600 3.216906 31.880898 4.053319 32.661755 5.044477 c
32.677254 5.069275 32.701973 5.086903 32.730465 5.093479 c
32.758961 5.100054 32.788898 5.095040 32.813698 5.079541 c
32.838497 5.064042 32.856121 5.039328 32.862698 5.010833 c
32.869274 4.982338 32.864262 4.952399 32.848766 4.927601 c
32.054985 3.897035 31.071039 3.028152 29.950184 2.367970 c
28.445923 1.467446 26.724379 0.994628 24.971178 1.000496 c
h
f
n
Q
q
/E44 gs
1.000000 0.000000 -0.000000 1.000000 10.972656 24.058105 cm
/Pattern cs
/P45 scn
25.017927 0.960149 m
24.377703 0.959814 23.739193 1.026407 23.112814 1.158842 c
20.833691 1.649730 20.132423 3.321084 19.314276 5.272949 c
18.644997 7.157281 17.571951 8.872561 16.170258 10.298709 c
15.642070 10.795769 15.052979 11.223841 14.417086 11.572680 c
11.050997 13.466105 7.404399 11.023354 4.868144 8.650728 c
3.103420 6.924172 1.535475 5.007358 0.193020 2.935387 c
0.171173 2.913972 0.141799 2.901977 0.111206 2.901977 c
0.080613 2.901977 0.051239 2.913972 0.029391 2.935387 c
0.010391 2.958419 0.000000 2.987345 0.000000 3.017201 c
0.000000 3.047058 0.010391 3.075987 0.029391 3.099018 c
1.374709 5.179622 2.942298 7.107757 4.704515 8.849421 c
8.362799 12.355763 11.717199 13.360914 14.522274 11.806435 c
15.179073 11.454113 15.784651 11.013696 16.322197 10.497401 c
17.747845 9.049760 18.837229 7.305946 19.512968 5.389827 c
20.342804 3.437963 20.997322 1.883485 23.147879 1.427661 c
25.428747 0.949922 27.805988 1.368450 29.786552 2.596442 c
30.873354 3.232199 31.832472 4.064490 32.615005 5.050882 c
32.630505 5.075680 32.655216 5.093306 32.683712 5.099881 c
32.712204 5.106457 32.742149 5.101443 32.766949 5.085944 c
32.791744 5.070445 32.809372 5.045730 32.815945 5.017235 c
32.822521 4.988741 32.817509 4.958802 32.802010 4.934003 c
32.011402 3.906763 31.026531 3.044999 29.903433 2.397749 c
28.437550 1.479661 26.747438 0.982332 25.017927 0.960149 c
h
f
n
Q
q
/E45 gs
1.000000 0.000000 -0.000000 1.000000 10.958984 23.248535 cm
/Pattern cs
/P46 scn
25.052992 1.807706 m
24.384281 1.803823 23.717421 1.878355 23.066067 2.029776 c
20.786943 2.532351 20.109049 4.227083 19.314278 6.178947 c
18.670347 8.096674 17.599304 9.843119 16.181946 11.286522 c
15.653031 11.791149 15.059580 12.223465 14.417087 12.572182 c
11.039310 14.442231 7.404399 11.964416 4.868145 9.545038 c
3.102628 7.772220 1.535046 5.812744 0.193020 3.701133 c
0.171173 3.679717 0.141799 3.667723 0.111206 3.667723 c
0.080613 3.667723 0.051240 3.679717 0.029392 3.701133 c
0.010392 3.724164 -0.000000 3.753090 0.000000 3.782948 c
0.000000 3.812804 0.010392 3.841730 0.029392 3.864761 c
1.373799 5.974669 2.941183 7.933900 4.704516 9.708667 c
8.362801 13.215011 11.717201 14.313665 14.533963 12.770875 c
15.194178 12.418343 15.803591 11.977993 16.345575 11.461839 c
17.780758 10.003588 18.871044 8.242357 19.536346 6.307514 c
20.331118 4.332274 20.962259 2.801170 23.124504 2.286906 c
28.968410 0.989559 32.603317 5.793250 32.638382 5.875064 c
32.653881 5.899863 32.678596 5.917490 32.707092 5.924066 c
32.735588 5.930642 32.765526 5.925627 32.790325 5.910129 c
32.815121 5.894629 32.832748 5.869915 32.839325 5.841420 c
32.845898 5.812925 32.840885 5.782986 32.825386 5.758188 c
32.029533 4.739043 31.045559 3.882034 29.926809 3.233621 c
28.461885 2.324429 26.776960 1.831475 25.052992 1.807706 c
h
f
n
Q
q
/E46 gs
1.000000 0.000000 -0.000000 1.000000 10.957031 23.346680 cm
/Pattern cs
/P47 scn
25.079412 1.734333 m
24.382841 1.738832 23.688953 1.821157 23.010670 1.979776 c
20.731546 2.505728 20.077028 4.212149 19.305634 6.187389 c
18.690958 8.139864 17.621403 9.918456 16.184990 11.376778 c
15.654317 11.881240 15.056479 12.309952 14.408442 12.650749 c
11.018977 14.520799 7.395756 11.984543 4.859500 9.530104 c
3.093638 7.757594 1.526025 5.798078 0.184376 3.686198 c
0.174557 3.675944 0.162764 3.667785 0.149708 3.662210 c
0.136652 3.656636 0.122602 3.653764 0.108405 3.653764 c
0.094209 3.653764 0.080160 3.656636 0.067103 3.662210 c
0.054047 3.667785 0.042254 3.675944 0.032435 3.686198 c
0.022182 3.696017 0.014022 3.707808 0.008448 3.720865 c
0.002874 3.733922 0.000000 3.747972 0.000000 3.762169 c
0.000000 3.776365 0.002874 3.790415 0.008448 3.803471 c
0.014022 3.816527 0.022182 3.828320 0.032435 3.838139 c
1.374899 5.974541 2.942202 7.961101 4.707559 9.763861 c
8.354156 13.363706 11.720243 14.438984 14.537006 12.931256 c
15.198288 12.574737 15.811065 12.134795 16.360306 11.622220 c
17.818996 10.138993 18.908060 8.333231 19.539391 6.351020 c
20.310785 4.352405 20.918552 2.774548 23.045732 2.271972 c
28.889639 0.927874 32.582985 5.778315 32.618050 5.778315 c
32.633549 5.803113 32.658264 5.820741 32.686760 5.827317 c
32.715252 5.833892 32.745193 5.828878 32.769993 5.813379 c
32.794788 5.797881 32.812416 5.773166 32.818989 5.744671 c
32.825565 5.716177 32.820553 5.686237 32.805054 5.661439 c
32.007462 4.647097 31.023685 3.794224 29.906477 3.148558 c
28.452761 2.254223 26.785908 1.765873 25.079412 1.734333 c
h
f
n
Q
q
/E47 gs
1.000000 0.000000 -0.000000 1.000000 10.982422 23.200684 cm
/Pattern cs
/P48 scn
25.171564 1.904011 m
24.434858 1.905318 23.701006 1.995578 22.985941 2.172830 c
20.706818 2.710468 20.063990 4.440265 19.327658 6.450568 c
18.737217 8.431679 17.669687 10.237651 16.218699 11.710083 c
15.680815 12.211013 15.079620 12.639315 14.430463 12.984055 c
11.029309 14.842416 7.417778 12.259410 4.881523 9.758219 c
3.115718 7.943102 1.548484 5.944879 0.206398 3.797435 c
0.188628 3.776266 0.163932 3.762080 0.136695 3.757395 c
0.109457 3.752708 0.081440 3.757825 0.057618 3.771838 c
0.033796 3.785851 0.015711 3.807853 0.006573 3.833937 c
-0.002565 3.860020 -0.002164 3.888497 0.007705 3.914313 c
1.344957 6.079503 2.912446 8.093724 4.682829 9.921847 c
8.317739 13.580132 11.695515 14.713851 14.512278 13.194435 c
15.174010 12.833958 15.786777 12.390095 16.335577 11.873712 c
17.823624 10.381264 18.916246 8.541481 19.514662 6.520694 c
20.262682 4.510390 20.847073 2.909163 23.021006 2.394898 c
28.923351 0.992361 32.616703 5.842803 32.651764 5.901242 c
32.667263 5.926040 32.691975 5.943666 32.720470 5.950241 c
32.748966 5.956817 32.778904 5.951803 32.803703 5.936304 c
32.828503 5.920805 32.846127 5.896090 32.852703 5.867595 c
32.859280 5.839101 32.854267 5.809161 32.838768 5.784363 c
31.913012 4.626437 30.749418 3.680782 29.426666 3.011341 c
28.103914 2.341901 26.652843 1.964280 25.171564 1.904011 c
h
f
n
Q
q
/E48 gs
1.000000 0.000000 -0.000000 1.000000 10.949219 24.087646 cm
/Pattern cs
/P49 scn
25.120560 1.062856 m
24.372335 1.064827 23.626959 1.155057 22.899876 1.331676 c
20.562315 1.892691 20.001299 3.669239 19.288343 5.667855 c
18.720890 7.680164 17.655699 9.517118 16.191074 11.009184 c
15.643451 11.503351 15.039275 11.930982 14.391150 12.283156 c
10.989998 14.118142 7.320025 11.488384 4.842209 8.952129 c
3.085006 7.114500 1.536678 5.087953 0.225524 2.909531 c
0.210025 2.881632 0.184078 2.861034 0.153392 2.852267 c
0.122705 2.843499 0.089793 2.847281 0.061895 2.862781 c
0.033996 2.878279 0.013398 2.904226 0.004630 2.934913 c
-0.004137 2.965599 -0.000356 2.998510 0.015143 3.026409 c
1.350373 5.218156 2.917787 7.259715 4.690268 9.115761 c
8.325176 12.832484 11.702954 14.001265 14.519717 12.481849 c
15.187092 12.129406 15.804242 11.689144 16.354704 11.172813 c
17.854984 9.661580 18.941648 7.790097 19.510410 5.737981 c
20.235054 3.704302 20.807756 2.091384 23.016752 1.565433 c
25.351141 0.989029 27.818884 1.363184 29.877499 2.605647 c
30.958246 3.225565 31.916767 4.037539 32.705948 5.001650 c
32.721447 5.026448 32.746162 5.044074 32.774658 5.050650 c
32.803150 5.057225 32.833092 5.052211 32.857887 5.036713 c
32.882687 5.021214 32.900314 4.996498 32.906887 4.968004 c
32.913464 4.939509 32.908455 4.909570 32.892956 4.884771 c
32.096043 3.879205 31.111673 3.037729 29.994375 2.406954 c
28.519583 1.530235 26.836264 1.066010 25.120560 1.062856 c
h
f
n
Q
q
/E49 gs
1.000000 0.000000 -0.000000 1.000000 10.949219 24.193848 cm
/Pattern cs
/P50 scn
25.202374 0.980952 m
24.414165 0.982327 23.629107 1.080460 22.864813 1.273148 c
20.585690 1.857538 19.977922 3.610709 19.288343 5.667764 c
18.760227 7.714239 17.694973 9.582468 16.202761 11.079220 c
15.657851 11.593829 15.044248 12.030433 14.379462 12.376568 c
10.966621 14.211554 7.366776 11.535045 4.842209 8.963726 c
3.083816 7.093121 1.535683 5.035475 0.225524 2.827626 c
0.210025 2.799727 0.184078 2.779130 0.153392 2.770363 c
0.122705 2.761595 0.089793 2.765377 0.061895 2.780876 c
0.033996 2.796375 0.013398 2.822320 0.004630 2.853006 c
-0.004137 2.883693 -0.000356 2.916606 0.015143 2.944505 c
1.353016 5.159665 2.919998 7.228080 4.690268 9.115667 c
8.313489 12.890830 11.702954 14.094674 14.508029 12.622010 c
15.180503 12.235263 15.797730 11.759565 16.343016 11.207787 c
17.855949 9.680498 18.940273 7.781923 19.487036 5.702828 c
20.188305 3.634086 20.737631 2.009480 22.899876 1.460152 c
24.074478 1.163019 25.296526 1.103005 26.494591 1.283618 c
27.692654 1.464231 28.842697 1.881846 29.877499 2.512054 c
30.952663 3.115614 31.910686 3.907370 32.705948 4.849617 c
32.721447 4.874415 32.746162 4.892040 32.774658 4.898616 c
32.803150 4.905191 32.833092 4.900180 32.857887 4.884681 c
32.882687 4.869182 32.900314 4.844467 32.906887 4.815972 c
32.913464 4.787477 32.908455 4.757537 32.892956 4.732738 c
32.094082 3.732199 31.109959 2.894905 29.994375 2.266612 c
28.538221 1.423322 26.885086 0.979796 25.202374 0.980952 c
h
f
n
Q
q
/E50 gs
1.000000 0.000000 -0.000000 1.000000 10.984375 24.253906 cm
/Pattern cs
/P51 scn
25.169870 0.954631 m
24.381300 0.961564 23.596443 1.063595 22.832310 1.258514 c
20.494747 1.866281 19.968796 3.654514 19.325966 5.723257 c
18.777557 7.785768 17.678665 9.660350 16.146883 11.146400 c
15.603546 11.651205 14.994092 12.079788 14.335271 12.420372 c
10.910742 14.243670 7.252457 11.508722 4.798018 8.914028 c
3.045890 7.011361 1.502125 4.926886 0.193020 2.696115 c
0.171173 2.674699 0.141799 2.662704 0.111206 2.662704 c
0.080613 2.662704 0.051239 2.674699 0.029391 2.696115 c
0.010391 2.719146 -0.000000 2.748072 0.000000 2.777928 c
-0.000000 2.807786 0.010391 2.836712 0.029391 2.859743 c
1.362098 5.103637 2.929255 7.199708 4.704515 9.112721 c
8.316049 12.946323 11.717200 14.173543 14.522275 12.689191 c
15.197879 12.332707 15.826127 11.892935 16.392324 11.380157 c
17.918505 9.832461 19.000395 7.902822 19.524658 5.793383 c
20.190865 3.701265 20.693439 2.053284 22.890747 1.492270 c
24.065277 1.178182 25.290770 1.102203 26.495102 1.268803 c
27.699436 1.435402 28.858276 1.841213 29.903433 2.462358 c
30.975922 3.069815 31.933304 3.861036 32.731888 4.799919 c
32.747383 4.824718 32.772099 4.842342 32.800591 4.848918 c
32.829086 4.855494 32.859024 4.850482 32.883823 4.834983 c
32.908623 4.819484 32.926247 4.794769 32.932823 4.766274 c
32.939400 4.737780 32.934391 4.707839 32.918892 4.683041 c
32.121460 3.684228 31.136890 2.850522 30.020315 2.228602 c
28.544588 1.382534 26.870890 0.942936 25.169870 0.954631 c
h
f
n
Q
q
/E51 gs
1.000000 0.000000 -0.000000 1.000000 10.994141 23.274658 cm
/Pattern cs
/P52 scn
25.158184 1.955701 m
24.328623 1.959302 23.503233 2.073285 22.703745 2.294648 c
20.366182 2.902414 19.851919 4.714026 19.197401 6.806144 c
18.713001 8.906415 17.657257 10.831831 16.146883 12.369541 c
15.596239 12.870599 14.983446 13.298767 14.323584 13.643513 c
10.887367 15.443436 7.240770 12.661737 4.786330 10.020292 c
3.040536 8.085653 1.501119 5.974338 0.193022 3.720560 c
0.171174 3.699145 0.141799 3.687150 0.111206 3.687150 c
0.080613 3.687150 0.051240 3.699145 0.029392 3.720560 c
0.010392 3.743592 -0.000000 3.772518 0.000000 3.802375 c
0.000000 3.832232 0.010392 3.861160 0.029392 3.884192 c
1.364909 6.151515 2.931640 8.274436 4.704516 10.218985 c
8.304361 14.111027 11.717202 15.373309 14.522276 13.888957 c
15.203454 13.540486 15.836077 13.104330 16.404015 12.591610 c
17.949160 11.029336 19.026115 9.065716 19.512974 6.923020 c
20.167490 4.807527 20.681753 3.147858 22.843998 2.563467 c
28.828156 0.950549 32.673443 5.812678 32.708508 5.859430 c
32.724007 5.884229 32.748722 5.901855 32.777218 5.908432 c
32.805714 5.915008 32.835651 5.909993 32.860451 5.894494 c
32.885250 5.878995 32.902874 5.854280 32.909451 5.825786 c
32.916027 5.797291 32.911011 5.767352 32.895512 5.742554 c
32.053802 4.714004 31.012026 3.867060 29.833307 3.253049 c
28.411591 2.427746 26.801886 1.981052 25.158184 1.955701 c
h
f
n
Q
q
/E52 gs
1.000000 0.000000 -0.000000 1.000000 10.927734 23.261475 cm
/Pattern cs
/P53 scn
25.225252 1.993632 m
24.363190 1.994871 23.505547 2.116829 22.677311 2.355953 c
20.339748 2.987096 19.837172 4.822082 19.170967 6.937575 c
18.723450 9.067006 17.672586 11.022671 16.143826 12.571101 c
15.589366 13.069499 14.972549 13.493806 14.308839 13.833385 c
10.872622 15.633307 7.214338 12.804857 4.771586 10.116661 c
3.024591 8.156214 1.488915 6.017235 0.189964 3.735116 c
0.168116 3.713700 0.138743 3.701706 0.108150 3.701706 c
0.077557 3.701706 0.048182 3.713700 0.026334 3.735116 c
0.009210 3.758959 0.000000 3.787575 0.000000 3.816930 c
0.000000 3.846286 0.009210 3.874903 0.026334 3.898746 c
1.363076 6.190624 2.929516 8.340563 4.701458 10.315353 c
8.301304 14.265834 11.714146 15.563180 14.519220 14.090516 c
15.203388 13.742296 15.836540 13.301842 16.400959 12.781480 c
17.965445 11.207474 19.041117 9.214437 19.498228 7.042765 c
20.105995 4.997398 20.667009 3.232541 22.794191 2.624775 c
28.813414 0.953418 32.682076 5.827233 32.717140 5.873984 c
32.732639 5.898783 32.757355 5.916410 32.785851 5.922986 c
32.814346 5.929562 32.844284 5.924547 32.869083 5.909048 c
32.893879 5.893550 32.911507 5.868834 32.918083 5.840340 c
32.924656 5.811846 32.919643 5.781906 32.904144 5.757108 c
31.963997 4.621454 30.793180 3.698620 29.469320 3.049788 c
28.145460 2.400956 26.698803 2.040948 25.225252 1.993632 c
h
f
n
Q
q
/E53 gs
1.000000 0.000000 -0.000000 1.000000 10.938477 23.143066 cm
/Pattern cs
/P54 scn
25.213163 2.148092 m
24.319498 2.148238 23.430296 2.274142 22.571718 2.522102 c
20.234156 3.176620 19.766644 5.023293 19.158876 7.197227 c
18.745539 9.350901 17.699785 11.332546 16.155111 12.889191 c
15.594799 13.388827 14.974472 13.816772 14.308437 14.163160 c
10.860533 15.951395 7.213935 13.064507 4.771183 10.341248 c
3.031013 8.348614 1.499698 6.182840 0.201248 3.877888 c
0.183659 3.859541 0.160568 3.847427 0.135475 3.843384 c
0.110382 3.839339 0.084655 3.843585 0.062192 3.855477 c
0.039729 3.867370 0.021755 3.886259 0.010993 3.909286 c
0.000232 3.932311 -0.002730 3.958218 0.002556 3.983079 c
1.295895 6.311478 2.835849 8.494060 4.595865 10.493189 c
8.184023 14.502108 11.608553 15.834517 14.413628 14.373541 c
15.098874 14.021167 15.735358 13.581129 16.307053 13.064507 c
17.895823 11.469817 18.967045 9.433275 19.380947 7.220603 c
19.965338 5.140172 20.467911 3.351937 22.641844 2.732483 c
28.707819 1.002687 32.588173 5.888192 32.623238 5.934943 c
32.638737 5.959742 32.663452 5.977366 32.691948 5.983942 c
32.720444 5.990518 32.750381 5.985506 32.775181 5.970007 c
32.799976 5.954508 32.817604 5.929791 32.824181 5.901297 c
32.830753 5.872802 32.825741 5.842863 32.810242 5.818065 c
31.871485 4.708506 30.710154 3.808484 29.401451 3.176280 c
28.092749 2.544076 26.665852 2.193786 25.213163 2.148092 c
h
f
n
Q
q
/E54 gs
1.000000 0.000000 -0.000000 1.000000 10.974609 24.319824 cm
/Pattern cs
/P55 scn
25.248230 0.995173 m
24.322382 0.997704 23.401566 1.131495 22.513281 1.392556 c
20.175718 2.070450 19.719894 3.940499 19.135504 6.067681 c
18.752153 8.253000 17.707844 10.268192 16.143425 11.841460 c
15.585518 12.346382 14.960067 12.771217 14.285062 13.103744 c
10.837157 14.880291 7.202247 11.934962 4.759494 9.188326 c
3.018435 7.169630 1.490889 4.976232 0.201248 2.643154 c
0.183659 2.624806 0.160569 2.612692 0.135476 2.608647 c
0.110383 2.604603 0.084655 2.608849 0.062192 2.620741 c
0.039729 2.632633 0.021755 2.651525 0.010993 2.674551 c
0.000232 2.697577 -0.002730 2.723484 0.002556 2.748344 c
1.295003 5.099850 2.830618 7.309253 4.584178 9.340269 c
5.863223 10.891317 7.426090 12.184453 9.189175 13.150496 c
9.978202 13.602615 10.866213 13.853989 11.775147 13.882521 c
12.684082 13.911052 13.586110 13.715868 14.401940 13.314125 c
15.091105 12.967061 15.731633 12.530871 16.307053 12.016777 c
17.897499 10.426538 18.962177 8.386927 19.357573 6.172871 c
19.918587 4.069065 20.409475 2.257455 22.583408 1.614626 c
24.383488 1.126262 26.285814 1.163949 28.065140 1.723225 c
29.844465 2.282500 31.426260 3.339939 32.623238 4.770335 c
32.638737 4.795134 32.663452 4.812758 32.691948 4.819334 c
32.720444 4.825911 32.750381 4.820896 32.775181 4.805397 c
32.799976 4.789898 32.817604 4.765183 32.824181 4.736689 c
32.830753 4.708194 32.825741 4.678255 32.810242 4.653457 c
31.877220 3.546993 30.721659 2.649402 29.418772 2.019103 c
28.115885 1.388803 26.694878 1.039926 25.248230 0.995173 c
h
f
n
Q
q
/E55 gs
1.000000 0.000000 -0.000000 1.000000 10.974609 24.337891 cm
/Pattern cs
/P56 scn
25.271606 1.001733 m
24.317463 1.007425 23.368998 1.149105 22.454842 1.422495 c
20.117279 2.123764 19.673141 4.017189 19.112127 6.202810 c
18.757881 8.413249 17.719639 10.457035 16.143425 12.046715 c
15.578362 12.547968 14.949576 12.972399 14.273374 13.308998 c
10.767031 15.073857 7.178872 12.140217 4.747808 9.288391 c
3.013380 7.237840 1.490154 5.017612 0.201248 2.661403 c
0.183659 2.643055 0.160569 2.630941 0.135476 2.626898 c
0.110383 2.622853 0.084655 2.627099 0.062192 2.638991 c
0.039729 2.650884 0.021755 2.669773 0.010993 2.692800 c
0.000232 2.715825 -0.002730 2.741732 0.002556 2.766593 c
1.287700 5.142449 2.815250 7.378941 4.560802 9.440334 c
5.840503 11.010926 7.407234 12.323807 9.177486 13.308998 c
9.959790 13.770391 10.844100 14.031059 11.751589 14.067767 c
12.659078 14.104474 13.561551 13.916080 14.378565 13.519380 c
15.073475 13.174620 15.721540 12.742576 16.307053 12.233720 c
17.913179 10.609675 18.975067 8.526745 19.345884 6.272936 c
19.883524 4.145754 20.339348 2.310767 22.524969 1.667938 c
24.327839 1.159307 26.239084 1.180934 28.029984 1.730226 c
29.820885 2.279518 31.415583 3.333212 32.623238 4.765209 c
32.638737 4.790008 32.663452 4.807633 32.691948 4.814209 c
32.720444 4.820785 32.750381 4.815770 32.775181 4.800271 c
32.799976 4.784773 32.817604 4.760057 32.824181 4.731563 c
32.830753 4.703069 32.825741 4.673129 32.810242 4.648331 c
31.880201 3.545204 30.728226 2.650352 29.429338 2.022054 c
28.130453 1.393755 26.713791 1.046101 25.271606 1.001733 c
h
f
n
Q
q
/E56 gs
1.000000 0.000000 -0.000000 1.000000 10.974609 23.171387 cm
/Pattern cs
/P57 scn
25.248228 2.201707 m
24.280664 2.205125 23.319181 2.354863 22.396402 2.645843 c
20.058840 3.347111 19.626390 5.263913 19.088751 7.484597 c
18.753304 9.696179 17.721581 11.743246 16.143423 13.328503 c
15.577564 13.837440 14.944382 14.266116 14.261684 14.602475 c
10.755342 16.355646 7.167183 13.328503 4.736119 10.476677 c
3.000841 8.400024 1.481391 6.152178 0.201248 3.767874 c
0.183659 3.749526 0.160569 3.737412 0.135476 3.733369 c
0.110383 3.729324 0.084655 3.733570 0.062192 3.745462 c
0.039729 3.757355 0.021755 3.776244 0.010993 3.799271 c
0.000232 3.822296 -0.002730 3.848203 0.002556 3.873064 c
1.278938 6.276948 2.802711 8.541061 4.549114 10.628616 c
5.825495 12.216805 7.387270 13.552639 9.154112 14.567410 c
9.933766 15.039344 10.818981 15.308991 11.729335 15.351856 c
12.639688 15.394720 13.546327 15.209441 14.366875 14.812854 c
15.065392 14.464783 15.714016 14.024507 16.295362 13.503819 c
17.922983 11.900113 18.988871 9.813435 19.334194 7.554723 c
19.860146 5.404166 20.304283 3.545805 22.489904 2.879600 c
28.602629 0.997862 32.611546 5.883368 32.646610 5.930119 c
32.654285 5.942398 32.664299 5.953044 32.676090 5.961452 c
32.687878 5.969859 32.701210 5.975863 32.715321 5.979118 c
32.729431 5.982374 32.744041 5.982819 32.758324 5.980427 c
32.772606 5.978036 32.786274 5.972856 32.798553 5.965181 c
32.810833 5.957506 32.821480 5.947490 32.829887 5.935701 c
32.838295 5.923912 32.844296 5.910582 32.847553 5.896473 c
32.850807 5.882363 32.851254 5.867751 32.848862 5.853470 c
32.846470 5.839189 32.841290 5.825520 32.833614 5.813240 c
32.018955 4.858178 31.031651 4.065158 29.923351 3.475678 c
28.498623 2.660478 26.889566 2.222009 25.248228 2.201707 c
h
f
n
Q
q
/E57 gs
1.000000 0.000000 -0.000000 1.000000 10.991211 24.458008 cm
/Pattern cs
/P58 scn
25.255707 0.934964 m
24.259684 0.940003 23.270315 1.097672 22.322063 1.402476 c
19.984503 2.127121 19.563742 4.067299 19.049479 6.311358 c
18.755949 8.568485 17.729383 10.666783 16.127525 12.283828 c
15.554984 12.786471 14.918286 13.210936 14.234099 13.546111 c
10.727757 15.287595 7.127911 12.213700 4.708534 9.338499 c
2.978035 7.229836 1.466430 4.950679 0.197040 2.536193 c
0.174008 2.517193 0.145081 2.506803 0.115224 2.506803 c
0.085367 2.506803 0.056442 2.517193 0.033410 2.536193 c
0.011995 2.558042 0.000000 2.587415 0.000000 2.618008 c
0.000000 2.648601 0.011995 2.677977 0.033410 2.699824 c
1.309050 5.126956 2.828510 7.417893 4.568281 9.537191 c
5.837206 11.143919 7.395008 12.499564 9.161590 13.534423 c
9.938483 14.016984 10.824591 14.295688 11.737840 14.344722 c
12.651089 14.393755 13.561945 14.211532 14.386042 13.814930 c
15.077127 13.453196 15.714403 12.996875 16.279467 12.459145 c
17.939169 10.822160 19.008080 8.680229 19.318296 6.369796 c
19.820873 4.195864 20.241634 2.314126 22.438942 1.624545 c
24.250956 1.086575 26.180017 1.085069 27.992867 1.620212 c
29.805716 2.155355 31.424713 3.204228 32.654087 4.640000 c
32.677120 4.659000 32.706047 4.669392 32.735905 4.669392 c
32.765759 4.669392 32.794685 4.659000 32.817719 4.640000 c
32.827969 4.630181 32.836132 4.618387 32.841705 4.605330 c
32.847279 4.592275 32.850155 4.578225 32.850155 4.564029 c
32.850155 4.549832 32.847279 4.535784 32.841705 4.522727 c
32.836132 4.509671 32.827969 4.497877 32.817719 4.488058 c
32.001896 3.534194 31.014833 2.741369 29.907455 2.150496 c
28.485149 1.357128 26.884317 0.938821 25.255707 0.934964 c
h
f
n
Q
q
/E58 gs
1.000000 0.000000 -0.000000 1.000000 10.990234 24.489502 cm
/Pattern cs
/P59 scn
25.267393 0.940190 m
24.247505 0.945158 23.234434 1.106776 22.263626 1.419390 c
19.926064 2.167410 19.516991 4.130963 19.026102 6.398398 c
18.763390 8.680227 17.742743 10.807950 16.127525 12.440996 c
15.553652 12.947487 14.912552 13.372264 14.222411 13.703279 c
10.716068 15.433076 7.116223 12.312431 4.696846 9.390479 c
2.965474 7.255666 1.457648 4.948885 0.197040 2.506357 c
0.174008 2.487357 0.145081 2.476966 0.115224 2.476966 c
0.085367 2.476966 0.056442 2.487357 0.033410 2.506357 c
0.011995 2.528205 0.000000 2.557578 0.000000 2.588171 c
0.000000 2.618764 0.011995 2.648140 0.033410 2.669988 c
1.301767 5.127941 2.817324 7.450228 4.556592 9.600858 c
5.822501 11.226312 7.380184 12.601673 9.149901 13.656529 c
9.924173 14.143622 10.808658 14.427857 11.721738 14.483010 c
12.634818 14.538162 13.547082 14.362456 14.374354 13.972101 c
15.080325 13.629340 15.736861 13.192960 16.326218 12.674753 c
17.982347 11.015315 19.028591 8.844561 19.294922 6.515277 c
19.774122 4.306280 20.183197 2.401168 22.380505 1.699900 c
24.195938 1.139686 26.135513 1.122216 27.960743 1.649643 c
29.785973 2.177070 31.417282 3.226398 32.654087 4.668602 c
32.677120 4.687602 32.706047 4.697993 32.735905 4.697993 c
32.765759 4.697993 32.794685 4.687602 32.817719 4.668602 c
32.827969 4.658783 32.836132 4.646991 32.841705 4.633935 c
32.847279 4.620878 32.850155 4.606828 32.850155 4.592630 c
32.850155 4.578434 32.847279 4.564385 32.841705 4.551329 c
32.836132 4.538273 32.827969 4.526481 32.817719 4.516662 c
32.000198 3.559834 31.008711 2.766645 29.895765 2.179100 c
28.484726 1.376100 26.890892 0.949466 25.267393 0.940190 c
h
f
n
Q
q
/E59 gs
1.000000 0.000000 -0.000000 1.000000 10.991211 25.414062 cm
/Pattern cs
/P60 scn
25.290770 0.027740 m
24.241333 0.032748 23.199520 0.206384 22.205185 0.542005 c
19.867624 1.301713 19.458549 3.288640 18.991037 5.602827 c
18.581964 7.648193 18.149517 9.985755 16.127525 11.703863 c
15.544545 12.203993 14.900468 12.628140 14.210723 12.966146 c
13.623640 13.254236 12.983918 13.419419 12.330750 13.451575 c
11.677583 13.483731 11.024726 13.382182 10.412185 13.153152 c
5.035792 11.329853 0.243791 1.675722 0.197040 1.582219 c
0.174008 1.563219 0.145081 1.552829 0.115224 1.552829 c
0.085367 1.552829 0.056442 1.563219 0.033410 1.582219 c
0.011995 1.604067 0.000000 1.633440 0.000000 1.664034 c
0.000000 1.694627 0.011995 1.724002 0.033410 1.745851 c
0.033410 1.839353 4.907228 11.575298 10.377123 13.433661 c
11.020233 13.672389 11.705164 13.777879 12.390304 13.743722 c
13.075443 13.709566 13.746488 13.536476 14.362666 13.234968 c
15.069841 12.888043 15.729718 12.452053 16.326218 11.937620 c
18.371586 10.114322 18.850784 7.776760 19.271545 5.708017 c
19.692307 3.639275 20.113068 1.547156 22.322063 0.822512 c
24.140619 0.238270 26.091181 0.203896 27.929193 0.723695 c
29.767206 1.243495 31.410866 2.294335 32.654087 3.744465 c
32.677120 3.763465 32.706047 3.773855 32.735905 3.773855 c
32.765759 3.773855 32.794685 3.763465 32.817719 3.744465 c
32.827969 3.734646 32.836132 3.722854 32.841705 3.709797 c
32.847279 3.696741 32.850155 3.682690 32.850155 3.668493 c
32.850155 3.654297 32.847279 3.640248 32.841705 3.627192 c
32.836132 3.614135 32.827969 3.602344 32.817719 3.592525 c
31.876810 2.511322 30.722387 1.636476 29.427034 1.022993 c
28.131680 0.409510 26.723412 0.070658 25.290770 0.027740 c
h
f
n
Q
q
/E60 gs
1.000000 0.000000 -0.000000 1.000000 10.974609 25.451416 cm
/Pattern cs
/P61 scn
25.319263 0.026494 m
24.245890 0.030587 23.180239 0.208195 22.163557 0.552444 c
19.825994 1.335527 19.428610 3.345833 18.984472 5.683395 c
18.587088 7.740450 18.142950 10.078012 16.132647 11.842872 c
15.557552 12.353376 14.912007 12.778491 14.215846 13.105155 c
13.631876 13.397190 12.993210 13.563666 12.340987 13.593862 c
11.688766 13.624057 11.037448 13.517303 10.428993 13.280472 c
5.040912 11.422110 0.260598 1.592661 0.213847 1.592661 c
0.198502 1.569856 0.175609 1.553189 0.149193 1.545589 c
0.122777 1.537990 0.094528 1.539944 0.069409 1.551107 c
0.044291 1.562271 0.023911 1.581929 0.011851 1.606629 c
-0.000210 1.631330 -0.003178 1.659491 0.003466 1.686163 c
0.003466 1.791353 4.877284 11.655866 10.358868 13.549291 c
10.997151 13.789910 11.677904 13.897447 12.359279 13.865287 c
13.040653 13.833128 13.708250 13.661954 14.321034 13.362286 c
15.036664 13.023954 15.701506 12.587282 16.296276 12.064939 c
18.353331 10.253328 18.809155 7.869016 19.218227 5.776897 c
19.650677 3.509462 20.024687 1.569285 22.233683 0.821265 c
24.056387 0.225315 26.014385 0.180229 27.862589 0.691655 c
29.710791 1.203081 31.367083 2.248296 32.624146 3.696465 c
32.647179 3.715466 32.676102 3.725859 32.705959 3.725859 c
32.735817 3.725859 32.764744 3.715466 32.787773 3.696465 c
32.798027 3.686646 32.806187 3.674854 32.811764 3.661798 c
32.817337 3.648742 32.820210 3.634691 32.820210 3.620495 c
32.820210 3.606298 32.817337 3.592249 32.811764 3.579193 c
32.806187 3.566136 32.798027 3.554344 32.787773 3.544525 c
31.849783 2.478401 30.702993 1.616100 29.418362 1.010977 c
28.133732 0.405853 26.738590 0.070782 25.319263 0.026494 c
h
f
n
Q
q
/E61 gs
1.000000 0.000000 -0.000000 1.000000 10.974609 25.471924 cm
/Pattern cs
/P62 scn
25.330952 0.027061 m
24.232609 0.029521 23.142368 0.215177 22.105116 0.576386 c
19.767553 1.371158 19.370167 3.510028 18.961094 5.765776 c
18.470205 8.430596 17.932568 11.457739 14.204157 13.257662 c
13.623326 13.546355 12.988778 13.711027 12.340861 13.741210 c
11.692945 13.771393 11.045834 13.666424 10.440681 13.432979 c
5.029224 11.539553 0.260598 1.628289 0.213847 1.534787 c
0.198502 1.511982 0.175609 1.495316 0.149193 1.487716 c
0.122777 1.480116 0.094528 1.482069 0.069409 1.493233 c
0.044291 1.504396 0.023911 1.524055 0.011851 1.548756 c
-0.000210 1.573456 -0.003178 1.601617 0.003466 1.628289 c
0.003466 1.733479 4.865595 11.726558 10.358866 13.655046 c
10.991514 13.899385 11.667669 14.010949 12.345278 13.982800 c
13.022886 13.954650 13.687457 13.787389 14.297659 13.491418 c
18.142948 11.633056 18.692276 8.559162 19.183163 5.835902 c
19.603924 3.498340 19.954557 1.569851 22.175241 0.810143 c
23.413233 0.372309 24.729563 0.200143 26.038513 0.304859 c
27.347466 0.409575 28.619682 0.788823 29.772320 1.417908 c
30.845760 1.985229 31.811069 2.736906 32.624142 3.638594 c
32.642742 3.663392 32.670433 3.679786 32.701118 3.684169 c
32.731808 3.688553 32.762974 3.680567 32.787773 3.661968 c
32.812569 3.643369 32.828968 3.615682 32.833351 3.584995 c
32.837734 3.554309 32.829746 3.523138 32.811150 3.498340 c
31.987011 2.548370 30.996902 1.756283 29.889194 1.160777 c
28.486286 0.413369 26.920532 0.023938 25.330952 0.027061 c
h
f
n
Q

endstream
endobj

374 0 obj
  88908
endobj

375 0 obj
  << /Length 376 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.239216 exch 0.039216 exch 0.525490 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -1.470588 mul 0.239216 add exch dup 0.000000 sub 4.950981 mul 0.039216 add exch dup 0.000000 sub 3.088235 mul 0.525490 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub -1.456583 mul 0.121569 add exch dup 0.080000 sub 4.985994 mul 0.435294 add exch dup 0.080000 sub 3.137254 mul 0.772549 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.653595 mul 0.019608 add exch dup 0.150000 sub -1.176471 mul 0.784314 add exch dup 0.150000 sub 0.000000 mul 0.992157 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 1.470589 mul 0.039216 add exch dup 0.180000 sub -2.450981 mul 0.749020 add exch dup 0.180000 sub 0.000000 mul 0.992157 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.503268 mul 0.098039 add exch dup 0.220000 sub -2.679739 mul 0.650980 add exch dup 0.220000 sub 0.065359 mul 0.992157 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub 2.091503 mul 0.188235 add exch dup 0.280000 sub -3.660130 mul 0.490196 add exch dup 0.280000 sub 0.000000 mul 0.996078 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub 2.352941 mul 0.313726 add exch dup 0.340000 sub -4.117647 mul 0.270588 add exch dup 0.340000 sub 0.065359 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.588236 mul 0.454902 add exch dup 0.400000 sub 0.196079 mul 0.023529 add exch dup 0.400000 sub -1.764707 mul 1.000000 add exch } if dup 0.420000 gt { exch pop exch pop exch pop dup 0.420000 sub -0.479303 mul 0.443137 add exch dup 0.420000 sub 0.130719 mul 0.027451 add exch dup 0.420000 sub -1.830065 mul 0.964706 add exch } if dup 0.510000 gt { exch pop exch pop exch pop dup 0.510000 sub -0.343137 mul 0.400000 add exch dup 0.510000 sub 0.049020 mul 0.039216 add exch dup 0.510000 sub -1.225490 mul 0.800000 add exch } if dup 0.590000 gt { exch pop exch pop exch pop dup 0.590000 sub -0.294117 mul 0.372549 add exch dup 0.590000 sub 0.098039 mul 0.043137 add exch dup 0.590000 sub -0.980392 mul 0.701961 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.424837 mul 0.360784 add exch dup 0.630000 sub 0.098039 mul 0.047059 add exch dup 0.630000 sub -0.424837 mul 0.662745 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.392157 mul 0.309804 add exch dup 0.750000 sub -0.031373 mul 0.058824 add exch dup 0.750000 sub -0.407843 mul 0.611765 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.211765 exch 0.050980 exch 0.509804 exch } if pop }
endstream
endobj

376 0 obj
  2684
endobj

377 0 obj
  << /Length 378 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.235294 exch 0.050980 exch 0.529412 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -1.437908 mul 0.235294 add exch dup 0.000000 sub 5.010893 mul 0.050980 add exch dup 0.000000 sub 3.180828 mul 0.529412 add exch } if dup 0.090000 gt { exch pop exch pop exch pop dup 0.090000 sub -1.372549 mul 0.105882 add exch dup 0.090000 sub 4.640522 mul 0.501961 add exch dup 0.090000 sub 2.941176 mul 0.815686 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.653595 mul 0.023529 add exch dup 0.150000 sub -1.176471 mul 0.780392 add exch dup 0.150000 sub 0.000000 mul 0.992157 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 1.470589 mul 0.043137 add exch dup 0.180000 sub -2.450981 mul 0.745098 add exch dup 0.180000 sub 0.000000 mul 0.992157 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.503268 mul 0.101961 add exch dup 0.220000 sub -2.679739 mul 0.647059 add exch dup 0.220000 sub 0.065359 mul 0.992157 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub 2.091503 mul 0.192157 add exch dup 0.280000 sub -3.660130 mul 0.486275 add exch dup 0.280000 sub 0.000000 mul 0.996078 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub 2.287581 mul 0.317647 add exch dup 0.340000 sub -3.986928 mul 0.266667 add exch dup 0.340000 sub 0.065359 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.784314 mul 0.454902 add exch dup 0.400000 sub 0.392157 mul 0.027451 add exch dup 0.400000 sub -2.745100 mul 1.000000 add exch } if dup 0.410000 gt { exch pop exch pop exch pop dup 0.410000 sub -0.470588 mul 0.447059 add exch dup 0.410000 sub 0.156863 mul 0.031373 add exch dup 0.410000 sub -1.647059 mul 0.972549 add exch } if dup 0.510000 gt { exch pop exch pop exch pop dup 0.510000 sub -0.392157 mul 0.400000 add exch dup 0.510000 sub 0.112045 mul 0.047059 add exch dup 0.510000 sub -1.400560 mul 0.807843 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.235294 mul 0.372549 add exch dup 0.580000 sub 0.078431 mul 0.054902 add exch dup 0.580000 sub -0.784313 mul 0.709804 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.424837 mul 0.360784 add exch dup 0.630000 sub 0.130719 mul 0.058824 add exch dup 0.630000 sub -0.424837 mul 0.670588 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.407843 mul 0.309804 add exch dup 0.750000 sub -0.047059 mul 0.074510 add exch dup 0.750000 sub -0.439216 mul 0.619608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.207843 exch 0.062745 exch 0.509804 exch } if pop }
endstream
endobj

378 0 obj
  2684
endobj

379 0 obj
  << /Length 380 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.231373 exch 0.058824 exch 0.533333 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -1.372549 mul 0.231373 add exch dup 0.000000 sub 4.823530 mul 0.058824 add exch dup 0.000000 sub 3.058823 mul 0.533333 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub -1.333333 mul 0.094118 add exch dup 0.100000 sub 4.627450 mul 0.541176 add exch dup 0.100000 sub 2.980392 mul 0.839216 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.653595 mul 0.027451 add exch dup 0.150000 sub -1.176471 mul 0.772549 add exch dup 0.150000 sub 0.000000 mul 0.988235 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 1.470589 mul 0.047059 add exch dup 0.180000 sub -2.450981 mul 0.737255 add exch dup 0.180000 sub 0.098039 mul 0.988235 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.568627 mul 0.105882 add exch dup 0.220000 sub -2.679739 mul 0.639216 add exch dup 0.220000 sub 0.000000 mul 0.992157 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub 2.156863 mul 0.200000 add exch dup 0.280000 sub -3.660130 mul 0.478431 add exch dup 0.280000 sub 0.065359 mul 0.992157 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub 2.156862 mul 0.329412 add exch dup 0.340000 sub -3.725490 mul 0.258824 add exch dup 0.340000 sub 0.065359 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.784314 mul 0.458824 add exch dup 0.400000 sub 0.392157 mul 0.035294 add exch dup 0.400000 sub -1.960786 mul 1.000000 add exch } if dup 0.410000 gt { exch pop exch pop exch pop dup 0.410000 sub -0.470588 mul 0.450980 add exch dup 0.410000 sub 0.196078 mul 0.039216 add exch dup 0.410000 sub -1.647059 mul 0.980392 add exch } if dup 0.510000 gt { exch pop exch pop exch pop dup 0.510000 sub -0.448179 mul 0.403922 add exch dup 0.510000 sub 0.168067 mul 0.058824 add exch dup 0.510000 sub -1.456583 mul 0.815686 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.235294 mul 0.372549 add exch dup 0.580000 sub 0.078431 mul 0.070588 add exch dup 0.580000 sub -0.784313 mul 0.713726 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.424837 mul 0.360784 add exch dup 0.630000 sub 0.130719 mul 0.074510 add exch dup 0.630000 sub -0.424837 mul 0.674510 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.423529 mul 0.309804 add exch dup 0.750000 sub -0.062745 mul 0.090196 add exch dup 0.750000 sub -0.454902 mul 0.623529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.203922 exch 0.074510 exch 0.509804 exch } if pop }
endstream
endobj

380 0 obj
  2684
endobj

381 0 obj
  << /Length 382 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.227451 exch 0.070588 exch 0.537255 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -1.283422 mul 0.227451 add exch dup 0.000000 sub 4.527629 mul 0.070588 add exch dup 0.000000 sub 2.923351 mul 0.537255 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub -1.372549 mul 0.086275 add exch dup 0.110000 sub 4.999999 mul 0.568627 add exch dup 0.110000 sub 3.235293 mul 0.858824 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.653595 mul 0.031373 add exch dup 0.150000 sub -1.176471 mul 0.768627 add exch dup 0.150000 sub 0.000000 mul 0.988235 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 1.470589 mul 0.050980 add exch dup 0.180000 sub -2.450981 mul 0.733333 add exch dup 0.180000 sub 0.098039 mul 0.988235 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.568627 mul 0.109804 add exch dup 0.220000 sub -2.679739 mul 0.635294 add exch dup 0.220000 sub 0.000000 mul 0.992157 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub 2.156863 mul 0.203922 add exch dup 0.280000 sub -3.660130 mul 0.474510 add exch dup 0.280000 sub 0.065359 mul 0.992157 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub 2.091503 mul 0.333333 add exch dup 0.340000 sub -3.594771 mul 0.254902 add exch dup 0.340000 sub 0.065359 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.392157 mul 0.458824 add exch dup 0.400000 sub 0.000000 mul 0.039216 add exch dup 0.400000 sub -1.176472 mul 1.000000 add exch } if dup 0.410000 gt { exch pop exch pop exch pop dup 0.410000 sub -0.509804 mul 0.454902 add exch dup 0.410000 sub 0.274510 mul 0.039216 add exch dup 0.410000 sub -1.647059 mul 0.988235 add exch } if dup 0.510000 gt { exch pop exch pop exch pop dup 0.510000 sub -0.448179 mul 0.403922 add exch dup 0.510000 sub 0.224090 mul 0.066667 add exch dup 0.510000 sub -1.456583 mul 0.823529 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.235294 mul 0.372549 add exch dup 0.580000 sub 0.078431 mul 0.082353 add exch dup 0.580000 sub -0.784313 mul 0.721569 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.424837 mul 0.360784 add exch dup 0.630000 sub 0.130719 mul 0.086275 add exch dup 0.630000 sub -0.424837 mul 0.682353 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.439216 mul 0.309804 add exch dup 0.750000 sub -0.062745 mul 0.101961 add exch dup 0.750000 sub -0.470588 mul 0.631373 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.200000 exch 0.086275 exch 0.513726 exch } if pop }
endstream
endobj

382 0 obj
  2684
endobj

383 0 obj
  << /Length 384 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.196078 exch 0.141176 exch 0.568627 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.849673 mul 0.196078 add exch dup 0.000000 sub 3.986928 mul 0.141176 add exch dup 0.000000 sub 2.745098 mul 0.568627 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub -0.915033 mul 0.145098 add exch dup 0.060000 sub 4.183007 mul 0.380392 add exch dup 0.060000 sub 2.941176 mul 0.733333 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub -0.784313 mul 0.090196 add exch dup 0.120000 sub 3.267973 mul 0.631373 add exch dup 0.120000 sub 2.222221 mul 0.909804 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.784314 mul 0.066667 add exch dup 0.150000 sub -1.176471 mul 0.729412 add exch dup 0.150000 sub 0.000000 mul 0.976471 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 1.176471 mul 0.090196 add exch dup 0.180000 sub -1.960784 mul 0.694118 add exch dup 0.180000 sub 0.078431 mul 0.976471 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 1.633987 mul 0.149020 add exch dup 0.230000 sub -2.679739 mul 0.596078 add exch dup 0.230000 sub 0.130719 mul 0.980392 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 1.960784 mul 0.247059 add exch dup 0.290000 sub -3.137254 mul 0.435294 add exch dup 0.290000 sub 0.112045 mul 0.988235 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub 2.058824 mul 0.384314 add exch dup 0.360000 sub -3.431373 mul 0.215686 add exch dup 0.360000 sub 0.098039 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.522876 mul 0.466667 add exch dup 0.400000 sub 0.479303 mul 0.078431 add exch dup 0.400000 sub -1.437908 mul 1.000000 add exch } if dup 0.490000 gt { exch pop exch pop exch pop dup 0.490000 sub -0.435730 mul 0.419608 add exch dup 0.490000 sub 0.392157 mul 0.121569 add exch dup 0.490000 sub -1.220044 mul 0.870588 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.313725 mul 0.380392 add exch dup 0.580000 sub 0.235294 mul 0.156863 add exch dup 0.580000 sub -0.784313 mul 0.760784 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.392157 mul 0.364706 add exch dup 0.630000 sub 0.392157 mul 0.168627 add exch dup 0.630000 sub -0.392157 mul 0.721569 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -0.463458 mul 0.360784 add exch dup 0.640000 sub 0.320856 mul 0.172549 add exch dup 0.640000 sub -0.356506 mul 0.717647 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.533333 mul 0.309804 add exch dup 0.750000 sub -0.141176 mul 0.207843 add exch dup 0.750000 sub -0.611765 mul 0.678431 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.176471 exch 0.172549 exch 0.525490 exch } if pop }
endstream
endobj

384 0 obj
  2879
endobj

385 0 obj
  << /Length 386 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.039216 exch 0.525490 exch 0.725490 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.895425 mul 0.039216 add exch dup 0.000000 sub -0.065359 mul 0.525490 add exch dup 0.000000 sub 1.699346 mul 0.725490 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 1.176471 mul 0.152941 add exch dup 0.060000 sub -0.065359 mul 0.521569 add exch dup 0.060000 sub 0.980392 mul 0.827451 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.784313 mul 0.223529 add exch dup 0.120000 sub 0.000000 mul 0.517647 add exch dup 0.120000 sub 0.784313 mul 0.886275 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588236 mul 0.247059 add exch dup 0.150000 sub -0.522876 mul 0.517647 add exch dup 0.150000 sub 0.196078 mul 0.909804 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.089324 mul 0.282353 add exch dup 0.210000 sub -0.915032 mul 0.486275 add exch dup 0.210000 sub 0.392157 mul 0.921569 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.294118 mul 0.380392 add exch dup 0.300000 sub -1.058824 mul 0.403922 add exch dup 0.300000 sub 0.431373 mul 0.956863 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.686275 mul 0.509804 add exch dup 0.400000 sub 1.666667 mul 0.298039 add exch dup 0.400000 sub -0.294118 mul 1.000000 add exch } if dup 0.480000 gt { exch pop exch pop exch pop dup 0.480000 sub -0.588235 mul 0.454902 add exch dup 0.480000 sub 1.450981 mul 0.431373 add exch dup 0.480000 sub -0.235294 mul 0.976471 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.470588 mul 0.396078 add exch dup 0.580000 sub 1.098039 mul 0.576471 add exch dup 0.580000 sub -0.156863 mul 0.952941 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.504202 mul 0.372549 add exch dup 0.630000 sub 1.176471 mul 0.631373 add exch dup 0.630000 sub -0.056022 mul 0.945098 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -0.470588 mul 0.337255 add exch dup 0.700000 sub 1.019608 mul 0.713726 add exch dup 0.700000 sub -0.078431 mul 0.941176 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.105169 mul 0.313726 add exch dup 0.750000 sub -0.499109 mul 0.764706 add exch dup 0.750000 sub -1.426025 mul 0.937255 add exch } if dup 0.860000 gt { exch pop exch pop exch pop dup 0.860000 sub -1.120448 mul 0.192157 add exch dup 0.860000 sub -0.504202 mul 0.709804 add exch dup 0.860000 sub -1.400560 mul 0.780392 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.035294 exch 0.639216 exch 0.584314 exch } if pop }
endstream
endobj

386 0 obj
  2685
endobj

387 0 obj
  << /Length 388 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.101961 exch 0.372549 exch 0.662745 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.653595 mul 0.101961 add exch dup 0.000000 sub 1.960784 mul 0.372549 add exch dup 0.000000 sub 2.352941 mul 0.662745 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.457516 mul 0.141176 add exch dup 0.060000 sub 1.307190 mul 0.490196 add exch dup 0.060000 sub 1.633987 mul 0.803922 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.261438 mul 0.168627 add exch dup 0.120000 sub 1.045751 mul 0.568627 add exch dup 0.120000 sub 1.176470 mul 0.901961 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.627451 mul 0.176471 add exch dup 0.150000 sub -0.705882 mul 0.600000 add exch dup 0.150000 sub 0.078431 mul 0.937255 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 1.120448 mul 0.207843 add exch dup 0.200000 sub -1.400560 mul 0.564706 add exch dup 0.200000 sub 0.280112 mul 0.941176 add exch } if dup 0.270000 gt { exch pop exch pop exch pop dup 0.270000 sub 1.617647 mul 0.286275 add exch dup 0.270000 sub -2.009804 mul 0.466667 add exch dup 0.270000 sub 0.294118 mul 0.960784 add exch } if dup 0.350000 gt { exch pop exch pop exch pop dup 0.350000 sub 1.568627 mul 0.415686 add exch dup 0.350000 sub -1.882353 mul 0.305882 add exch dup 0.350000 sub 0.313725 mul 0.984314 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.705883 mul 0.494118 add exch dup 0.400000 sub 1.254903 mul 0.211765 add exch dup 0.400000 sub -0.784314 mul 1.000000 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.555556 mul 0.458824 add exch dup 0.450000 sub 1.078431 mul 0.274510 add exch dup 0.450000 sub -0.620915 mul 0.960784 add exch } if dup 0.570000 gt { exch pop exch pop exch pop dup 0.570000 sub -0.392157 mul 0.392157 add exch dup 0.570000 sub 0.784314 mul 0.403922 add exch dup 0.570000 sub -0.457516 mul 0.886275 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.470588 mul 0.368627 add exch dup 0.630000 sub 0.862745 mul 0.450980 add exch dup 0.630000 sub -0.235294 mul 0.858824 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -0.448179 mul 0.345098 add exch dup 0.680000 sub 0.728292 mul 0.494118 add exch dup 0.680000 sub -0.168067 mul 0.847059 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.896359 mul 0.313726 add exch dup 0.750000 sub -0.336134 mul 0.545098 add exch dup 0.750000 sub -1.120448 mul 0.835294 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.893246 mul 0.250980 add exch dup 0.820000 sub -0.370371 mul 0.521569 add exch dup 0.820000 sub -1.089324 mul 0.756863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.090196 exch 0.454902 exch 0.560784 exch } if pop }
endstream
endobj

388 0 obj
  2878
endobj

389 0 obj
  << /Length 390 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.192157 exch 0.152941 exch 0.572549 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.849673 mul 0.192157 add exch dup 0.000000 sub 4.117647 mul 0.152941 add exch dup 0.000000 sub 2.875817 mul 0.572549 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub -0.849673 mul 0.141176 add exch dup 0.060000 sub 3.921569 mul 0.400000 add exch dup 0.060000 sub 2.745098 mul 0.745098 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub -0.653595 mul 0.090196 add exch dup 0.120000 sub 3.006535 mul 0.635294 add exch dup 0.120000 sub 2.091502 mul 0.909804 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.784314 mul 0.070588 add exch dup 0.150000 sub -1.176471 mul 0.725490 add exch dup 0.150000 sub 0.000000 mul 0.972549 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 1.176471 mul 0.094118 add exch dup 0.180000 sub -1.960784 mul 0.690196 add exch dup 0.180000 sub 0.078431 mul 0.972549 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 1.699347 mul 0.152941 add exch dup 0.230000 sub -2.679739 mul 0.592157 add exch dup 0.230000 sub 0.130719 mul 0.976471 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 1.904761 mul 0.254902 add exch dup 0.290000 sub -3.137254 mul 0.431373 add exch dup 0.290000 sub 0.168067 mul 0.984314 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub 1.960785 mul 0.388235 add exch dup 0.360000 sub -3.137255 mul 0.211765 add exch dup 0.360000 sub 0.098039 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.522876 mul 0.466667 add exch dup 0.400000 sub 0.479303 mul 0.086275 add exch dup 0.400000 sub -1.350762 mul 1.000000 add exch } if dup 0.490000 gt { exch pop exch pop exch pop dup 0.490000 sub -0.435730 mul 0.419608 add exch dup 0.490000 sub 0.392157 mul 0.129412 add exch dup 0.490000 sub -1.220044 mul 0.878431 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.313725 mul 0.380392 add exch dup 0.580000 sub 0.313725 mul 0.164706 add exch dup 0.580000 sub -0.784313 mul 0.768627 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.392157 mul 0.364706 add exch dup 0.630000 sub 0.392157 mul 0.180392 add exch dup 0.630000 sub -0.392157 mul 0.729412 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -0.463458 mul 0.360784 add exch dup 0.640000 sub 0.320856 mul 0.184314 add exch dup 0.640000 sub -0.356506 mul 0.725490 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.549020 mul 0.309804 add exch dup 0.750000 sub -0.141176 mul 0.219608 add exch dup 0.750000 sub -0.643137 mul 0.686275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.172549 exch 0.184314 exch 0.525490 exch } if pop }
endstream
endobj

390 0 obj
  2879
endobj

391 0 obj
  << /Length 392 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.180392 exch 0.180392 exch 0.584314 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.616246 mul 0.180392 add exch dup 0.000000 sub 3.585434 mul 0.180392 add exch dup 0.000000 sub 2.633053 mul 0.584314 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub -0.653595 mul 0.137255 add exch dup 0.070000 sub 3.333334 mul 0.431373 add exch dup 0.070000 sub 2.418301 mul 0.768627 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.588235 mul 0.098039 add exch dup 0.130000 sub 3.725488 mul 0.631373 add exch dup 0.130000 sub 2.745096 mul 0.913725 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588235 mul 0.086275 add exch dup 0.150000 sub -0.882353 mul 0.705882 add exch dup 0.150000 sub 0.000000 mul 0.968627 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 1.254902 mul 0.109804 add exch dup 0.190000 sub -1.960784 mul 0.670588 add exch dup 0.190000 sub 0.156863 mul 0.968627 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 1.699346 mul 0.172549 add exch dup 0.240000 sub -2.679738 mul 0.572549 add exch dup 0.240000 sub 0.130719 mul 0.976471 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 2.016807 mul 0.274510 add exch dup 0.300000 sub -3.137255 mul 0.411765 add exch dup 0.300000 sub 0.168067 mul 0.984314 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub 1.830065 mul 0.415686 add exch dup 0.370000 sub -3.006536 mul 0.192157 add exch dup 0.370000 sub 0.130719 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.539216 mul 0.470588 add exch dup 0.400000 sub 0.588235 mul 0.101961 add exch dup 0.400000 sub -1.274510 mul 1.000000 add exch } if dup 0.480000 gt { exch pop exch pop exch pop dup 0.480000 sub -0.522876 mul 0.427451 add exch dup 0.480000 sub 0.566449 mul 0.149020 add exch dup 0.480000 sub -1.220043 mul 0.898039 add exch } if dup 0.570000 gt { exch pop exch pop exch pop dup 0.570000 sub -0.261438 mul 0.380392 add exch dup 0.570000 sub 0.326797 mul 0.200000 add exch dup 0.570000 sub -0.718954 mul 0.788235 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.392157 mul 0.364706 add exch dup 0.630000 sub 0.392157 mul 0.219608 add exch dup 0.630000 sub -0.392157 mul 0.745098 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -0.463458 mul 0.360784 add exch dup 0.640000 sub 0.392157 mul 0.223529 add exch dup 0.640000 sub -0.320856 mul 0.741176 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.596078 mul 0.309804 add exch dup 0.750000 sub -0.188235 mul 0.266667 add exch dup 0.750000 sub -0.705882 mul 0.705882 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.160784 exch 0.219608 exch 0.529412 exch } if pop }
endstream
endobj

392 0 obj
  2879
endobj

393 0 obj
  << /Length 394 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.219608 exch 0.082353 exch 0.541176 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.980392 mul 0.219608 add exch dup 0.000000 sub 3.529412 mul 0.082353 add exch dup 0.000000 sub 2.352941 mul 0.541176 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub -1.263617 mul 0.200000 add exch dup 0.020000 sub 4.880175 mul 0.152941 add exch dup 0.020000 sub 3.137254 mul 0.588235 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub -1.176470 mul 0.086275 add exch dup 0.110000 sub 4.313725 mul 0.592157 add exch dup 0.110000 sub 2.843137 mul 0.870588 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.653595 mul 0.039216 add exch dup 0.150000 sub -1.176471 mul 0.764706 add exch dup 0.150000 sub 0.000000 mul 0.984314 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 1.176471 mul 0.058824 add exch dup 0.180000 sub -1.960784 mul 0.729412 add exch dup 0.180000 sub 0.078431 mul 0.984314 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 1.882353 mul 0.117647 add exch dup 0.230000 sub -3.215687 mul 0.631373 add exch dup 0.230000 sub 0.078431 mul 0.988235 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub 1.848740 mul 0.211765 add exch dup 0.280000 sub -3.137255 mul 0.470588 add exch dup 0.280000 sub 0.056022 mul 0.992157 add exch } if dup 0.350000 gt { exch pop exch pop exch pop dup 0.350000 sub 2.352941 mul 0.341176 add exch dup 0.350000 sub -4.078431 mul 0.250980 add exch dup 0.350000 sub 0.000000 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.549020 mul 0.458824 add exch dup 0.400000 sub 0.274510 mul 0.047059 add exch dup 0.400000 sub -1.686275 mul 0.996078 add exch } if dup 0.500000 gt { exch pop exch pop exch pop dup 0.500000 sub -0.392157 mul 0.403922 add exch dup 0.500000 sub 0.196078 mul 0.074510 add exch dup 0.500000 sub -1.274510 mul 0.827451 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.235294 mul 0.372549 add exch dup 0.580000 sub 0.156863 mul 0.090196 add exch dup 0.580000 sub -0.784313 mul 0.725490 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.424837 mul 0.360784 add exch dup 0.630000 sub 0.163399 mul 0.098039 add exch dup 0.630000 sub -0.392157 mul 0.686275 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.454902 mul 0.309804 add exch dup 0.750000 sub -0.078431 mul 0.117647 add exch dup 0.750000 sub -0.501961 mul 0.639216 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.196078 exch 0.098039 exch 0.513726 exch } if pop }
endstream
endobj

394 0 obj
  2683
endobj

395 0 obj
  << /Length 396 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.062745 exch 0.462745 exch 0.698039 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.372549 mul 0.062745 add exch dup 0.000000 sub 0.718955 mul 0.462745 add exch dup 0.000000 sub 1.960784 mul 0.698039 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.915033 mul 0.145098 add exch dup 0.060000 sub 0.522876 mul 0.505882 add exch dup 0.060000 sub 1.307189 mul 0.815686 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.653595 mul 0.200000 add exch dup 0.120000 sub 0.392157 mul 0.537255 add exch dup 0.120000 sub 0.915032 mul 0.894118 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588236 mul 0.219608 add exch dup 0.150000 sub -0.588235 mul 0.549020 add exch dup 0.150000 sub 0.196078 mul 0.921569 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.089324 mul 0.254902 add exch dup 0.210000 sub -1.089325 mul 0.513726 add exch dup 0.210000 sub 0.261438 mul 0.933333 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.529412 mul 0.352941 add exch dup 0.300000 sub -1.529412 mul 0.415686 add exch dup 0.300000 sub 0.431373 mul 0.956863 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.728292 mul 0.505882 add exch dup 0.400000 sub 1.568627 mul 0.262745 add exch dup 0.400000 sub -0.448179 mul 1.000000 add exch } if dup 0.470000 gt { exch pop exch pop exch pop dup 0.470000 sub -0.627451 mul 0.454902 add exch dup 0.470000 sub 1.372549 mul 0.372549 add exch dup 0.470000 sub -0.431373 mul 0.968627 add exch } if dup 0.570000 gt { exch pop exch pop exch pop dup 0.570000 sub -0.392157 mul 0.392157 add exch dup 0.570000 sub 0.849673 mul 0.509804 add exch dup 0.570000 sub -0.261438 mul 0.925490 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.522876 mul 0.368627 add exch dup 0.630000 sub 1.111111 mul 0.560784 add exch dup 0.630000 sub -0.130719 mul 0.909804 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -0.392157 mul 0.337255 add exch dup 0.690000 sub 0.849673 mul 0.627451 add exch dup 0.690000 sub -0.065359 mul 0.901961 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.132898 mul 0.313726 add exch dup 0.750000 sub -0.479303 mul 0.678431 add exch dup 0.750000 sub -1.394336 mul 0.898039 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub -0.980392 mul 0.211765 add exch dup 0.840000 sub -0.441176 mul 0.635294 add exch dup 0.840000 sub -1.225490 mul 0.772549 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.054902 exch 0.564706 exch 0.576471 exch } if pop }
endstream
endobj

396 0 obj
  2683
endobj

397 0 obj
  << /Length 398 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.176471 exch 0.192157 exch 0.588235 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.616246 mul 0.176471 add exch dup 0.000000 sub 3.585434 mul 0.192157 add exch dup 0.000000 sub 2.689075 mul 0.588235 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub -0.522876 mul 0.133333 add exch dup 0.070000 sub 3.137255 mul 0.443137 add exch dup 0.070000 sub 2.287582 mul 0.776471 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.588235 mul 0.101961 add exch dup 0.130000 sub 3.529410 mul 0.631373 add exch dup 0.130000 sub 2.745096 mul 0.913725 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588235 mul 0.090196 add exch dup 0.150000 sub -0.882353 mul 0.701961 add exch dup 0.150000 sub 0.000000 mul 0.968627 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 1.254902 mul 0.113725 add exch dup 0.190000 sub -1.960784 mul 0.666667 add exch dup 0.190000 sub 0.156863 mul 0.968627 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 1.764706 mul 0.176471 add exch dup 0.240000 sub -2.679738 mul 0.568627 add exch dup 0.240000 sub 0.130719 mul 0.976471 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.764706 mul 0.282353 add exch dup 0.300000 sub -2.745099 mul 0.407843 add exch dup 0.300000 sub 0.147059 mul 0.984314 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub 2.549018 mul 0.423529 add exch dup 0.380000 sub -3.921567 mul 0.188235 add exch dup 0.380000 sub 0.196078 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.616247 mul 0.474510 add exch dup 0.400000 sub 0.672269 mul 0.109804 add exch dup 0.400000 sub -1.344538 mul 1.000000 add exch } if dup 0.470000 gt { exch pop exch pop exch pop dup 0.470000 sub -0.470588 mul 0.431373 add exch dup 0.470000 sub 0.549020 mul 0.156863 add exch dup 0.470000 sub -1.098039 mul 0.905882 add exch } if dup 0.570000 gt { exch pop exch pop exch pop dup 0.570000 sub -0.326797 mul 0.384314 add exch dup 0.570000 sub 0.326797 mul 0.211765 add exch dup 0.570000 sub -0.718954 mul 0.796078 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.392157 mul 0.364706 add exch dup 0.630000 sub 0.392157 mul 0.231373 add exch dup 0.630000 sub -0.392157 mul 0.752941 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -0.463458 mul 0.360784 add exch dup 0.640000 sub 0.392157 mul 0.235294 add exch dup 0.640000 sub -0.320856 mul 0.749020 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.611765 mul 0.309804 add exch dup 0.750000 sub -0.188235 mul 0.278431 add exch dup 0.750000 sub -0.721569 mul 0.713726 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.156863 exch 0.231373 exch 0.533333 exch } if pop }
endstream
endobj

398 0 obj
  2879
endobj

399 0 obj
  << /Length 400 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.184314 exch 0.172549 exch 0.580392 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.672269 mul 0.184314 add exch dup 0.000000 sub 3.585434 mul 0.172549 add exch dup 0.000000 sub 2.577031 mul 0.580392 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub -0.653595 mul 0.137255 add exch dup 0.070000 sub 3.464053 mul 0.423529 add exch dup 0.070000 sub 2.483660 mul 0.760784 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.784313 mul 0.098039 add exch dup 0.130000 sub 4.117645 mul 0.631373 add exch dup 0.130000 sub 2.941175 mul 0.909804 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.784314 mul 0.082353 add exch dup 0.150000 sub -1.176471 mul 0.713726 add exch dup 0.150000 sub 0.000000 mul 0.968627 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 1.254902 mul 0.105882 add exch dup 0.180000 sub -1.960784 mul 0.678431 add exch dup 0.180000 sub 0.156863 mul 0.968627 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 1.400560 mul 0.168627 add exch dup 0.230000 sub -2.296919 mul 0.580392 add exch dup 0.230000 sub 0.112045 mul 0.976471 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 2.016807 mul 0.266667 add exch dup 0.300000 sub -3.137255 mul 0.419608 add exch dup 0.300000 sub 0.168067 mul 0.984314 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub 2.091503 mul 0.407843 add exch dup 0.370000 sub -3.398693 mul 0.200000 add exch dup 0.370000 sub 0.130719 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.539216 mul 0.470588 add exch dup 0.400000 sub 0.588235 mul 0.098039 add exch dup 0.400000 sub -1.372549 mul 1.000000 add exch } if dup 0.480000 gt { exch pop exch pop exch pop dup 0.480000 sub -0.522876 mul 0.427451 add exch dup 0.480000 sub 0.522876 mul 0.145098 add exch dup 0.480000 sub -1.220043 mul 0.890196 add exch } if dup 0.570000 gt { exch pop exch pop exch pop dup 0.570000 sub -0.261438 mul 0.380392 add exch dup 0.570000 sub 0.261438 mul 0.192157 add exch dup 0.570000 sub -0.653595 mul 0.780392 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.392157 mul 0.364706 add exch dup 0.630000 sub 0.392157 mul 0.207843 add exch dup 0.630000 sub -0.392157 mul 0.741176 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -0.463458 mul 0.360784 add exch dup 0.640000 sub 0.356506 mul 0.211765 add exch dup 0.640000 sub -0.320856 mul 0.737255 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.580392 mul 0.309804 add exch dup 0.750000 sub -0.172549 mul 0.250980 add exch dup 0.750000 sub -0.690196 mul 0.701961 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.164706 exch 0.207843 exch 0.529412 exch } if pop }
endstream
endobj

400 0 obj
  2879
endobj

401 0 obj
  << /Length 402 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.168627 exch 0.211765 exch 0.596078 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.504202 mul 0.168627 add exch dup 0.000000 sub 3.473389 mul 0.211765 add exch dup 0.000000 sub 2.689075 mul 0.596078 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub -0.457516 mul 0.133333 add exch dup 0.070000 sub 2.810458 mul 0.454902 add exch dup 0.070000 sub 2.156863 mul 0.784314 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.392157 mul 0.105882 add exch dup 0.130000 sub 3.333331 mul 0.623529 add exch dup 0.130000 sub 2.549018 mul 0.913725 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588235 mul 0.098039 add exch dup 0.150000 sub -0.882353 mul 0.690196 add exch dup 0.150000 sub 0.098039 mul 0.964706 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 1.333333 mul 0.121569 add exch dup 0.190000 sub -1.960784 mul 0.654902 add exch dup 0.190000 sub 0.078431 mul 0.968627 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 1.512605 mul 0.188235 add exch dup 0.240000 sub -2.296919 mul 0.556863 add exch dup 0.240000 sub 0.168067 mul 0.972549 add exch } if dup 0.310000 gt { exch pop exch pop exch pop dup 0.310000 sub 2.072829 mul 0.294118 add exch dup 0.310000 sub -3.137255 mul 0.396078 add exch dup 0.310000 sub 0.168067 mul 0.984314 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub 1.764705 mul 0.439216 add exch dup 0.380000 sub -2.745097 mul 0.176471 add exch dup 0.380000 sub 0.196078 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.653595 mul 0.474510 add exch dup 0.400000 sub 0.784314 mul 0.121569 add exch dup 0.400000 sub -1.372549 mul 1.000000 add exch } if dup 0.460000 gt { exch pop exch pop exch pop dup 0.460000 sub -0.463458 mul 0.435294 add exch dup 0.460000 sub 0.570410 mul 0.168627 add exch dup 0.460000 sub -0.998218 mul 0.917647 add exch } if dup 0.570000 gt { exch pop exch pop exch pop dup 0.570000 sub -0.326797 mul 0.384314 add exch dup 0.570000 sub 0.392157 mul 0.231373 add exch dup 0.570000 sub -0.718954 mul 0.807843 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.392157 mul 0.364706 add exch dup 0.630000 sub 0.392157 mul 0.254902 add exch dup 0.630000 sub -0.392157 mul 0.764706 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -0.463458 mul 0.360784 add exch dup 0.640000 sub 0.463458 mul 0.258824 add exch dup 0.640000 sub -0.320856 mul 0.760784 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.643137 mul 0.309804 add exch dup 0.750000 sub -0.203922 mul 0.309804 add exch dup 0.750000 sub -0.752941 mul 0.725490 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.149020 exch 0.258824 exch 0.537255 exch } if pop }
endstream
endobj

402 0 obj
  2879
endobj

403 0 obj
  << /Length 404 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.247059 exch 0.019608 exch 0.517647 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -1.372549 mul 0.247059 add exch dup 0.000000 sub 4.117647 mul 0.019608 add exch dup 0.000000 sub 2.549020 mul 0.517647 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub -1.628959 mul 0.219608 add exch dup 0.020000 sub 5.339366 mul 0.101961 add exch dup 0.020000 sub 3.288084 mul 0.568627 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.653595 mul 0.007843 add exch dup 0.150000 sub -1.176471 mul 0.796078 add exch dup 0.150000 sub 0.000000 mul 0.996078 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 1.470589 mul 0.027451 add exch dup 0.180000 sub -2.450981 mul 0.760784 add exch dup 0.180000 sub 0.000000 mul 0.996078 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.803921 mul 0.086275 add exch dup 0.220000 sub -3.215685 mul 0.662745 add exch dup 0.220000 sub 0.000000 mul 0.996078 add exch } if dup 0.270000 gt { exch pop exch pop exch pop dup 0.270000 sub 1.792717 mul 0.176471 add exch dup 0.270000 sub -3.193278 mul 0.501961 add exch dup 0.270000 sub 0.056022 mul 0.996078 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub 2.549019 mul 0.301961 add exch dup 0.340000 sub -4.444445 mul 0.278431 add exch dup 0.340000 sub 0.000000 mul 1.000000 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.522876 mul 0.454902 add exch dup 0.400000 sub 0.000000 mul 0.011765 add exch dup 0.400000 sub -1.699346 mul 1.000000 add exch } if dup 0.430000 gt { exch pop exch pop exch pop dup 0.430000 sub -0.479303 mul 0.439216 add exch dup 0.430000 sub 0.087146 mul 0.011765 add exch dup 0.430000 sub -1.786493 mul 0.949020 add exch } if dup 0.520000 gt { exch pop exch pop exch pop dup 0.520000 sub -0.336134 mul 0.396078 add exch dup 0.520000 sub 0.056022 mul 0.019608 add exch dup 0.520000 sub -1.456583 mul 0.788235 add exch } if dup 0.590000 gt { exch pop exch pop exch pop dup 0.590000 sub -0.294117 mul 0.372549 add exch dup 0.590000 sub 0.000000 mul 0.023529 add exch dup 0.590000 sub -0.882352 mul 0.686275 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.392157 mul 0.360784 add exch dup 0.630000 sub 0.000000 mul 0.023529 add exch dup 0.630000 sub -0.392157 mul 0.650980 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -0.427807 mul 0.356863 add exch dup 0.640000 sub 0.071301 mul 0.023529 add exch dup 0.640000 sub -0.463458 mul 0.647059 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.360784 mul 0.309804 add exch dup 0.750000 sub -0.031373 mul 0.031373 add exch dup 0.750000 sub -0.360784 mul 0.596078 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.219608 exch 0.023529 exch 0.505882 exch } if pop }
endstream
endobj

404 0 obj
  2880
endobj

405 0 obj
  << /Length 406 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.156863 exch 0.231373 exch 0.603922 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.336134 mul 0.156863 add exch dup 0.000000 sub 3.305322 mul 0.231373 add exch dup 0.000000 sub 2.633053 mul 0.603922 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub -0.261438 mul 0.133333 add exch dup 0.070000 sub 2.614380 mul 0.462745 add exch dup 0.070000 sub 2.091503 mul 0.788235 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.392157 mul 0.117647 add exch dup 0.130000 sub 2.941175 mul 0.619608 add exch dup 0.130000 sub 2.352940 mul 0.913725 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588236 mul 0.109804 add exch dup 0.150000 sub -0.882353 mul 0.678431 add exch dup 0.150000 sub 0.098039 mul 0.960784 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 1.333333 mul 0.133333 add exch dup 0.190000 sub -1.960784 mul 0.643137 add exch dup 0.190000 sub 0.078431 mul 0.964706 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 1.568627 mul 0.200000 add exch dup 0.240000 sub -2.296919 mul 0.545098 add exch dup 0.240000 sub 0.168067 mul 0.968627 add exch } if dup 0.310000 gt { exch pop exch pop exch pop dup 0.310000 sub 1.862745 mul 0.309804 add exch dup 0.310000 sub -2.745099 mul 0.384314 add exch dup 0.310000 sub 0.196078 mul 0.980392 add exch } if dup 0.390000 gt { exch pop exch pop exch pop dup 0.390000 sub 1.960780 mul 0.458824 add exch dup 0.390000 sub -3.137248 mul 0.164706 add exch dup 0.390000 sub 0.392156 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.588235 mul 0.478431 add exch dup 0.400000 sub 0.718954 mul 0.133333 add exch dup 0.400000 sub -1.111111 mul 1.000000 add exch } if dup 0.460000 gt { exch pop exch pop exch pop dup 0.460000 sub -0.499109 mul 0.443137 add exch dup 0.460000 sub 0.677362 mul 0.176471 add exch dup 0.460000 sub -1.033868 mul 0.933333 add exch } if dup 0.570000 gt { exch pop exch pop exch pop dup 0.570000 sub -0.392157 mul 0.388235 add exch dup 0.570000 sub 0.457516 mul 0.250980 add exch dup 0.570000 sub -0.718954 mul 0.819608 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.784314 mul 0.364706 add exch dup 0.630000 sub 0.784314 mul 0.278431 add exch dup 0.630000 sub -0.392157 mul 0.776471 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -0.427807 mul 0.356863 add exch dup 0.640000 sub 0.463458 mul 0.286275 add exch dup 0.640000 sub -0.285205 mul 0.772549 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.392157 mul 0.309804 add exch dup 0.750000 sub 0.000000 mul 0.337255 add exch dup 0.750000 sub -0.784314 mul 0.741176 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -0.686275 mul 0.305882 add exch dup 0.760000 sub -0.228758 mul 0.337255 add exch dup 0.760000 sub -0.816993 mul 0.733333 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.141176 exch 0.282353 exch 0.537255 exch } if pop }
endstream
endobj

406 0 obj
  3075
endobj

407 0 obj
  << /Length 408 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.149020 exch 0.250980 exch 0.611765 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.224090 mul 0.149020 add exch dup 0.000000 sub 3.137255 mul 0.250980 add exch dup 0.000000 sub 2.577031 mul 0.611765 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub -0.196079 mul 0.133333 add exch dup 0.070000 sub 2.352942 mul 0.470588 add exch dup 0.070000 sub 2.026144 mul 0.792157 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.196078 mul 0.121569 add exch dup 0.130000 sub 2.745096 mul 0.611765 add exch dup 0.130000 sub 2.156862 mul 0.913725 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588236 mul 0.117647 add exch dup 0.150000 sub -0.882353 mul 0.666667 add exch dup 0.150000 sub 0.098039 mul 0.956863 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 1.411765 mul 0.141176 add exch dup 0.190000 sub -1.960784 mul 0.631373 add exch dup 0.190000 sub 0.156863 mul 0.960784 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 1.568627 mul 0.211765 add exch dup 0.240000 sub -2.296919 mul 0.533333 add exch dup 0.240000 sub 0.168067 mul 0.968627 add exch } if dup 0.310000 gt { exch pop exch pop exch pop dup 0.310000 sub 1.742919 mul 0.321569 add exch dup 0.310000 sub -2.570806 mul 0.372549 add exch dup 0.310000 sub 0.217865 mul 0.980392 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.549020 mul 0.478431 add exch dup 0.400000 sub 0.784314 mul 0.141176 add exch dup 0.400000 sub -1.019608 mul 1.000000 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.570410 mul 0.450980 add exch dup 0.450000 sub 0.819964 mul 0.180392 add exch dup 0.450000 sub -1.069519 mul 0.949020 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.336134 mul 0.388235 add exch dup 0.560000 sub 0.448179 mul 0.270588 add exch dup 0.560000 sub -0.616247 mul 0.831373 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.588236 mul 0.364706 add exch dup 0.630000 sub 0.784314 mul 0.301961 add exch dup 0.630000 sub -0.392157 mul 0.788235 add exch } if dup 0.650000 gt { exch pop exch pop exch pop dup 0.650000 sub -0.431372 mul 0.352941 add exch dup 0.650000 sub 0.509804 mul 0.317647 add exch dup 0.650000 sub -0.274510 mul 0.780392 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.588236 mul 0.309804 add exch dup 0.750000 sub -0.196079 mul 0.368627 add exch dup 0.750000 sub -0.784314 mul 0.752941 add exch } if dup 0.770000 gt { exch pop exch pop exch pop dup 0.770000 sub -0.716112 mul 0.298039 add exch dup 0.770000 sub -0.255754 mul 0.364706 add exch dup 0.770000 sub -0.852515 mul 0.737255 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.133333 exch 0.305882 exch 0.541176 exch } if pop }
endstream
endobj

408 0 obj
  2881
endobj

409 0 obj
  << /Length 410 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.137255 exch 0.282353 exch 0.623529 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.056022 mul 0.137255 add exch dup 0.000000 sub 2.745098 mul 0.282353 add exch dup 0.000000 sub 2.464986 mul 0.623529 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 0.000000 mul 0.133333 add exch dup 0.070000 sub 2.588236 mul 0.474510 add exch dup 0.070000 sub 2.274510 mul 0.796078 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.000000 mul 0.133333 add exch dup 0.120000 sub 1.568627 mul 0.603922 add exch dup 0.120000 sub 1.437908 mul 0.909804 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.686275 mul 0.133333 add exch dup 0.150000 sub -0.882353 mul 0.650980 add exch dup 0.150000 sub 0.098039 mul 0.952941 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 1.111111 mul 0.160784 add exch dup 0.190000 sub -1.633987 mul 0.615686 add exch dup 0.190000 sub 0.130719 mul 0.956863 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.680673 mul 0.227451 add exch dup 0.250000 sub -2.296919 mul 0.517647 add exch dup 0.250000 sub 0.224090 mul 0.964706 add exch } if dup 0.320000 gt { exch pop exch pop exch pop dup 0.320000 sub 1.715686 mul 0.345098 add exch dup 0.320000 sub -2.450980 mul 0.356863 add exch dup 0.320000 sub 0.245098 mul 0.980392 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.653595 mul 0.482353 add exch dup 0.400000 sub 1.045752 mul 0.160784 add exch dup 0.400000 sub -1.045752 mul 1.000000 add exch } if dup 0.430000 gt { exch pop exch pop exch pop dup 0.430000 sub -0.542986 mul 0.462745 add exch dup 0.430000 sub 0.844646 mul 0.192157 add exch dup 0.430000 sub -0.935143 mul 0.968627 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.392157 add exch dup 0.560000 sub 0.560224 mul 0.301961 add exch dup 0.560000 sub -0.616247 mul 0.847059 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.522875 mul 0.364706 add exch dup 0.630000 sub 0.653594 mul 0.341176 add exch dup 0.630000 sub -0.261438 mul 0.803922 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -0.435730 mul 0.349020 add exch dup 0.660000 sub 0.566449 mul 0.360784 add exch dup 0.660000 sub -0.217865 mul 0.796078 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.686274 mul 0.309804 add exch dup 0.750000 sub -0.196078 mul 0.411765 add exch dup 0.750000 sub -0.882352 mul 0.776471 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.765640 mul 0.282353 add exch dup 0.790000 sub -0.280112 mul 0.403922 add exch dup 0.790000 sub -0.933707 mul 0.741176 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.121569 exch 0.345098 exch 0.545098 exch } if pop }
endstream
endobj

410 0 obj
  2879
endobj

411 0 obj
  << /Length 412 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.129412 exch 0.301961 exch 0.631373 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.112045 mul 0.129412 add exch dup 0.000000 sub 2.464986 mul 0.301961 add exch dup 0.000000 sub 2.352941 mul 0.631373 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 0.078431 mul 0.137255 add exch dup 0.070000 sub 2.431373 mul 0.474510 add exch dup 0.070000 sub 2.196079 mul 0.796078 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.000000 mul 0.141176 add exch dup 0.120000 sub 1.437908 mul 0.596078 add exch dup 0.120000 sub 1.437908 mul 0.905882 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.686275 mul 0.141176 add exch dup 0.150000 sub -0.882353 mul 0.639216 add exch dup 0.150000 sub 0.098039 mul 0.949020 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 1.176471 mul 0.168627 add exch dup 0.190000 sub -1.633987 mul 0.603922 add exch dup 0.190000 sub 0.196078 mul 0.952941 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.470588 mul 0.239216 add exch dup 0.250000 sub -2.009804 mul 0.505882 add exch dup 0.250000 sub 0.196078 mul 0.964706 add exch } if dup 0.330000 gt { exch pop exch pop exch pop dup 0.330000 sub 1.848740 mul 0.356863 add exch dup 0.330000 sub -2.464986 mul 0.345098 add exch dup 0.330000 sub 0.280112 mul 0.980392 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.522876 mul 0.486275 add exch dup 0.400000 sub 0.915033 mul 0.172549 add exch dup 0.400000 sub -0.915033 mul 1.000000 add exch } if dup 0.430000 gt { exch pop exch pop exch pop dup 0.430000 sub -0.603318 mul 0.470588 add exch dup 0.430000 sub 0.904977 mul 0.200000 add exch dup 0.430000 sub -0.874811 mul 0.972549 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.392157 add exch dup 0.560000 sub 0.672269 mul 0.317647 add exch dup 0.560000 sub -0.616247 mul 0.858824 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.653594 mul 0.364706 add exch dup 0.630000 sub 0.915032 mul 0.364706 add exch dup 0.630000 sub -0.261438 mul 0.815686 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -0.392157 mul 0.345098 add exch dup 0.660000 sub 0.566449 mul 0.392157 add exch dup 0.660000 sub -0.217865 mul 0.807843 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.882352 mul 0.309804 add exch dup 0.750000 sub -0.294117 mul 0.443137 add exch dup 0.750000 sub -1.078431 mul 0.788235 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.765640 mul 0.274510 add exch dup 0.790000 sub -0.298786 mul 0.431373 add exch dup 0.790000 sub -0.933707 mul 0.745098 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.113725 exch 0.368627 exch 0.549020 exch } if pop }
endstream
endobj

412 0 obj
  2878
endobj

413 0 obj
  << /Length 414 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.121569 exch 0.321569 exch 0.643137 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.261438 mul 0.121569 add exch dup 0.000000 sub 2.549020 mul 0.321569 add exch dup 0.000000 sub 2.483660 mul 0.643137 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.196078 mul 0.137255 add exch dup 0.060000 sub 1.830066 mul 0.474510 add exch dup 0.060000 sub 1.830065 mul 0.792157 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.130719 mul 0.149020 add exch dup 0.120000 sub 1.437908 mul 0.584314 add exch dup 0.120000 sub 1.437908 mul 0.901961 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.686275 mul 0.152941 add exch dup 0.150000 sub -0.882353 mul 0.627451 add exch dup 0.150000 sub 0.098039 mul 0.945098 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 1.064426 mul 0.180392 add exch dup 0.190000 sub -1.400561 mul 0.592157 add exch dup 0.190000 sub 0.168067 mul 0.949020 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.470588 mul 0.254902 add exch dup 0.260000 sub -2.009804 mul 0.494118 add exch dup 0.260000 sub 0.245098 mul 0.960784 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub 1.895425 mul 0.372549 add exch dup 0.340000 sub -2.483660 mul 0.333333 add exch dup 0.340000 sub 0.326797 mul 0.980392 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.653595 mul 0.486275 add exch dup 0.400000 sub 1.176471 mul 0.184314 add exch dup 0.400000 sub -1.045752 mul 1.000000 add exch } if dup 0.430000 gt { exch pop exch pop exch pop dup 0.430000 sub -0.542986 mul 0.466667 add exch dup 0.430000 sub 0.935143 mul 0.219608 add exch dup 0.430000 sub -0.784314 mul 0.968627 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.396078 add exch dup 0.560000 sub 0.672269 mul 0.341176 add exch dup 0.560000 sub -0.560224 mul 0.866667 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.490196 mul 0.368627 add exch dup 0.630000 sub 0.784313 mul 0.388235 add exch dup 0.630000 sub -0.196078 mul 0.827451 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -0.441177 mul 0.349020 add exch dup 0.670000 sub 0.637255 mul 0.419608 add exch dup 0.670000 sub -0.196078 mul 0.819608 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.862745 mul 0.313726 add exch dup 0.750000 sub -0.313725 mul 0.470588 add exch dup 0.750000 sub -1.098039 mul 0.803922 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -0.803922 mul 0.270588 add exch dup 0.800000 sub -0.313726 mul 0.454902 add exch dup 0.800000 sub -0.980392 mul 0.749020 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.109804 exch 0.392157 exch 0.552941 exch } if pop }
endstream
endobj

414 0 obj
  2878
endobj

415 0 obj
  << /Length 416 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.141176 exch 0.270588 exch 0.619608 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.112045 mul 0.141176 add exch dup 0.000000 sub 2.857143 mul 0.270588 add exch dup 0.000000 sub 2.521008 mul 0.619608 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub -0.078431 mul 0.133333 add exch dup 0.070000 sub 2.666667 mul 0.470588 add exch dup 0.070000 sub 2.274510 mul 0.796078 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.000000 mul 0.129412 add exch dup 0.120000 sub 1.699346 mul 0.603922 add exch dup 0.120000 sub 1.437908 mul 0.909804 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.686275 mul 0.129412 add exch dup 0.150000 sub -0.882353 mul 0.654902 add exch dup 0.150000 sub 0.098039 mul 0.952941 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 1.111111 mul 0.156863 add exch dup 0.190000 sub -1.633987 mul 0.619608 add exch dup 0.190000 sub 0.130719 mul 0.956863 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.624650 mul 0.223529 add exch dup 0.250000 sub -2.296919 mul 0.521569 add exch dup 0.250000 sub 0.224090 mul 0.964706 add exch } if dup 0.320000 gt { exch pop exch pop exch pop dup 0.320000 sub 1.813725 mul 0.337255 add exch dup 0.320000 sub -2.598039 mul 0.360784 add exch dup 0.320000 sub 0.245098 mul 0.980392 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.588235 mul 0.482353 add exch dup 0.400000 sub 0.882353 mul 0.152941 add exch dup 0.400000 sub -0.980392 mul 1.000000 add exch } if dup 0.440000 gt { exch pop exch pop exch pop dup 0.440000 sub -0.555556 mul 0.458824 add exch dup 0.440000 sub 0.849673 mul 0.188235 add exch dup 0.440000 sub -0.980392 mul 0.960784 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.392157 add exch dup 0.560000 sub 0.560224 mul 0.290196 add exch dup 0.560000 sub -0.616247 mul 0.843137 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.588236 mul 0.364706 add exch dup 0.630000 sub 0.784314 mul 0.329412 add exch dup 0.630000 sub -0.392157 mul 0.800000 add exch } if dup 0.650000 gt { exch pop exch pop exch pop dup 0.650000 sub -0.431372 mul 0.352941 add exch dup 0.650000 sub 0.509804 mul 0.345098 add exch dup 0.650000 sub -0.235294 mul 0.792157 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.653595 mul 0.309804 add exch dup 0.750000 sub -0.261438 mul 0.396078 add exch dup 0.750000 sub -0.915034 mul 0.768627 add exch } if dup 0.780000 gt { exch pop exch pop exch pop dup 0.780000 sub -0.748663 mul 0.290196 add exch dup 0.780000 sub -0.249554 mul 0.388235 add exch dup 0.780000 sub -0.891265 mul 0.741176 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.125490 exch 0.333333 exch 0.545098 exch } if pop }
endstream
endobj

416 0 obj
  2880
endobj

417 0 obj
  << /Length 418 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.200000 exch 0.129412 exch 0.564706 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -1.019608 mul 0.200000 add exch dup 0.000000 sub 4.549019 mul 0.129412 add exch dup 0.000000 sub 3.137255 mul 0.564706 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub -0.896359 mul 0.149020 add exch dup 0.050000 sub 3.865547 mul 0.356863 add exch dup 0.050000 sub 2.633053 mul 0.721569 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub -0.784313 mul 0.086275 add exch dup 0.120000 sub 3.529411 mul 0.627451 add exch dup 0.120000 sub 2.352940 mul 0.905882 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.784314 mul 0.062745 add exch dup 0.150000 sub -1.176471 mul 0.733333 add exch dup 0.150000 sub 0.000000 mul 0.976471 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 1.176471 mul 0.086275 add exch dup 0.180000 sub -1.960784 mul 0.698039 add exch dup 0.180000 sub 0.078431 mul 0.976471 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 1.633987 mul 0.145098 add exch dup 0.230000 sub -2.679739 mul 0.600000 add exch dup 0.230000 sub 0.130719 mul 0.980392 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 1.960784 mul 0.243137 add exch dup 0.290000 sub -3.137254 mul 0.439216 add exch dup 0.290000 sub 0.112045 mul 0.988235 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub 2.156863 mul 0.380392 add exch dup 0.360000 sub -3.627451 mul 0.219608 add exch dup 0.360000 sub 0.098039 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.522876 mul 0.466667 add exch dup 0.400000 sub 0.435730 mul 0.074510 add exch dup 0.400000 sub -1.525054 mul 1.000000 add exch } if dup 0.490000 gt { exch pop exch pop exch pop dup 0.490000 sub -0.435730 mul 0.419608 add exch dup 0.490000 sub 0.348584 mul 0.113725 add exch dup 0.490000 sub -1.176471 mul 0.862745 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.313725 mul 0.380392 add exch dup 0.580000 sub 0.235294 mul 0.145098 add exch dup 0.580000 sub -0.784313 mul 0.756863 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.392157 mul 0.364706 add exch dup 0.630000 sub 0.392157 mul 0.156863 add exch dup 0.630000 sub -0.392157 mul 0.717647 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -0.463458 mul 0.360784 add exch dup 0.640000 sub 0.285205 mul 0.160784 add exch dup 0.640000 sub -0.356506 mul 0.713726 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.517647 mul 0.309804 add exch dup 0.750000 sub -0.125490 mul 0.192157 add exch dup 0.750000 sub -0.611765 mul 0.674510 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.180392 exch 0.160784 exch 0.521569 exch } if pop }
endstream
endobj

418 0 obj
  2879
endobj

419 0 obj
  << /Length 420 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.117647 exch 0.333333 exch 0.647059 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.326797 mul 0.117647 add exch dup 0.000000 sub 2.352941 mul 0.333333 add exch dup 0.000000 sub 2.418301 mul 0.647059 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.261438 mul 0.137255 add exch dup 0.060000 sub 1.830066 mul 0.474510 add exch dup 0.060000 sub 1.830065 mul 0.792157 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.130719 mul 0.152941 add exch dup 0.120000 sub 1.307189 mul 0.584314 add exch dup 0.120000 sub 1.307189 mul 0.901961 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.686275 mul 0.156863 add exch dup 0.150000 sub -0.882353 mul 0.623529 add exch dup 0.150000 sub 0.098039 mul 0.941176 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 1.064426 mul 0.184314 add exch dup 0.190000 sub -1.400561 mul 0.588235 add exch dup 0.190000 sub 0.224090 mul 0.945098 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.519608 mul 0.258824 add exch dup 0.260000 sub -2.009804 mul 0.490196 add exch dup 0.260000 sub 0.245098 mul 0.960784 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub 1.830065 mul 0.380392 add exch dup 0.340000 sub -2.352941 mul 0.329412 add exch dup 0.340000 sub 0.326797 mul 0.980392 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.588235 mul 0.490196 add exch dup 0.400000 sub 1.078431 mul 0.188235 add exch dup 0.400000 sub -0.784314 mul 1.000000 add exch } if dup 0.440000 gt { exch pop exch pop exch pop dup 0.440000 sub -0.588235 mul 0.466667 add exch dup 0.440000 sub 1.013072 mul 0.231373 add exch dup 0.440000 sub -0.816993 mul 0.968627 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.396078 add exch dup 0.560000 sub 0.672269 mul 0.352941 add exch dup 0.560000 sub -0.504202 mul 0.870588 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.588235 mul 0.368627 add exch dup 0.630000 sub 0.882352 mul 0.400000 add exch dup 0.630000 sub -0.294117 mul 0.835294 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -0.392157 mul 0.345098 add exch dup 0.670000 sub 0.637255 mul 0.435294 add exch dup 0.670000 sub -0.196078 mul 0.823529 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.862745 mul 0.313726 add exch dup 0.750000 sub -0.313725 mul 0.486275 add exch dup 0.750000 sub -1.098039 mul 0.807843 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -0.823530 mul 0.270588 add exch dup 0.800000 sub -0.333333 mul 0.470588 add exch dup 0.800000 sub -0.980392 mul 0.752941 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.105882 exch 0.403922 exch 0.556863 exch } if pop }
endstream
endobj

420 0 obj
  2878
endobj

421 0 obj
  << /Length 422 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.074510 exch 0.435294 exch 0.686275 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.111111 mul 0.074510 add exch dup 0.000000 sub 1.176471 mul 0.435294 add exch dup 0.000000 sub 2.091503 mul 0.686275 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.784314 mul 0.141176 add exch dup 0.060000 sub 0.784314 mul 0.505882 add exch dup 0.060000 sub 1.372549 mul 0.811765 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.522876 mul 0.188235 add exch dup 0.120000 sub 0.522876 mul 0.552941 add exch dup 0.120000 sub 1.045751 mul 0.894118 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.705882 mul 0.203922 add exch dup 0.150000 sub -0.705882 mul 0.568627 add exch dup 0.150000 sub 0.156863 mul 0.925490 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 1.127451 mul 0.239216 add exch dup 0.200000 sub -1.225491 mul 0.533333 add exch dup 0.200000 sub 0.294118 mul 0.933333 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub 1.450980 mul 0.329412 add exch dup 0.280000 sub -1.607843 mul 0.435294 add exch dup 0.280000 sub 0.352941 mul 0.956863 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub 1.372550 mul 0.474510 add exch dup 0.380000 sub -1.372549 mul 0.274510 add exch dup 0.380000 sub 0.392157 mul 0.992157 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.718955 mul 0.501961 add exch dup 0.400000 sub 1.503268 mul 0.247059 add exch dup 0.400000 sub -0.588235 mul 1.000000 add exch } if dup 0.460000 gt { exch pop exch pop exch pop dup 0.460000 sub -0.606061 mul 0.458824 add exch dup 0.460000 sub 1.212121 mul 0.337255 add exch dup 0.460000 sub -0.463458 mul 0.964706 add exch } if dup 0.570000 gt { exch pop exch pop exch pop dup 0.570000 sub -0.392157 mul 0.392157 add exch dup 0.570000 sub 0.849674 mul 0.470588 add exch dup 0.570000 sub -0.326797 mul 0.913725 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.457516 mul 0.368627 add exch dup 0.630000 sub 0.980392 mul 0.521569 add exch dup 0.630000 sub -0.130719 mul 0.894118 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -0.457516 mul 0.341176 add exch dup 0.690000 sub 0.849673 mul 0.580392 add exch dup 0.690000 sub -0.130719 mul 0.886275 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.958606 mul 0.313726 add exch dup 0.750000 sub -0.392157 mul 0.631373 add exch dup 0.750000 sub -1.220044 mul 0.878431 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub -1.004902 mul 0.227451 add exch dup 0.840000 sub -0.416667 mul 0.596078 add exch dup 0.840000 sub -1.225490 mul 0.768627 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.066667 exch 0.529412 exch 0.572549 exch } if pop }
endstream
endobj

422 0 obj
  2878
endobj

423 0 obj
  << /Length 424 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.090196 exch 0.392157 exch 0.670588 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.784314 mul 0.090196 add exch dup 0.000000 sub 1.699346 mul 0.392157 add exch dup 0.000000 sub 2.287582 mul 0.670588 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.588235 mul 0.137255 add exch dup 0.060000 sub 1.176471 mul 0.494118 add exch dup 0.060000 sub 1.503268 mul 0.807843 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.392157 mul 0.172549 add exch dup 0.120000 sub 0.784313 mul 0.564706 add exch dup 0.120000 sub 1.176470 mul 0.898039 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.627451 mul 0.184314 add exch dup 0.150000 sub -0.705882 mul 0.588235 add exch dup 0.150000 sub 0.156863 mul 0.933333 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 1.232493 mul 0.215686 add exch dup 0.200000 sub -1.400560 mul 0.552941 add exch dup 0.200000 sub 0.224090 mul 0.941176 add exch } if dup 0.270000 gt { exch pop exch pop exch pop dup 0.270000 sub 1.481481 mul 0.301961 add exch dup 0.270000 sub -1.786492 mul 0.454902 add exch dup 0.270000 sub 0.348584 mul 0.956863 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub 1.568628 mul 0.435294 add exch dup 0.360000 sub -1.764706 mul 0.294118 add exch dup 0.360000 sub 0.294118 mul 0.988235 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.653595 mul 0.498039 add exch dup 0.400000 sub 1.241830 mul 0.223529 add exch dup 0.400000 sub -0.653595 mul 1.000000 add exch } if dup 0.460000 gt { exch pop exch pop exch pop dup 0.460000 sub -0.606061 mul 0.458824 add exch dup 0.460000 sub 1.176471 mul 0.298039 add exch dup 0.460000 sub -0.606061 mul 0.960784 add exch } if dup 0.570000 gt { exch pop exch pop exch pop dup 0.570000 sub -0.392157 mul 0.392157 add exch dup 0.570000 sub 0.784314 mul 0.427451 add exch dup 0.570000 sub -0.392157 mul 0.894118 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.549019 mul 0.368627 add exch dup 0.630000 sub 0.941177 mul 0.474510 add exch dup 0.630000 sub -0.156863 mul 0.870588 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -0.392157 mul 0.341176 add exch dup 0.680000 sub 0.728291 mul 0.521569 add exch dup 0.680000 sub -0.168067 mul 0.862745 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.882353 mul 0.313726 add exch dup 0.750000 sub -0.343137 mul 0.572549 add exch dup 0.750000 sub -1.127451 mul 0.850980 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.945790 mul 0.243137 add exch dup 0.830000 sub -0.392157 mul 0.545098 add exch dup 0.830000 sub -1.153402 mul 0.760784 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.082353 exch 0.478431 exch 0.564706 exch } if pop }
endstream
endobj

424 0 obj
  2878
endobj

425 0 obj
  << /Length 426 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.113725 exch 0.345098 exch 0.650980 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.392157 mul 0.113725 add exch dup 0.000000 sub 2.287582 mul 0.345098 add exch dup 0.000000 sub 2.418301 mul 0.650980 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.261438 mul 0.137255 add exch dup 0.060000 sub 1.699347 mul 0.482353 add exch dup 0.060000 sub 1.764706 mul 0.796078 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.261438 mul 0.152941 add exch dup 0.120000 sub 1.176470 mul 0.584314 add exch dup 0.120000 sub 1.307189 mul 0.901961 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.686275 mul 0.160784 add exch dup 0.150000 sub -0.882353 mul 0.619608 add exch dup 0.150000 sub 0.098039 mul 0.941176 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 1.120448 mul 0.188235 add exch dup 0.190000 sub -1.400561 mul 0.584314 add exch dup 0.190000 sub 0.224090 mul 0.945098 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.519608 mul 0.266667 add exch dup 0.260000 sub -2.009804 mul 0.486275 add exch dup 0.260000 sub 0.245098 mul 0.960784 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub 1.699346 mul 0.388235 add exch dup 0.340000 sub -2.156863 mul 0.325490 add exch dup 0.340000 sub 0.326797 mul 0.980392 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.588235 mul 0.490196 add exch dup 0.400000 sub 1.176471 mul 0.196078 add exch dup 0.400000 sub -0.882353 mul 1.000000 add exch } if dup 0.440000 gt { exch pop exch pop exch pop dup 0.440000 sub -0.588235 mul 0.466667 add exch dup 0.440000 sub 1.013072 mul 0.243137 add exch dup 0.440000 sub -0.751634 mul 0.964706 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.396078 add exch dup 0.560000 sub 0.672269 mul 0.364706 add exch dup 0.560000 sub -0.504202 mul 0.874510 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.588235 mul 0.368627 add exch dup 0.630000 sub 0.980392 mul 0.411765 add exch dup 0.630000 sub -0.294117 mul 0.839216 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -0.392157 mul 0.345098 add exch dup 0.670000 sub 0.637255 mul 0.450980 add exch dup 0.670000 sub -0.147059 mul 0.827451 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.849673 mul 0.313726 add exch dup 0.750000 sub -0.326798 mul 0.501961 add exch dup 0.750000 sub -1.045752 mul 0.815686 add exch } if dup 0.810000 gt { exch pop exch pop exch pop dup 0.810000 sub -0.846233 mul 0.262745 add exch dup 0.810000 sub -0.350877 mul 0.482353 add exch dup 0.810000 sub -1.031992 mul 0.752941 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.101961 exch 0.415686 exch 0.556863 exch } if pop }
endstream
endobj

426 0 obj
  2878
endobj

427 0 obj
  << /Length 428 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.082353 exch 0.415686 exch 0.678431 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.980392 mul 0.082353 add exch dup 0.000000 sub 1.437909 mul 0.415686 add exch dup 0.000000 sub 2.156863 mul 0.678431 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.653595 mul 0.141176 add exch dup 0.060000 sub 0.980392 mul 0.501961 add exch dup 0.060000 sub 1.503268 mul 0.807843 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.522876 mul 0.180392 add exch dup 0.120000 sub 0.653595 mul 0.560784 add exch dup 0.120000 sub 1.045751 mul 0.898039 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.627451 mul 0.196078 add exch dup 0.150000 sub -0.705882 mul 0.580392 add exch dup 0.150000 sub 0.156863 mul 0.929412 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 1.078431 mul 0.227451 add exch dup 0.200000 sub -1.225491 mul 0.545098 add exch dup 0.200000 sub 0.245098 mul 0.937255 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub 1.568627 mul 0.313726 add exch dup 0.280000 sub -1.786492 mul 0.447059 add exch dup 0.280000 sub 0.348584 mul 0.956863 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub 1.437908 mul 0.454902 add exch dup 0.370000 sub -1.699347 mul 0.286275 add exch dup 0.370000 sub 0.392157 mul 0.988235 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.653595 mul 0.498039 add exch dup 0.400000 sub 1.372549 mul 0.235294 add exch dup 0.400000 sub -0.588235 mul 1.000000 add exch } if dup 0.460000 gt { exch pop exch pop exch pop dup 0.460000 sub -0.606061 mul 0.458824 add exch dup 0.460000 sub 1.176471 mul 0.317647 add exch dup 0.460000 sub -0.534759 mul 0.964706 add exch } if dup 0.570000 gt { exch pop exch pop exch pop dup 0.570000 sub -0.392157 mul 0.392157 add exch dup 0.570000 sub 0.849673 mul 0.447059 add exch dup 0.570000 sub -0.392157 mul 0.905882 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.549019 mul 0.368627 add exch dup 0.630000 sub 1.098040 mul 0.498039 add exch dup 0.630000 sub -0.235294 mul 0.882353 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -0.392157 mul 0.341176 add exch dup 0.680000 sub 0.728291 mul 0.552941 add exch dup 0.680000 sub -0.112045 mul 0.870588 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.980393 mul 0.313726 add exch dup 0.750000 sub -0.441177 mul 0.603922 add exch dup 0.750000 sub -1.225490 mul 0.862745 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.945790 mul 0.235294 add exch dup 0.830000 sub -0.392157 mul 0.568627 add exch dup 0.830000 sub -1.153402 mul 0.764706 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.074510 exch 0.501961 exch 0.568627 exch } if pop }
endstream
endobj

428 0 obj
  2878
endobj

429 0 obj
  << /Length 430 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.086275 exch 0.403922 exch 0.674510 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.915033 mul 0.086275 add exch dup 0.000000 sub 1.568627 mul 0.403922 add exch dup 0.000000 sub 2.222222 mul 0.674510 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.588235 mul 0.141176 add exch dup 0.060000 sub 1.045752 mul 0.498039 add exch dup 0.060000 sub 1.503268 mul 0.807843 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.522876 mul 0.176471 add exch dup 0.120000 sub 0.784313 mul 0.560784 add exch dup 0.120000 sub 1.045751 mul 0.898039 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.627451 mul 0.192157 add exch dup 0.150000 sub -0.705882 mul 0.584314 add exch dup 0.150000 sub 0.156863 mul 0.929412 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 1.176471 mul 0.223529 add exch dup 0.200000 sub -1.400560 mul 0.549020 add exch dup 0.200000 sub 0.280112 mul 0.937255 add exch } if dup 0.270000 gt { exch pop exch pop exch pop dup 0.270000 sub 1.372549 mul 0.305882 add exch dup 0.270000 sub -1.607843 mul 0.450980 add exch dup 0.270000 sub 0.313726 mul 0.956863 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub 1.830065 mul 0.443137 add exch dup 0.370000 sub -2.091504 mul 0.290196 add exch dup 0.370000 sub 0.392157 mul 0.988235 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.653595 mul 0.498039 add exch dup 0.400000 sub 1.307190 mul 0.227451 add exch dup 0.400000 sub -0.653595 mul 1.000000 add exch } if dup 0.460000 gt { exch pop exch pop exch pop dup 0.460000 sub -0.606061 mul 0.458824 add exch dup 0.460000 sub 1.176471 mul 0.305882 add exch dup 0.460000 sub -0.570410 mul 0.960784 add exch } if dup 0.570000 gt { exch pop exch pop exch pop dup 0.570000 sub -0.392157 mul 0.392157 add exch dup 0.570000 sub 0.849673 mul 0.435294 add exch dup 0.570000 sub -0.392157 mul 0.898039 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.549019 mul 0.368627 add exch dup 0.630000 sub 1.019608 mul 0.486275 add exch dup 0.630000 sub -0.156863 mul 0.874510 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -0.392157 mul 0.341176 add exch dup 0.680000 sub 0.728291 mul 0.537255 add exch dup 0.680000 sub -0.112045 mul 0.866667 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.980393 mul 0.313726 add exch dup 0.750000 sub -0.392157 mul 0.588235 add exch dup 0.750000 sub -1.225490 mul 0.858824 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.922722 mul 0.235294 add exch dup 0.830000 sub -0.392157 mul 0.556863 add exch dup 0.830000 sub -1.153402 mul 0.760784 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.078431 exch 0.490196 exch 0.564706 exch } if pop }
endstream
endobj

430 0 obj
  2878
endobj

431 0 obj
  << /Length 432 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.243137 exch 0.031373 exch 0.521569 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -1.503268 mul 0.243137 add exch dup 0.000000 sub 4.967320 mul 0.031373 add exch dup 0.000000 sub 3.137255 mul 0.521569 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub -1.525054 mul 0.152941 add exch dup 0.060000 sub 5.141612 mul 0.329412 add exch dup 0.060000 sub 3.180828 mul 0.709804 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.653595 mul 0.015686 add exch dup 0.150000 sub -1.176471 mul 0.792157 add exch dup 0.150000 sub 0.000000 mul 0.996078 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 1.372549 mul 0.035294 add exch dup 0.180000 sub -2.450981 mul 0.756863 add exch dup 0.180000 sub 0.000000 mul 0.996078 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.882352 mul 0.090196 add exch dup 0.220000 sub -3.215686 mul 0.658824 add exch dup 0.220000 sub 0.000000 mul 0.996078 add exch } if dup 0.270000 gt { exch pop exch pop exch pop dup 0.270000 sub 1.792717 mul 0.184314 add exch dup 0.270000 sub -3.193277 mul 0.498039 add exch dup 0.270000 sub 0.056022 mul 0.996078 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub 2.418300 mul 0.309804 add exch dup 0.340000 sub -4.313725 mul 0.274510 add exch dup 0.340000 sub 0.000000 mul 1.000000 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.588236 mul 0.454902 add exch dup 0.400000 sub 0.196079 mul 0.015686 add exch dup 0.400000 sub -2.156865 mul 1.000000 add exch } if dup 0.420000 gt { exch pop exch pop exch pop dup 0.420000 sub -0.479303 mul 0.443137 add exch dup 0.420000 sub 0.087146 mul 0.019608 add exch dup 0.420000 sub -1.786492 mul 0.956863 add exch } if dup 0.510000 gt { exch pop exch pop exch pop dup 0.510000 sub -0.343137 mul 0.400000 add exch dup 0.510000 sub 0.049020 mul 0.027451 add exch dup 0.510000 sub -1.274510 mul 0.796078 add exch } if dup 0.590000 gt { exch pop exch pop exch pop dup 0.590000 sub -0.294117 mul 0.372549 add exch dup 0.590000 sub 0.098039 mul 0.031373 add exch dup 0.590000 sub -0.882352 mul 0.694118 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.392157 mul 0.360784 add exch dup 0.630000 sub 0.000000 mul 0.035294 add exch dup 0.630000 sub -0.392157 mul 0.658824 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -0.427807 mul 0.356863 add exch dup 0.640000 sub 0.071301 mul 0.035294 add exch dup 0.640000 sub -0.463458 mul 0.654902 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.376471 mul 0.309804 add exch dup 0.750000 sub -0.031373 mul 0.043137 add exch dup 0.750000 sub -0.392157 mul 0.603922 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.215686 exch 0.035294 exch 0.505882 exch } if pop }
endstream
endobj

432 0 obj
  2880
endobj

433 0 obj
  << /Length 434 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.066667 exch 0.454902 exch 0.694118 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.307190 mul 0.066667 add exch dup 0.000000 sub 0.849674 mul 0.454902 add exch dup 0.000000 sub 1.960784 mul 0.694118 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.849673 mul 0.145098 add exch dup 0.060000 sub 0.653595 mul 0.505882 add exch dup 0.060000 sub 1.372549 mul 0.811765 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.653595 mul 0.196078 add exch dup 0.120000 sub 0.392157 mul 0.545098 add exch dup 0.120000 sub 0.915032 mul 0.894118 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588236 mul 0.215686 add exch dup 0.150000 sub -0.588235 mul 0.556863 add exch dup 0.150000 sub 0.130719 mul 0.921569 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.176471 mul 0.250980 add exch dup 0.210000 sub -1.225491 mul 0.521569 add exch dup 0.210000 sub 0.343137 mul 0.929412 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 1.426025 mul 0.345098 add exch dup 0.290000 sub -1.497326 mul 0.423529 add exch dup 0.290000 sub 0.392157 mul 0.956863 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.672269 mul 0.501961 add exch dup 0.400000 sub 1.400560 mul 0.258824 add exch dup 0.400000 sub -0.448179 mul 1.000000 add exch } if dup 0.470000 gt { exch pop exch pop exch pop dup 0.470000 sub -0.627451 mul 0.454902 add exch dup 0.470000 sub 1.372549 mul 0.356863 add exch dup 0.470000 sub -0.470588 mul 0.968627 add exch } if dup 0.570000 gt { exch pop exch pop exch pop dup 0.570000 sub -0.392157 mul 0.392157 add exch dup 0.570000 sub 0.849674 mul 0.494118 add exch dup 0.570000 sub -0.261438 mul 0.921569 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.522876 mul 0.368627 add exch dup 0.630000 sub 1.111111 mul 0.545098 add exch dup 0.630000 sub -0.130719 mul 0.905882 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -0.392157 mul 0.337255 add exch dup 0.690000 sub 0.849673 mul 0.611765 add exch dup 0.690000 sub -0.130719 mul 0.898039 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.089325 mul 0.313726 add exch dup 0.750000 sub -0.479303 mul 0.662745 add exch dup 0.750000 sub -1.350763 mul 0.890196 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub -0.980392 mul 0.215686 add exch dup 0.840000 sub -0.416667 mul 0.619608 add exch dup 0.840000 sub -1.225490 mul 0.768627 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.058824 exch 0.552941 exch 0.572549 exch } if pop }
endstream
endobj

434 0 obj
  2683
endobj

435 0 obj
  << /Length 436 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.109804 exch 0.352941 exch 0.654902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.457516 mul 0.109804 add exch dup 0.000000 sub 2.156863 mul 0.352941 add exch dup 0.000000 sub 2.418301 mul 0.654902 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.326797 mul 0.137255 add exch dup 0.060000 sub 1.568628 mul 0.482353 add exch dup 0.060000 sub 1.699346 mul 0.800000 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.261438 mul 0.156863 add exch dup 0.120000 sub 1.176470 mul 0.576471 add exch dup 0.120000 sub 1.307189 mul 0.901961 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.549020 mul 0.164706 add exch dup 0.150000 sub -0.705882 mul 0.611765 add exch dup 0.150000 sub 0.078431 mul 0.941176 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 1.307190 mul 0.192157 add exch dup 0.200000 sub -1.633988 mul 0.576471 add exch dup 0.200000 sub 0.261438 mul 0.945098 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.394335 mul 0.270588 add exch dup 0.260000 sub -1.786492 mul 0.478431 add exch dup 0.260000 sub 0.261438 mul 0.960784 add exch } if dup 0.350000 gt { exch pop exch pop exch pop dup 0.350000 sub 1.882352 mul 0.396078 add exch dup 0.350000 sub -2.352941 mul 0.317647 add exch dup 0.350000 sub 0.313725 mul 0.984314 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.686275 mul 0.490196 add exch dup 0.400000 sub 1.274510 mul 0.200000 add exch dup 0.400000 sub -0.882353 mul 1.000000 add exch } if dup 0.440000 gt { exch pop exch pop exch pop dup 0.440000 sub -0.555556 mul 0.462745 add exch dup 0.440000 sub 1.045752 mul 0.250980 add exch dup 0.440000 sub -0.718954 mul 0.964706 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.396078 add exch dup 0.560000 sub 0.672269 mul 0.376471 add exch dup 0.560000 sub -0.448179 mul 0.878431 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.588235 mul 0.368627 add exch dup 0.630000 sub 0.980392 mul 0.423529 add exch dup 0.630000 sub -0.294117 mul 0.847059 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -0.392157 mul 0.345098 add exch dup 0.670000 sub 0.637255 mul 0.462745 add exch dup 0.670000 sub -0.147059 mul 0.835294 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.915033 mul 0.313726 add exch dup 0.750000 sub -0.326798 mul 0.513726 add exch dup 0.750000 sub -1.176471 mul 0.823529 add exch } if dup 0.810000 gt { exch pop exch pop exch pop dup 0.810000 sub -0.846233 mul 0.258824 add exch dup 0.810000 sub -0.330237 mul 0.494118 add exch dup 0.810000 sub -1.031992 mul 0.752941 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.098039 exch 0.431373 exch 0.556863 exch } if pop }
endstream
endobj

436 0 obj
  2878
endobj

437 0 obj
  << /Length 438 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.145098 exch 0.262745 exch 0.615686 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.168067 mul 0.145098 add exch dup 0.000000 sub 3.025210 mul 0.262745 add exch dup 0.000000 sub 2.521008 mul 0.615686 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub -0.065359 mul 0.133333 add exch dup 0.070000 sub 2.287582 mul 0.474510 add exch dup 0.070000 sub 1.960784 mul 0.792157 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.196078 mul 0.129412 add exch dup 0.130000 sub 2.549018 mul 0.611765 add exch dup 0.130000 sub 2.156862 mul 0.909804 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588235 mul 0.125490 add exch dup 0.150000 sub -0.882353 mul 0.662745 add exch dup 0.150000 sub 0.098039 mul 0.952941 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 1.176471 mul 0.149020 add exch dup 0.190000 sub -1.633987 mul 0.627451 add exch dup 0.190000 sub 0.130719 mul 0.956863 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.568628 mul 0.219608 add exch dup 0.250000 sub -2.296919 mul 0.529412 add exch dup 0.250000 sub 0.224090 mul 0.964706 add exch } if dup 0.320000 gt { exch pop exch pop exch pop dup 0.320000 sub 1.911764 mul 0.329412 add exch dup 0.320000 sub -2.745098 mul 0.368627 add exch dup 0.320000 sub 0.245098 mul 0.980392 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.686275 mul 0.482353 add exch dup 0.400000 sub 0.980392 mul 0.149020 add exch dup 0.400000 sub -1.176471 mul 1.000000 add exch } if dup 0.440000 gt { exch pop exch pop exch pop dup 0.440000 sub -0.555556 mul 0.454902 add exch dup 0.440000 sub 0.784314 mul 0.188235 add exch dup 0.440000 sub -0.980392 mul 0.952941 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.336134 mul 0.388235 add exch dup 0.560000 sub 0.504202 mul 0.282353 add exch dup 0.560000 sub -0.616247 mul 0.835294 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.588236 mul 0.364706 add exch dup 0.630000 sub 0.784314 mul 0.317647 add exch dup 0.630000 sub -0.392157 mul 0.792157 add exch } if dup 0.650000 gt { exch pop exch pop exch pop dup 0.650000 sub -0.431372 mul 0.352941 add exch dup 0.650000 sub 0.509804 mul 0.333333 add exch dup 0.650000 sub -0.235294 mul 0.784314 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.784314 mul 0.309804 add exch dup 0.750000 sub -0.196079 mul 0.384314 add exch dup 0.750000 sub -0.980393 mul 0.760784 add exch } if dup 0.770000 gt { exch pop exch pop exch pop dup 0.770000 sub -0.716112 mul 0.294118 add exch dup 0.770000 sub -0.272805 mul 0.380392 add exch dup 0.770000 sub -0.852515 mul 0.741176 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.129412 exch 0.317647 exch 0.545098 exch } if pop }
endstream
endobj

438 0 obj
  2881
endobj

439 0 obj
  << /Length 440 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.152941 exch 0.243137 exch 0.607843 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.280112 mul 0.152941 add exch dup 0.000000 sub 3.249300 mul 0.243137 add exch dup 0.000000 sub 2.633053 mul 0.607843 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub -0.261438 mul 0.133333 add exch dup 0.070000 sub 2.483661 mul 0.470588 add exch dup 0.070000 sub 1.960784 mul 0.792157 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.196078 mul 0.117647 add exch dup 0.130000 sub 2.745096 mul 0.619608 add exch dup 0.130000 sub 2.352940 mul 0.909804 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588236 mul 0.113725 add exch dup 0.150000 sub -0.882353 mul 0.674510 add exch dup 0.150000 sub 0.098039 mul 0.956863 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 1.333333 mul 0.137255 add exch dup 0.190000 sub -1.960784 mul 0.639216 add exch dup 0.190000 sub 0.156863 mul 0.960784 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 1.568627 mul 0.203922 add exch dup 0.240000 sub -2.296919 mul 0.541176 add exch dup 0.240000 sub 0.168067 mul 0.968627 add exch } if dup 0.310000 gt { exch pop exch pop exch pop dup 0.310000 sub 1.862745 mul 0.313726 add exch dup 0.310000 sub -2.745099 mul 0.380392 add exch dup 0.310000 sub 0.245098 mul 0.980392 add exch } if dup 0.390000 gt { exch pop exch pop exch pop dup 0.390000 sub 1.568624 mul 0.462745 add exch dup 0.390000 sub -2.352936 mul 0.160784 add exch dup 0.390000 sub 0.000000 mul 1.000000 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.627451 mul 0.478431 add exch dup 0.400000 sub 0.862745 mul 0.137255 add exch dup 0.400000 sub -1.254902 mul 1.000000 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.534759 mul 0.447059 add exch dup 0.450000 sub 0.713012 mul 0.180392 add exch dup 0.450000 sub -1.033868 mul 0.937255 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.336134 mul 0.388235 add exch dup 0.560000 sub 0.448179 mul 0.258824 add exch dup 0.560000 sub -0.616247 mul 0.823529 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.588236 mul 0.364706 add exch dup 0.630000 sub 0.588236 mul 0.290196 add exch dup 0.630000 sub -0.196079 mul 0.780392 add exch } if dup 0.650000 gt { exch pop exch pop exch pop dup 0.650000 sub -0.431372 mul 0.352941 add exch dup 0.650000 sub 0.509804 mul 0.301961 add exch dup 0.650000 sub -0.274510 mul 0.776471 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.784314 mul 0.309804 add exch dup 0.750000 sub -0.392157 mul 0.352941 add exch dup 0.750000 sub -1.176472 mul 0.749020 add exch } if dup 0.760000 gt { exch pop exch pop exch pop dup 0.760000 sub -0.686275 mul 0.301961 add exch dup 0.760000 sub -0.228758 mul 0.349020 add exch dup 0.760000 sub -0.816993 mul 0.737255 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.137255 exch 0.294118 exch 0.541176 exch } if pop }
endstream
endobj

440 0 obj
  3076
endobj

441 0 obj
  << /Length 442 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.105882 exch 0.364706 exch 0.658824 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.588235 mul 0.105882 add exch dup 0.000000 sub 2.026144 mul 0.364706 add exch dup 0.000000 sub 2.352941 mul 0.658824 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.392157 mul 0.141176 add exch dup 0.060000 sub 1.503268 mul 0.486275 add exch dup 0.060000 sub 1.699346 mul 0.800000 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.261438 mul 0.164706 add exch dup 0.120000 sub 1.045751 mul 0.576471 add exch dup 0.120000 sub 1.176470 mul 0.901961 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.549020 mul 0.172549 add exch dup 0.150000 sub -0.705882 mul 0.607843 add exch dup 0.150000 sub 0.078431 mul 0.937255 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 1.372549 mul 0.200000 add exch dup 0.200000 sub -1.633988 mul 0.572549 add exch dup 0.200000 sub 0.261438 mul 0.941176 add exch } if dup 0.260000 gt { exch pop exch pop exch pop dup 0.260000 sub 1.394335 mul 0.282353 add exch dup 0.260000 sub -1.786492 mul 0.474510 add exch dup 0.260000 sub 0.305011 mul 0.956863 add exch } if dup 0.350000 gt { exch pop exch pop exch pop dup 0.350000 sub 1.725490 mul 0.407843 add exch dup 0.350000 sub -2.117647 mul 0.313726 add exch dup 0.350000 sub 0.313725 mul 0.984314 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.627451 mul 0.494118 add exch dup 0.400000 sub 1.176471 mul 0.207843 add exch dup 0.400000 sub -0.784314 mul 1.000000 add exch } if dup 0.450000 gt { exch pop exch pop exch pop dup 0.450000 sub -0.606061 mul 0.462745 add exch dup 0.450000 sub 1.140820 mul 0.266667 add exch dup 0.450000 sub -0.713012 mul 0.960784 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.396078 add exch dup 0.560000 sub 0.672269 mul 0.392157 add exch dup 0.560000 sub -0.448179 mul 0.882353 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.588235 mul 0.368627 add exch dup 0.630000 sub 0.980392 mul 0.439216 add exch dup 0.630000 sub -0.196078 mul 0.850980 add exch } if dup 0.670000 gt { exch pop exch pop exch pop dup 0.670000 sub -0.392157 mul 0.345098 add exch dup 0.670000 sub 0.637255 mul 0.478431 add exch dup 0.670000 sub -0.147059 mul 0.843137 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.840336 mul 0.313726 add exch dup 0.750000 sub -0.336134 mul 0.529412 add exch dup 0.750000 sub -1.064426 mul 0.831373 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.893246 mul 0.254902 add exch dup 0.820000 sub -0.348584 mul 0.505882 add exch dup 0.820000 sub -1.089324 mul 0.756863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.094118 exch 0.443137 exch 0.560784 exch } if pop }
endstream
endobj

442 0 obj
  2878
endobj

443 0 obj
  << /Length 444 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.058824 exch 0.474510 exch 0.701961 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.437909 mul 0.058824 add exch dup 0.000000 sub 0.588236 mul 0.474510 add exch dup 0.000000 sub 1.830065 mul 0.701961 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.980392 mul 0.145098 add exch dup 0.060000 sub 0.457516 mul 0.509804 add exch dup 0.060000 sub 1.307189 mul 0.811765 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.653595 mul 0.203922 add exch dup 0.120000 sub 0.261438 mul 0.537255 add exch dup 0.120000 sub 0.915032 mul 0.890196 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588236 mul 0.223529 add exch dup 0.150000 sub -0.588235 mul 0.545098 add exch dup 0.150000 sub 0.196078 mul 0.917647 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.089324 mul 0.258824 add exch dup 0.210000 sub -1.045752 mul 0.509804 add exch dup 0.210000 sub 0.305011 mul 0.929412 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.490196 mul 0.356863 add exch dup 0.300000 sub -1.450980 mul 0.415686 add exch dup 0.300000 sub 0.431373 mul 0.956863 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.728292 mul 0.505882 add exch dup 0.400000 sub 1.624650 mul 0.270588 add exch dup 0.400000 sub -0.448179 mul 1.000000 add exch } if dup 0.470000 gt { exch pop exch pop exch pop dup 0.470000 sub -0.627451 mul 0.454902 add exch dup 0.470000 sub 1.372549 mul 0.384314 add exch dup 0.470000 sub -0.352941 mul 0.968627 add exch } if dup 0.570000 gt { exch pop exch pop exch pop dup 0.570000 sub -0.392157 mul 0.392157 add exch dup 0.570000 sub 0.849673 mul 0.521569 add exch dup 0.570000 sub -0.261438 mul 0.933333 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.522876 mul 0.368627 add exch dup 0.630000 sub 1.111111 mul 0.572549 add exch dup 0.630000 sub -0.130719 mul 0.917647 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -0.392157 mul 0.337255 add exch dup 0.690000 sub 0.849673 mul 0.639216 add exch dup 0.690000 sub -0.065359 mul 0.909804 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.058823 mul 0.313726 add exch dup 0.750000 sub -0.470588 mul 0.690196 add exch dup 0.750000 sub -1.333333 mul 0.905882 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -1.045752 mul 0.207843 add exch dup 0.850000 sub -0.444444 mul 0.643137 add exch dup 0.850000 sub -1.307190 mul 0.772549 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.050980 exch 0.576471 exch 0.576471 exch } if pop }
endstream
endobj

444 0 obj
  2683
endobj

445 0 obj
  << /Length 446 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.003922 exch 0.603922 exch 0.756863 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.450980 mul 0.003922 add exch dup 0.000000 sub -1.176471 mul 0.603922 add exch dup 0.000000 sub 1.176471 mul 0.756863 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub 2.549020 mul 0.101961 add exch dup 0.040000 sub -1.176471 mul 0.556863 add exch dup 0.040000 sub 1.274510 mul 0.803922 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 1.568628 mul 0.203922 add exch dup 0.080000 sub -0.686275 mul 0.509804 add exch dup 0.080000 sub 0.686274 mul 0.854902 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.653595 mul 0.266667 add exch dup 0.120000 sub -0.392157 mul 0.482353 add exch dup 0.120000 sub 0.392157 mul 0.882353 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.504202 mul 0.286275 add exch dup 0.150000 sub -0.280112 mul 0.470588 add exch dup 0.150000 sub 0.224090 mul 0.894118 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.980392 mul 0.321569 add exch dup 0.220000 sub -0.509804 mul 0.450980 add exch dup 0.220000 sub 0.431373 mul 0.909804 add exch } if dup 0.320000 gt { exch pop exch pop exch pop dup 0.320000 sub 1.274510 mul 0.419608 add exch dup 0.320000 sub -0.686274 mul 0.400000 add exch dup 0.320000 sub 0.588235 mul 0.952941 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.740741 mul 0.521569 add exch dup 0.400000 sub 1.873639 mul 0.345098 add exch dup 0.400000 sub -0.043573 mul 1.000000 add exch } if dup 0.490000 gt { exch pop exch pop exch pop dup 0.490000 sub -0.653595 mul 0.454902 add exch dup 0.490000 sub 1.742920 mul 0.513726 add exch dup 0.490000 sub -0.043573 mul 0.996078 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.470588 mul 0.396078 add exch dup 0.580000 sub 1.176470 mul 0.670588 add exch dup 0.580000 sub 0.000000 mul 0.992157 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.560224 mul 0.372549 add exch dup 0.630000 sub 1.456583 mul 0.729412 add exch dup 0.630000 sub 0.000000 mul 0.992157 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -0.392157 mul 0.333333 add exch dup 0.700000 sub 1.019608 mul 0.831373 add exch dup 0.700000 sub 0.000000 mul 0.992157 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.274510 mul 0.313726 add exch dup 0.750000 sub -0.588235 mul 0.882353 add exch dup 0.750000 sub -1.633987 mul 0.992157 add exch } if dup 0.870000 gt { exch pop exch pop exch pop dup 0.870000 sub -1.206637 mul 0.160784 add exch dup 0.870000 sub -0.573152 mul 0.811765 add exch dup 0.870000 sub -1.508296 mul 0.796078 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.003922 exch 0.737255 exch 0.600000 exch } if pop }
endstream
endobj

446 0 obj
  2878
endobj

447 0 obj
  << /Length 448 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.254902 exch 0.000000 exch 0.509804 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -1.699346 mul 0.254902 add exch dup 0.000000 sub 5.385621 mul 0.000000 add exch dup 0.000000 sub 3.267973 mul 0.509804 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.653595 mul 0.000000 add exch dup 0.150000 sub -1.176471 mul 0.807843 add exch dup 0.150000 sub 0.000000 mul 1.000000 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 1.372549 mul 0.019608 add exch dup 0.180000 sub -2.450981 mul 0.772549 add exch dup 0.180000 sub 0.000000 mul 1.000000 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.803921 mul 0.074510 add exch dup 0.220000 sub -3.215685 mul 0.674510 add exch dup 0.220000 sub 0.000000 mul 1.000000 add exch } if dup 0.270000 gt { exch pop exch pop exch pop dup 0.270000 sub 2.091503 mul 0.164706 add exch dup 0.270000 sub -3.725490 mul 0.513726 add exch dup 0.270000 sub 0.000000 mul 1.000000 add exch } if dup 0.330000 gt { exch pop exch pop exch pop dup 0.330000 sub 2.296919 mul 0.290196 add exch dup 0.330000 sub -4.145659 mul 0.290196 add exch dup 0.330000 sub 0.000000 mul 1.000000 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.522876 mul 0.450980 add exch dup 0.400000 sub 0.000000 mul 0.000000 add exch dup 0.400000 sub -2.222222 mul 1.000000 add exch } if dup 0.430000 gt { exch pop exch pop exch pop dup 0.430000 sub -0.435730 mul 0.435294 add exch dup 0.430000 sub 0.000000 mul 0.000000 add exch dup 0.430000 sub -1.786493 mul 0.933333 add exch } if dup 0.520000 gt { exch pop exch pop exch pop dup 0.520000 sub -0.392157 mul 0.396078 add exch dup 0.520000 sub 0.000000 mul 0.000000 add exch dup 0.520000 sub -1.400560 mul 0.772549 add exch } if dup 0.590000 gt { exch pop exch pop exch pop dup 0.590000 sub -0.196078 mul 0.368627 add exch dup 0.590000 sub 0.000000 mul 0.000000 add exch dup 0.590000 sub -0.882352 mul 0.674510 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.411765 mul 0.360784 add exch dup 0.630000 sub 0.000000 mul 0.000000 add exch dup 0.630000 sub -0.431373 mul 0.639216 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.299885 mul 0.278431 add exch dup 0.830000 sub 0.000000 mul 0.000000 add exch dup 0.830000 sub -0.299885 mul 0.552941 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.227451 exch 0.000000 exch 0.501961 exch } if pop }
endstream
endobj

448 0 obj
  2488
endobj

449 0 obj
  << /Length 450 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.050980 exch 0.494118 exch 0.709804 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.503268 mul 0.050980 add exch dup 0.000000 sub 0.326798 mul 0.494118 add exch dup 0.000000 sub 1.699346 mul 0.709804 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 1.111111 mul 0.141176 add exch dup 0.060000 sub 0.261438 mul 0.513726 add exch dup 0.060000 sub 1.241830 mul 0.811765 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.784313 mul 0.207843 add exch dup 0.120000 sub 0.130719 mul 0.529412 add exch dup 0.120000 sub 0.915032 mul 0.886275 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588236 mul 0.231373 add exch dup 0.150000 sub -0.588236 mul 0.533333 add exch dup 0.150000 sub 0.196078 mul 0.913725 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.089324 mul 0.266667 add exch dup 0.210000 sub -1.002178 mul 0.498039 add exch dup 0.210000 sub 0.348584 mul 0.925490 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.411765 mul 0.364706 add exch dup 0.300000 sub -1.294118 mul 0.407843 add exch dup 0.300000 sub 0.431373 mul 0.956863 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.686275 mul 0.505882 add exch dup 0.400000 sub 1.568628 mul 0.278431 add exch dup 0.400000 sub -0.343137 mul 1.000000 add exch } if dup 0.480000 gt { exch pop exch pop exch pop dup 0.480000 sub -0.588235 mul 0.450980 add exch dup 0.480000 sub 1.372549 mul 0.403922 add exch dup 0.480000 sub -0.313726 mul 0.972549 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.470588 mul 0.392157 add exch dup 0.580000 sub 1.098039 mul 0.541176 add exch dup 0.580000 sub -0.235294 mul 0.941176 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.522876 mul 0.368627 add exch dup 0.630000 sub 1.241830 mul 0.596078 add exch dup 0.630000 sub -0.130719 mul 0.929412 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -0.392157 mul 0.337255 add exch dup 0.690000 sub 0.849673 mul 0.670588 add exch dup 0.690000 sub -0.065359 mul 0.921569 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.137255 mul 0.313726 add exch dup 0.750000 sub -0.509804 mul 0.721569 add exch dup 0.750000 sub -1.411764 mul 0.917647 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -1.045752 mul 0.200000 add exch dup 0.850000 sub -0.470588 mul 0.670588 add exch dup 0.850000 sub -1.307190 mul 0.776471 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.043137 exch 0.600000 exch 0.580392 exch } if pop }
endstream
endobj

450 0 obj
  2683
endobj

451 0 obj
  << /Length 452 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.047059 exch 0.505882 exch 0.713726 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.633987 mul 0.047059 add exch dup 0.000000 sub 0.196078 mul 0.505882 add exch dup 0.000000 sub 1.699346 mul 0.713726 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 1.411765 mul 0.145098 add exch dup 0.060000 sub 0.156863 mul 0.517647 add exch dup 0.060000 sub 1.411765 mul 0.815686 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 0.588235 mul 0.215686 add exch dup 0.110000 sub 0.098039 mul 0.525490 add exch dup 0.110000 sub 0.686274 mul 0.886275 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588236 mul 0.239216 add exch dup 0.150000 sub -0.522876 mul 0.529412 add exch dup 0.150000 sub 0.196078 mul 0.913725 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.089324 mul 0.274510 add exch dup 0.210000 sub -1.002178 mul 0.498039 add exch dup 0.210000 sub 0.348584 mul 0.925490 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.372549 mul 0.372549 add exch dup 0.300000 sub -1.215686 mul 0.407843 add exch dup 0.300000 sub 0.431373 mul 0.956863 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.686275 mul 0.509804 add exch dup 0.400000 sub 1.568628 mul 0.286275 add exch dup 0.400000 sub -0.343137 mul 1.000000 add exch } if dup 0.480000 gt { exch pop exch pop exch pop dup 0.480000 sub -0.627451 mul 0.454902 add exch dup 0.480000 sub 1.411765 mul 0.411765 add exch dup 0.480000 sub -0.274510 mul 0.972549 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.470588 mul 0.392157 add exch dup 0.580000 sub 1.098039 mul 0.552941 add exch dup 0.580000 sub -0.235294 mul 0.945098 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.522876 mul 0.368627 add exch dup 0.630000 sub 1.307189 mul 0.607843 add exch dup 0.630000 sub -0.065359 mul 0.933333 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -0.392157 mul 0.337255 add exch dup 0.690000 sub 0.849673 mul 0.686275 add exch dup 0.690000 sub -0.065359 mul 0.929412 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.176470 mul 0.313726 add exch dup 0.750000 sub -0.509804 mul 0.737255 add exch dup 0.750000 sub -1.490196 mul 0.925490 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -1.045752 mul 0.196078 add exch dup 0.850000 sub -0.470588 mul 0.686275 add exch dup 0.850000 sub -1.307190 mul 0.776471 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.039216 exch 0.615686 exch 0.580392 exch } if pop }
endstream
endobj

452 0 obj
  2683
endobj

453 0 obj
  << /Length 454 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.203922 exch 0.121569 exch 0.560784 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -1.019608 mul 0.203922 add exch dup 0.000000 sub 4.235294 mul 0.121569 add exch dup 0.000000 sub 2.901961 mul 0.560784 add exch } if dup 0.050000 gt { exch pop exch pop exch pop dup 0.050000 sub -0.952381 mul 0.152941 add exch dup 0.050000 sub 4.201681 mul 0.333333 add exch dup 0.050000 sub 2.801121 mul 0.705882 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub -0.915033 mul 0.086275 add exch dup 0.120000 sub 3.790848 mul 0.627451 add exch dup 0.120000 sub 2.614378 mul 0.901961 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.784314 mul 0.058824 add exch dup 0.150000 sub -1.176471 mul 0.741176 add exch dup 0.150000 sub 0.000000 mul 0.980392 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 1.176471 mul 0.082353 add exch dup 0.180000 sub -1.960784 mul 0.705882 add exch dup 0.180000 sub 0.078431 mul 0.980392 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 1.633987 mul 0.141176 add exch dup 0.230000 sub -2.679739 mul 0.607843 add exch dup 0.230000 sub 0.065359 mul 0.984314 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 1.904761 mul 0.239216 add exch dup 0.290000 sub -3.137254 mul 0.447059 add exch dup 0.290000 sub 0.112045 mul 0.988235 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub 2.352942 mul 0.372549 add exch dup 0.360000 sub -3.921569 mul 0.227451 add exch dup 0.360000 sub 0.098039 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.566449 mul 0.466667 add exch dup 0.400000 sub 0.392157 mul 0.070588 add exch dup 0.400000 sub -1.612200 mul 1.000000 add exch } if dup 0.490000 gt { exch pop exch pop exch pop dup 0.490000 sub -0.392157 mul 0.415686 add exch dup 0.490000 sub 0.305011 mul 0.105882 add exch dup 0.490000 sub -1.176471 mul 0.854902 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.313725 mul 0.380392 add exch dup 0.580000 sub 0.235294 mul 0.133333 add exch dup 0.580000 sub -0.784313 mul 0.749020 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.392157 mul 0.364706 add exch dup 0.630000 sub 0.392157 mul 0.145098 add exch dup 0.630000 sub -0.392157 mul 0.709804 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -0.463458 mul 0.360784 add exch dup 0.640000 sub 0.249554 mul 0.149020 add exch dup 0.640000 sub -0.356506 mul 0.705882 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.501961 mul 0.309804 add exch dup 0.750000 sub -0.109804 mul 0.176471 add exch dup 0.750000 sub -0.580392 mul 0.666667 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.184314 exch 0.149020 exch 0.521569 exch } if pop }
endstream
endobj

454 0 obj
  2879
endobj

455 0 obj
  << /Length 456 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.078431 exch 0.423529 exch 0.682353 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.045752 mul 0.078431 add exch dup 0.000000 sub 1.307190 mul 0.423529 add exch dup 0.000000 sub 2.091503 mul 0.682353 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.718954 mul 0.141176 add exch dup 0.060000 sub 0.849673 mul 0.501961 add exch dup 0.060000 sub 1.437908 mul 0.807843 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.522876 mul 0.184314 add exch dup 0.120000 sub 0.653595 mul 0.552941 add exch dup 0.120000 sub 1.045751 mul 0.894118 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.627451 mul 0.200000 add exch dup 0.150000 sub -0.705882 mul 0.572549 add exch dup 0.150000 sub 0.156863 mul 0.925490 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 1.127451 mul 0.231373 add exch dup 0.200000 sub -1.225491 mul 0.537255 add exch dup 0.200000 sub 0.294118 mul 0.933333 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub 1.411765 mul 0.321569 add exch dup 0.280000 sub -1.607843 mul 0.439216 add exch dup 0.280000 sub 0.352941 mul 0.956863 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub 1.764705 mul 0.462745 add exch dup 0.380000 sub -1.960784 mul 0.278431 add exch dup 0.380000 sub 0.392157 mul 0.992157 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.718954 mul 0.498039 add exch dup 0.400000 sub 1.503268 mul 0.239216 add exch dup 0.400000 sub -0.653595 mul 1.000000 add exch } if dup 0.460000 gt { exch pop exch pop exch pop dup 0.460000 sub -0.570410 mul 0.454902 add exch dup 0.460000 sub 1.176471 mul 0.329412 add exch dup 0.460000 sub -0.499109 mul 0.960784 add exch } if dup 0.570000 gt { exch pop exch pop exch pop dup 0.570000 sub -0.392157 mul 0.392157 add exch dup 0.570000 sub 0.849674 mul 0.458824 add exch dup 0.570000 sub -0.326797 mul 0.905882 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.457516 mul 0.368627 add exch dup 0.630000 sub 0.980392 mul 0.509804 add exch dup 0.630000 sub -0.130719 mul 0.886275 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -0.457516 mul 0.341176 add exch dup 0.690000 sub 0.849673 mul 0.568627 add exch dup 0.690000 sub -0.130719 mul 0.878431 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.029412 mul 0.313726 add exch dup 0.750000 sub -0.441177 mul 0.619608 add exch dup 0.750000 sub -1.323530 mul 0.870588 add exch } if dup 0.830000 gt { exch pop exch pop exch pop dup 0.830000 sub -0.945790 mul 0.231373 add exch dup 0.830000 sub -0.392157 mul 0.584314 add exch dup 0.830000 sub -1.153402 mul 0.764706 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.070588 exch 0.517647 exch 0.568627 exch } if pop }
endstream
endobj

456 0 obj
  2878
endobj

457 0 obj
  << /Length 458 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.215686 exch 0.090196 exch 0.545098 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -1.045752 mul 0.215686 add exch dup 0.000000 sub 4.183006 mul 0.090196 add exch dup 0.000000 sub 2.745098 mul 0.545098 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub -1.132898 mul 0.184314 add exch dup 0.030000 sub 4.313726 mul 0.215686 add exch dup 0.030000 sub 2.832244 mul 0.627451 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub -1.307189 mul 0.082353 add exch dup 0.120000 sub 5.098037 mul 0.603922 add exch dup 0.120000 sub 3.398692 mul 0.882353 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.784314 mul 0.043137 add exch dup 0.150000 sub -1.176471 mul 0.756863 add exch dup 0.150000 sub 0.000000 mul 0.984314 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 1.098039 mul 0.066667 add exch dup 0.180000 sub -1.960784 mul 0.721569 add exch dup 0.180000 sub 0.078431 mul 0.984314 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 1.960784 mul 0.121569 add exch dup 0.230000 sub -3.215687 mul 0.623529 add exch dup 0.230000 sub 0.078431 mul 0.988235 add exch } if dup 0.280000 gt { exch pop exch pop exch pop dup 0.280000 sub 1.848740 mul 0.219608 add exch dup 0.280000 sub -3.137255 mul 0.462745 add exch dup 0.280000 sub 0.056022 mul 0.992157 add exch } if dup 0.350000 gt { exch pop exch pop exch pop dup 0.350000 sub 2.274509 mul 0.349020 add exch dup 0.350000 sub -3.843136 mul 0.243137 add exch dup 0.350000 sub 0.078431 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.549020 mul 0.462745 add exch dup 0.400000 sub 0.313726 mul 0.050980 add exch dup 0.400000 sub -1.647059 mul 1.000000 add exch } if dup 0.500000 gt { exch pop exch pop exch pop dup 0.500000 sub -0.441177 mul 0.407843 add exch dup 0.500000 sub 0.245098 mul 0.082353 add exch dup 0.500000 sub -1.274510 mul 0.835294 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.235294 mul 0.372549 add exch dup 0.580000 sub 0.156863 mul 0.101961 add exch dup 0.580000 sub -0.784313 mul 0.733333 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.424837 mul 0.360784 add exch dup 0.630000 sub 0.196078 mul 0.109804 add exch dup 0.630000 sub -0.392157 mul 0.694118 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.470588 mul 0.309804 add exch dup 0.750000 sub -0.094118 mul 0.133333 add exch dup 0.750000 sub -0.517647 mul 0.647059 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.192157 exch 0.109804 exch 0.517647 exch } if pop }
endstream
endobj

458 0 obj
  2683
endobj

459 0 obj
  << /Length 460 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.047059 exch 0.533333 exch 0.737255 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.830065 mul 0.047059 add exch dup 0.000000 sub -0.196078 mul 0.533333 add exch dup 0.000000 sub 1.568627 mul 0.737255 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 1.176471 mul 0.156863 add exch dup 0.060000 sub -0.130719 mul 0.521569 add exch dup 0.060000 sub 0.980392 mul 0.831373 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.784314 mul 0.227451 add exch dup 0.120000 sub -0.130719 mul 0.513726 add exch dup 0.120000 sub 0.653595 mul 0.890196 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588235 mul 0.250980 add exch dup 0.150000 sub -0.457517 mul 0.509804 add exch dup 0.150000 sub 0.196078 mul 0.909804 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.089324 mul 0.286275 add exch dup 0.210000 sub -0.871459 mul 0.482353 add exch dup 0.210000 sub 0.392157 mul 0.921569 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.294118 mul 0.384314 add exch dup 0.300000 sub -1.019608 mul 0.403922 add exch dup 0.300000 sub 0.431373 mul 0.956863 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.735295 mul 0.513726 add exch dup 0.400000 sub 1.764706 mul 0.301961 add exch dup 0.400000 sub -0.245098 mul 1.000000 add exch } if dup 0.480000 gt { exch pop exch pop exch pop dup 0.480000 sub -0.588235 mul 0.454902 add exch dup 0.480000 sub 1.450981 mul 0.443137 add exch dup 0.480000 sub -0.196078 mul 0.980392 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.470588 mul 0.396078 add exch dup 0.580000 sub 1.098039 mul 0.588235 add exch dup 0.580000 sub -0.156863 mul 0.960784 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.504202 mul 0.372549 add exch dup 0.630000 sub 1.232493 mul 0.643137 add exch dup 0.630000 sub -0.056022 mul 0.952941 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -0.470588 mul 0.337255 add exch dup 0.700000 sub 1.019608 mul 0.729412 add exch dup 0.700000 sub -0.078431 mul 0.949020 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.140820 mul 0.313726 add exch dup 0.750000 sub -0.534759 mul 0.780392 add exch dup 0.750000 sub -1.461675 mul 0.945098 add exch } if dup 0.860000 gt { exch pop exch pop exch pop dup 0.860000 sub -1.120448 mul 0.188235 add exch dup 0.860000 sub -0.504202 mul 0.721569 add exch dup 0.860000 sub -1.400560 mul 0.784314 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.031373 exch 0.650980 exch 0.588235 exch } if pop }
endstream
endobj

460 0 obj
  2686
endobj

461 0 obj
  << /Length 462 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.188235 exch 0.160784 exch 0.576471 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.849673 mul 0.188235 add exch dup 0.000000 sub 4.117647 mul 0.160784 add exch dup 0.000000 sub 2.941176 mul 0.576471 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub -0.672269 mul 0.137255 add exch dup 0.060000 sub 3.193278 mul 0.407843 add exch dup 0.060000 sub 2.240896 mul 0.752941 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.784313 mul 0.090196 add exch dup 0.130000 sub 4.313723 mul 0.631373 add exch dup 0.130000 sub 3.137253 mul 0.909804 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.784314 mul 0.074510 add exch dup 0.150000 sub -1.176471 mul 0.717647 add exch dup 0.150000 sub 0.000000 mul 0.972549 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 1.254902 mul 0.098039 add exch dup 0.180000 sub -1.960784 mul 0.682353 add exch dup 0.180000 sub 0.156863 mul 0.972549 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 1.456583 mul 0.160784 add exch dup 0.230000 sub -2.296919 mul 0.584314 add exch dup 0.230000 sub 0.056022 mul 0.980392 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.960784 mul 0.262745 add exch dup 0.300000 sub -3.137255 mul 0.423529 add exch dup 0.300000 sub 0.168067 mul 0.984314 add exch } if dup 0.370000 gt { exch pop exch pop exch pop dup 0.370000 sub 2.352941 mul 0.400000 add exch dup 0.370000 sub -3.790849 mul 0.203922 add exch dup 0.370000 sub 0.130719 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.588235 mul 0.470588 add exch dup 0.400000 sub 0.588235 mul 0.090196 add exch dup 0.400000 sub -1.470588 mul 1.000000 add exch } if dup 0.480000 gt { exch pop exch pop exch pop dup 0.480000 sub -0.431373 mul 0.423529 add exch dup 0.480000 sub 0.431373 mul 0.137255 add exch dup 0.480000 sub -1.098039 mul 0.882353 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.313725 mul 0.380392 add exch dup 0.580000 sub 0.313725 mul 0.180392 add exch dup 0.580000 sub -0.784313 mul 0.772549 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.392157 mul 0.364706 add exch dup 0.630000 sub 0.392157 mul 0.196078 add exch dup 0.630000 sub -0.392157 mul 0.733333 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -0.463458 mul 0.360784 add exch dup 0.640000 sub 0.320856 mul 0.200000 add exch dup 0.640000 sub -0.320856 mul 0.729412 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.564706 mul 0.309804 add exch dup 0.750000 sub -0.156863 mul 0.235294 add exch dup 0.750000 sub -0.658823 mul 0.694118 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.168627 exch 0.196078 exch 0.529412 exch } if pop }
endstream
endobj

462 0 obj
  2879
endobj

463 0 obj
  << /Length 464 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.000000 exch 0.615686 exch 0.760784 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.745098 mul 0.000000 add exch dup 0.000000 sub -1.176471 mul 0.615686 add exch dup 0.000000 sub 1.176471 mul 0.760784 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 1.960784 mul 0.027451 add exch dup 0.010000 sub -1.002179 mul 0.603922 add exch dup 0.010000 sub 0.915033 mul 0.772549 add exch } if dup 0.100000 gt { exch pop exch pop exch pop dup 0.100000 sub 1.525055 mul 0.203922 add exch dup 0.100000 sub -0.784314 mul 0.513726 add exch dup 0.100000 sub 0.697168 mul 0.854902 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 1.225490 mul 0.341176 add exch dup 0.190000 sub -0.637255 mul 0.443137 add exch dup 0.190000 sub 0.588235 mul 0.917647 add exch } if dup 0.270000 gt { exch pop exch pop exch pop dup 0.270000 sub 0.896359 mul 0.439216 add exch dup 0.270000 sub -0.448179 mul 0.392157 add exch dup 0.270000 sub 0.392157 mul 0.964706 add exch } if dup 0.340000 gt { exch pop exch pop exch pop dup 0.340000 sub 0.326797 mul 0.501961 add exch dup 0.340000 sub -0.196078 mul 0.360784 add exch dup 0.340000 sub 0.130719 mul 0.992157 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.784315 mul 0.521569 add exch dup 0.400000 sub 1.960785 mul 0.349020 add exch dup 0.400000 sub 0.000000 mul 1.000000 add exch } if dup 0.440000 gt { exch pop exch pop exch pop dup 0.440000 sub -0.627451 mul 0.490196 add exch dup 0.440000 sub 1.699347 mul 0.427451 add exch dup 0.440000 sub 0.000000 mul 1.000000 add exch } if dup 0.590000 gt { exch pop exch pop exch pop dup 0.590000 sub -0.534759 mul 0.396078 add exch dup 0.590000 sub 1.426025 mul 0.682353 add exch dup 0.590000 sub 0.000000 mul 1.000000 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -0.470588 mul 0.337255 add exch dup 0.700000 sub 1.176470 mul 0.839216 add exch dup 0.700000 sub 0.000000 mul 1.000000 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.339869 mul 0.313726 add exch dup 0.750000 sub -0.620915 mul 0.898039 add exch dup 0.750000 sub -1.699346 mul 1.000000 add exch } if dup 0.870000 gt { exch pop exch pop exch pop dup 0.870000 sub -1.176471 mul 0.152941 add exch dup 0.870000 sub -0.573152 mul 0.823529 add exch dup 0.870000 sub -1.508296 mul 0.796078 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.000000 exch 0.749020 exch 0.600000 exch } if pop }
endstream
endobj

464 0 obj
  2486
endobj

465 0 obj
  << /Length 466 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.164706 exch 0.223529 exch 0.600000 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.448179 mul 0.164706 add exch dup 0.000000 sub 3.417367 mul 0.223529 add exch dup 0.000000 sub 2.633053 mul 0.600000 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub -0.326798 mul 0.133333 add exch dup 0.070000 sub 2.679739 mul 0.462745 add exch dup 0.070000 sub 2.156863 mul 0.784314 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.392157 mul 0.113725 add exch dup 0.130000 sub 3.137253 mul 0.623529 add exch dup 0.130000 sub 2.352940 mul 0.913725 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588236 mul 0.105882 add exch dup 0.150000 sub -0.882353 mul 0.686275 add exch dup 0.150000 sub 0.098039 mul 0.960784 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 1.333333 mul 0.129412 add exch dup 0.190000 sub -1.960784 mul 0.650980 add exch dup 0.190000 sub 0.078431 mul 0.964706 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 1.456583 mul 0.196078 add exch dup 0.240000 sub -2.296919 mul 0.552941 add exch dup 0.240000 sub 0.168067 mul 0.968627 add exch } if dup 0.310000 gt { exch pop exch pop exch pop dup 0.310000 sub 1.813726 mul 0.298039 add exch dup 0.310000 sub -2.745099 mul 0.392157 add exch dup 0.310000 sub 0.196078 mul 0.980392 add exch } if dup 0.390000 gt { exch pop exch pop exch pop dup 0.390000 sub 3.137248 mul 0.443137 add exch dup 0.390000 sub -4.705873 mul 0.172549 add exch dup 0.390000 sub 0.392156 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.588235 mul 0.474510 add exch dup 0.400000 sub 0.784314 mul 0.125490 add exch dup 0.400000 sub -1.241830 mul 1.000000 add exch } if dup 0.460000 gt { exch pop exch pop exch pop dup 0.460000 sub -0.499109 mul 0.439216 add exch dup 0.460000 sub 0.606061 mul 0.172549 add exch dup 0.460000 sub -1.033868 mul 0.925490 add exch } if dup 0.570000 gt { exch pop exch pop exch pop dup 0.570000 sub -0.326797 mul 0.384314 add exch dup 0.570000 sub 0.457517 mul 0.239216 add exch dup 0.570000 sub -0.718954 mul 0.811765 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.784314 mul 0.364706 add exch dup 0.630000 sub 0.784314 mul 0.266667 add exch dup 0.630000 sub -0.392157 mul 0.768627 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -0.427807 mul 0.356863 add exch dup 0.640000 sub 0.463458 mul 0.274510 add exch dup 0.640000 sub -0.285205 mul 0.764706 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.658824 mul 0.309804 add exch dup 0.750000 sub -0.219608 mul 0.325490 add exch dup 0.750000 sub -0.784314 mul 0.733333 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.145098 exch 0.270588 exch 0.537255 exch } if pop }
endstream
endobj

466 0 obj
  2879
endobj

467 0 obj
  << /Length 468 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.015686 exch 0.576471 exch 0.745098 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.091503 mul 0.015686 add exch dup 0.000000 sub -0.653595 mul 0.576471 add exch dup 0.000000 sub 1.307189 mul 0.745098 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 2.117647 mul 0.078431 add exch dup 0.030000 sub -0.784314 mul 0.556863 add exch dup 0.030000 sub 1.254902 mul 0.784314 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 1.568627 mul 0.184314 add exch dup 0.080000 sub -0.490197 mul 0.517647 add exch dup 0.080000 sub 0.980392 mul 0.847059 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.784314 mul 0.247059 add exch dup 0.120000 sub -0.261438 mul 0.498039 add exch dup 0.120000 sub 0.522876 mul 0.886275 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588235 mul 0.270588 add exch dup 0.150000 sub -0.392157 mul 0.490196 add exch dup 0.150000 sub 0.261438 mul 0.901961 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 0.980392 mul 0.305882 add exch dup 0.210000 sub -0.666667 mul 0.466667 add exch dup 0.210000 sub 0.392157 mul 0.917647 add exch } if dup 0.310000 gt { exch pop exch pop exch pop dup 0.310000 sub 1.263617 mul 0.403922 add exch dup 0.310000 sub -0.827887 mul 0.400000 add exch dup 0.310000 sub 0.479303 mul 0.956863 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.697168 mul 0.517647 add exch dup 0.400000 sub 1.786492 mul 0.325490 add exch dup 0.400000 sub -0.130719 mul 1.000000 add exch } if dup 0.490000 gt { exch pop exch pop exch pop dup 0.490000 sub -0.653595 mul 0.454902 add exch dup 0.490000 sub 1.655774 mul 0.486275 add exch dup 0.490000 sub -0.087146 mul 0.988235 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.470588 mul 0.396078 add exch dup 0.580000 sub 1.176470 mul 0.635294 add exch dup 0.580000 sub -0.078431 mul 0.980392 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.560224 mul 0.372549 add exch dup 0.630000 sub 1.344538 mul 0.694118 add exch dup 0.630000 sub -0.056022 mul 0.976471 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -0.392157 mul 0.333333 add exch dup 0.700000 sub 1.019608 mul 0.788235 add exch dup 0.700000 sub 0.000000 mul 0.972549 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.209150 mul 0.313726 add exch dup 0.750000 sub -0.555556 mul 0.839216 add exch dup 0.750000 sub -1.535948 mul 0.972549 add exch } if dup 0.870000 gt { exch pop exch pop exch pop dup 0.870000 sub -1.176471 mul 0.168627 add exch dup 0.870000 sub -0.573152 mul 0.772549 add exch dup 0.870000 sub -1.508296 mul 0.788235 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.015686 exch 0.698039 exch 0.592157 exch } if pop }
endstream
endobj

468 0 obj
  2880
endobj

469 0 obj
  << /Length 470 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.250980 exch 0.011765 exch 0.513726 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -1.647059 mul 0.250980 add exch dup 0.000000 sub 5.281045 mul 0.011765 add exch dup 0.000000 sub 3.241830 mul 0.513726 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.653595 mul 0.003922 add exch dup 0.150000 sub -1.176471 mul 0.803922 add exch dup 0.150000 sub 0.000000 mul 1.000000 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 1.372549 mul 0.023529 add exch dup 0.180000 sub -2.450981 mul 0.768627 add exch dup 0.180000 sub 0.000000 mul 1.000000 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 1.803921 mul 0.078431 add exch dup 0.220000 sub -3.215685 mul 0.670588 add exch dup 0.220000 sub 0.000000 mul 1.000000 add exch } if dup 0.270000 gt { exch pop exch pop exch pop dup 0.270000 sub 2.091503 mul 0.168627 add exch dup 0.270000 sub -3.725490 mul 0.509804 add exch dup 0.270000 sub 0.000000 mul 1.000000 add exch } if dup 0.330000 gt { exch pop exch pop exch pop dup 0.330000 sub 2.240896 mul 0.294118 add exch dup 0.330000 sub -4.033614 mul 0.286275 add exch dup 0.330000 sub 0.000000 mul 1.000000 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.522876 mul 0.450980 add exch dup 0.400000 sub 0.000000 mul 0.003922 add exch dup 0.400000 sub -1.830065 mul 1.000000 add exch } if dup 0.430000 gt { exch pop exch pop exch pop dup 0.430000 sub -0.435730 mul 0.435294 add exch dup 0.430000 sub 0.043573 mul 0.003922 add exch dup 0.430000 sub -1.786493 mul 0.945098 add exch } if dup 0.520000 gt { exch pop exch pop exch pop dup 0.520000 sub -0.392157 mul 0.396078 add exch dup 0.520000 sub 0.056022 mul 0.007843 add exch dup 0.520000 sub -1.456583 mul 0.784314 add exch } if dup 0.590000 gt { exch pop exch pop exch pop dup 0.590000 sub -0.196078 mul 0.368627 add exch dup 0.590000 sub 0.000000 mul 0.011765 add exch dup 0.590000 sub -0.882352 mul 0.682353 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.392157 mul 0.360784 add exch dup 0.630000 sub 0.000000 mul 0.011765 add exch dup 0.630000 sub -0.392157 mul 0.647059 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -0.427807 mul 0.356863 add exch dup 0.640000 sub 0.035651 mul 0.011765 add exch dup 0.640000 sub -0.463458 mul 0.643137 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.345098 mul 0.309804 add exch dup 0.750000 sub -0.015686 mul 0.015686 add exch dup 0.750000 sub -0.360784 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.223529 exch 0.011765 exch 0.501961 exch } if pop }
endstream
endobj

470 0 obj
  2685
endobj

471 0 obj
  << /Length 472 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.027451 exch 0.545098 exch 0.733333 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.745098 mul 0.027451 add exch dup 0.000000 sub -0.392157 mul 0.545098 add exch dup 0.000000 sub 2.352941 mul 0.733333 add exch } if dup 0.010000 gt { exch pop exch pop exch pop dup 0.010000 sub 1.895425 mul 0.054902 add exch dup 0.010000 sub -0.326797 mul 0.541176 add exch dup 0.010000 sub 1.372549 mul 0.756863 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 1.333333 mul 0.168627 add exch dup 0.070000 sub -0.235294 mul 0.521569 add exch dup 0.070000 sub 0.941176 mul 0.839216 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.784314 mul 0.235294 add exch dup 0.120000 sub -0.130719 mul 0.509804 add exch dup 0.120000 sub 0.653595 mul 0.886275 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588235 mul 0.258824 add exch dup 0.150000 sub -0.457517 mul 0.505882 add exch dup 0.150000 sub 0.196078 mul 0.905882 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 0.980392 mul 0.294118 add exch dup 0.210000 sub -0.745098 mul 0.478431 add exch dup 0.210000 sub 0.392157 mul 0.917647 add exch } if dup 0.310000 gt { exch pop exch pop exch pop dup 0.310000 sub 1.350763 mul 0.392157 add exch dup 0.310000 sub -1.045752 mul 0.403922 add exch dup 0.310000 sub 0.479303 mul 0.956863 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.735295 mul 0.513726 add exch dup 0.400000 sub 1.764706 mul 0.309804 add exch dup 0.400000 sub -0.245098 mul 1.000000 add exch } if dup 0.480000 gt { exch pop exch pop exch pop dup 0.480000 sub -0.588235 mul 0.454902 add exch dup 0.480000 sub 1.490196 mul 0.450980 add exch dup 0.480000 sub -0.156863 mul 0.980392 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.470588 mul 0.396078 add exch dup 0.580000 sub 1.098039 mul 0.600000 add exch dup 0.580000 sub -0.156863 mul 0.964706 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.560224 mul 0.372549 add exch dup 0.630000 sub 1.288515 mul 0.654902 add exch dup 0.630000 sub -0.056022 mul 0.956863 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -0.392157 mul 0.333333 add exch dup 0.700000 sub 1.019608 mul 0.745098 add exch dup 0.700000 sub 0.000000 mul 0.952941 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.212121 mul 0.313726 add exch dup 0.750000 sub -0.570410 mul 0.796078 add exch dup 0.750000 sub -1.532977 mul 0.952941 add exch } if dup 0.860000 gt { exch pop exch pop exch pop dup 0.860000 sub -1.092437 mul 0.180392 add exch dup 0.860000 sub -0.504202 mul 0.733333 add exch dup 0.860000 sub -1.400560 mul 0.784314 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.027451 exch 0.662745 exch 0.588235 exch } if pop }
endstream
endobj

472 0 obj
  2880
endobj

473 0 obj
  << /Length 474 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.211765 exch 0.101961 exch 0.549020 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.980392 mul 0.211765 add exch dup 0.000000 sub 4.019608 mul 0.101961 add exch dup 0.000000 sub 2.745098 mul 0.549020 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub -1.127451 mul 0.172549 add exch dup 0.040000 sub 4.411765 mul 0.262745 add exch dup 0.040000 sub 2.892157 mul 0.658824 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub -1.176470 mul 0.082353 add exch dup 0.120000 sub 4.575162 mul 0.615686 add exch dup 0.120000 sub 3.137254 mul 0.890196 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.784314 mul 0.047059 add exch dup 0.150000 sub -1.176471 mul 0.752941 add exch dup 0.150000 sub 0.000000 mul 0.984314 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 1.176471 mul 0.070588 add exch dup 0.180000 sub -1.960784 mul 0.717647 add exch dup 0.180000 sub 0.078431 mul 0.984314 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 1.568628 mul 0.129412 add exch dup 0.230000 sub -2.679739 mul 0.619608 add exch dup 0.230000 sub 0.065359 mul 0.988235 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 2.222222 mul 0.223529 add exch dup 0.290000 sub -3.660131 mul 0.458824 add exch dup 0.290000 sub 0.065359 mul 0.992157 add exch } if dup 0.350000 gt { exch pop exch pop exch pop dup 0.350000 sub 2.117646 mul 0.356863 add exch dup 0.350000 sub -3.607842 mul 0.239216 add exch dup 0.350000 sub 0.078431 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.549020 mul 0.462745 add exch dup 0.400000 sub 0.313726 mul 0.058824 add exch dup 0.400000 sub -1.568627 mul 1.000000 add exch } if dup 0.500000 gt { exch pop exch pop exch pop dup 0.500000 sub -0.441177 mul 0.407843 add exch dup 0.500000 sub 0.294118 mul 0.090196 add exch dup 0.500000 sub -1.323530 mul 0.843137 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.235294 mul 0.372549 add exch dup 0.580000 sub 0.156863 mul 0.113725 add exch dup 0.580000 sub -0.784313 mul 0.737255 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.424837 mul 0.360784 add exch dup 0.630000 sub 0.228758 mul 0.121569 add exch dup 0.630000 sub -0.392157 mul 0.698039 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.486275 mul 0.309804 add exch dup 0.750000 sub -0.109804 mul 0.149020 add exch dup 0.750000 sub -0.533333 mul 0.650980 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.188235 exch 0.121569 exch 0.517647 exch } if pop }
endstream
endobj

474 0 obj
  2683
endobj

475 0 obj
  << /Length 476 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.172549 exch 0.200000 exch 0.592157 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.560224 mul 0.172549 add exch dup 0.000000 sub 3.529412 mul 0.200000 add exch dup 0.000000 sub 2.689075 mul 0.592157 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub -0.457516 mul 0.133333 add exch dup 0.070000 sub 3.006536 mul 0.447059 add exch dup 0.070000 sub 2.222222 mul 0.780392 add exch } if dup 0.130000 gt { exch pop exch pop exch pop dup 0.130000 sub -0.588235 mul 0.105882 add exch dup 0.130000 sub 3.333331 mul 0.627451 add exch dup 0.130000 sub 2.549018 mul 0.913725 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588235 mul 0.094118 add exch dup 0.150000 sub -0.882353 mul 0.694118 add exch dup 0.150000 sub 0.098039 mul 0.964706 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 1.333333 mul 0.117647 add exch dup 0.190000 sub -1.960784 mul 0.658824 add exch dup 0.190000 sub 0.078431 mul 0.968627 add exch } if dup 0.240000 gt { exch pop exch pop exch pop dup 0.240000 sub 1.699346 mul 0.184314 add exch dup 0.240000 sub -2.679738 mul 0.560784 add exch dup 0.240000 sub 0.196078 mul 0.972549 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.813726 mul 0.286275 add exch dup 0.300000 sub -2.745099 mul 0.400000 add exch dup 0.300000 sub 0.147059 mul 0.984314 add exch } if dup 0.380000 gt { exch pop exch pop exch pop dup 0.380000 sub 2.156862 mul 0.431373 add exch dup 0.380000 sub -3.333332 mul 0.180392 add exch dup 0.380000 sub 0.196078 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.560224 mul 0.474510 add exch dup 0.400000 sub 0.672269 mul 0.113725 add exch dup 0.400000 sub -1.288515 mul 1.000000 add exch } if dup 0.470000 gt { exch pop exch pop exch pop dup 0.470000 sub -0.509804 mul 0.435294 add exch dup 0.470000 sub 0.588235 mul 0.160784 add exch dup 0.470000 sub -1.098039 mul 0.909804 add exch } if dup 0.570000 gt { exch pop exch pop exch pop dup 0.570000 sub -0.326797 mul 0.384314 add exch dup 0.570000 sub 0.392157 mul 0.219608 add exch dup 0.570000 sub -0.718954 mul 0.800000 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.392157 mul 0.364706 add exch dup 0.630000 sub 0.392157 mul 0.243137 add exch dup 0.630000 sub -0.392157 mul 0.756863 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -0.463458 mul 0.360784 add exch dup 0.640000 sub 0.427808 mul 0.247059 add exch dup 0.640000 sub -0.285205 mul 0.752941 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.627451 mul 0.309804 add exch dup 0.750000 sub -0.188235 mul 0.294118 add exch dup 0.750000 sub -0.752941 mul 0.721569 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.152941 exch 0.247059 exch 0.533333 exch } if pop }
endstream
endobj

476 0 obj
  2879
endobj

477 0 obj
  << /Length 478 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.043137 exch 0.513726 exch 0.721569 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.699347 mul 0.043137 add exch dup 0.000000 sub 0.065359 mul 0.513726 add exch dup 0.000000 sub 1.633987 mul 0.721569 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 1.490196 mul 0.145098 add exch dup 0.060000 sub 0.078431 mul 0.517647 add exch dup 0.060000 sub 1.333333 mul 0.819608 add exch } if dup 0.110000 gt { exch pop exch pop exch pop dup 0.110000 sub 0.588235 mul 0.219608 add exch dup 0.110000 sub 0.000000 mul 0.521569 add exch dup 0.110000 sub 0.588235 mul 0.886275 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588236 mul 0.243137 add exch dup 0.150000 sub -0.522876 mul 0.521569 add exch dup 0.150000 sub 0.196078 mul 0.909804 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.089324 mul 0.278431 add exch dup 0.210000 sub -0.958605 mul 0.490196 add exch dup 0.210000 sub 0.392157 mul 0.921569 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.333334 mul 0.376471 add exch dup 0.300000 sub -1.137255 mul 0.403922 add exch dup 0.300000 sub 0.431373 mul 0.956863 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.686275 mul 0.509804 add exch dup 0.400000 sub 1.666667 mul 0.290196 add exch dup 0.400000 sub -0.294118 mul 1.000000 add exch } if dup 0.480000 gt { exch pop exch pop exch pop dup 0.480000 sub -0.588235 mul 0.454902 add exch dup 0.480000 sub 1.411765 mul 0.423529 add exch dup 0.480000 sub -0.274510 mul 0.976471 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.470588 mul 0.396078 add exch dup 0.580000 sub 1.098039 mul 0.564706 add exch dup 0.580000 sub -0.156863 mul 0.949020 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.588235 mul 0.372549 add exch dup 0.630000 sub 1.307189 mul 0.619608 add exch dup 0.630000 sub -0.065359 mul 0.941176 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -0.392157 mul 0.337255 add exch dup 0.690000 sub 0.849673 mul 0.698039 add exch dup 0.690000 sub -0.065359 mul 0.937255 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.069519 mul 0.313726 add exch dup 0.750000 sub -0.463458 mul 0.749020 add exch dup 0.750000 sub -1.390374 mul 0.933333 add exch } if dup 0.860000 gt { exch pop exch pop exch pop dup 0.860000 sub -1.120448 mul 0.196078 add exch dup 0.860000 sub -0.504202 mul 0.698039 add exch dup 0.860000 sub -1.400560 mul 0.780392 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.039216 exch 0.627451 exch 0.584314 exch } if pop }
endstream
endobj

478 0 obj
  2683
endobj

479 0 obj
  << /Length 480 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.054902 exch 0.486275 exch 0.705882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.503268 mul 0.054902 add exch dup 0.000000 sub 0.457517 mul 0.486275 add exch dup 0.000000 sub 1.830065 mul 0.705882 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.980392 mul 0.145098 add exch dup 0.060000 sub 0.326797 mul 0.513726 add exch dup 0.060000 sub 1.241830 mul 0.815686 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.784313 mul 0.203922 add exch dup 0.120000 sub 0.261438 mul 0.533333 add exch dup 0.120000 sub 0.915032 mul 0.890196 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588236 mul 0.227451 add exch dup 0.150000 sub -0.588235 mul 0.541176 add exch dup 0.150000 sub 0.196078 mul 0.917647 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 1.089324 mul 0.262745 add exch dup 0.210000 sub -1.045752 mul 0.505882 add exch dup 0.210000 sub 0.305011 mul 0.929412 add exch } if dup 0.300000 gt { exch pop exch pop exch pop dup 0.300000 sub 1.450981 mul 0.360784 add exch dup 0.300000 sub -1.372549 mul 0.411765 add exch dup 0.300000 sub 0.431373 mul 0.956863 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.728292 mul 0.505882 add exch dup 0.400000 sub 1.680672 mul 0.274510 add exch dup 0.400000 sub -0.448179 mul 1.000000 add exch } if dup 0.470000 gt { exch pop exch pop exch pop dup 0.470000 sub -0.570410 mul 0.454902 add exch dup 0.470000 sub 1.283423 mul 0.392157 add exch dup 0.470000 sub -0.320856 mul 0.968627 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.470588 mul 0.392157 add exch dup 0.580000 sub 1.019608 mul 0.533333 add exch dup 0.580000 sub -0.235294 mul 0.933333 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.522876 mul 0.368627 add exch dup 0.630000 sub 1.176471 mul 0.584314 add exch dup 0.630000 sub -0.130719 mul 0.921569 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -0.392157 mul 0.337255 add exch dup 0.690000 sub 0.849673 mul 0.654902 add exch dup 0.690000 sub -0.065359 mul 0.913725 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.058823 mul 0.313726 add exch dup 0.750000 sub -0.470588 mul 0.705882 add exch dup 0.750000 sub -1.333333 mul 0.909804 add exch } if dup 0.850000 gt { exch pop exch pop exch pop dup 0.850000 sub -1.071896 mul 0.207843 add exch dup 0.850000 sub -0.470588 mul 0.658824 add exch dup 0.850000 sub -1.307190 mul 0.776471 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.047059 exch 0.588235 exch 0.580392 exch } if pop }
endstream
endobj

480 0 obj
  2683
endobj

481 0 obj
  << /Length 482 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.133333 exch 0.294118 exch 0.627451 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.056022 mul 0.133333 add exch dup 0.000000 sub 2.633053 mul 0.294118 add exch dup 0.000000 sub 2.352941 mul 0.627451 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 0.000000 mul 0.137255 add exch dup 0.070000 sub 2.431373 mul 0.478431 add exch dup 0.070000 sub 2.274510 mul 0.792157 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.000000 mul 0.137255 add exch dup 0.120000 sub 1.568627 mul 0.600000 add exch dup 0.120000 sub 1.437908 mul 0.905882 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.686275 mul 0.137255 add exch dup 0.150000 sub -0.882353 mul 0.647059 add exch dup 0.150000 sub 0.098039 mul 0.949020 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 1.176471 mul 0.164706 add exch dup 0.190000 sub -1.633987 mul 0.611765 add exch dup 0.190000 sub 0.196078 mul 0.952941 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.421569 mul 0.235294 add exch dup 0.250000 sub -2.009804 mul 0.513726 add exch dup 0.250000 sub 0.196078 mul 0.964706 add exch } if dup 0.330000 gt { exch pop exch pop exch pop dup 0.330000 sub 1.960784 mul 0.349020 add exch dup 0.330000 sub -2.689076 mul 0.352941 add exch dup 0.330000 sub 0.280112 mul 0.980392 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.784314 mul 0.486275 add exch dup 0.400000 sub 1.176472 mul 0.164706 add exch dup 0.400000 sub -1.176472 mul 1.000000 add exch } if dup 0.420000 gt { exch pop exch pop exch pop dup 0.420000 sub -0.560224 mul 0.470588 add exch dup 0.420000 sub 0.868347 mul 0.188235 add exch dup 0.420000 sub -0.868347 mul 0.976471 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.392157 add exch dup 0.560000 sub 0.616247 mul 0.309804 add exch dup 0.560000 sub -0.616247 mul 0.854902 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.522875 mul 0.364706 add exch dup 0.630000 sub 0.784313 mul 0.352941 add exch dup 0.630000 sub -0.261438 mul 0.811765 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -0.435730 mul 0.349020 add exch dup 0.660000 sub 0.566449 mul 0.376471 add exch dup 0.660000 sub -0.261438 mul 0.803922 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.686274 mul 0.309804 add exch dup 0.750000 sub -0.294117 mul 0.427451 add exch dup 0.750000 sub -0.882352 mul 0.780392 add exch } if dup 0.790000 gt { exch pop exch pop exch pop dup 0.790000 sub -0.784314 mul 0.282353 add exch dup 0.790000 sub -0.280112 mul 0.415686 add exch dup 0.790000 sub -0.933707 mul 0.745098 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.117647 exch 0.356863 exch 0.549020 exch } if pop }
endstream
endobj

482 0 obj
  2878
endobj

483 0 obj
  << /Length 484 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.023529 exch 0.556863 exch 0.737255 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.960785 mul 0.023529 add exch dup 0.000000 sub -0.392157 mul 0.556863 add exch dup 0.000000 sub 1.372549 mul 0.737255 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 2.196078 mul 0.062745 add exch dup 0.020000 sub -0.549020 mul 0.549020 add exch dup 0.020000 sub 1.568627 mul 0.764706 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 1.333333 mul 0.172549 add exch dup 0.070000 sub -0.313726 mul 0.521569 add exch dup 0.070000 sub 0.941176 mul 0.843137 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.784314 mul 0.239216 add exch dup 0.120000 sub -0.130719 mul 0.505882 add exch dup 0.120000 sub 0.522876 mul 0.890196 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588235 mul 0.262745 add exch dup 0.150000 sub -0.457517 mul 0.501961 add exch dup 0.150000 sub 0.196078 mul 0.905882 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 0.980392 mul 0.298039 add exch dup 0.210000 sub -0.745098 mul 0.474510 add exch dup 0.210000 sub 0.392157 mul 0.917647 add exch } if dup 0.310000 gt { exch pop exch pop exch pop dup 0.310000 sub 1.307190 mul 0.396078 add exch dup 0.310000 sub -0.958606 mul 0.400000 add exch dup 0.310000 sub 0.479303 mul 0.956863 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.735295 mul 0.513726 add exch dup 0.400000 sub 1.862745 mul 0.313726 add exch dup 0.400000 sub -0.196078 mul 1.000000 add exch } if dup 0.480000 gt { exch pop exch pop exch pop dup 0.480000 sub -0.588235 mul 0.454902 add exch dup 0.480000 sub 1.490196 mul 0.462745 add exch dup 0.480000 sub -0.156863 mul 0.984314 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.470588 mul 0.396078 add exch dup 0.580000 sub 1.098039 mul 0.611765 add exch dup 0.580000 sub -0.078431 mul 0.968627 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.560224 mul 0.372549 add exch dup 0.630000 sub 1.288515 mul 0.666667 add exch dup 0.630000 sub -0.056022 mul 0.964706 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -0.392157 mul 0.333333 add exch dup 0.700000 sub 1.019608 mul 0.756863 add exch dup 0.700000 sub 0.000000 mul 0.960784 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.212121 mul 0.313726 add exch dup 0.750000 sub -0.570410 mul 0.807843 add exch dup 0.750000 sub -1.568627 mul 0.960784 add exch } if dup 0.860000 gt { exch pop exch pop exch pop dup 0.860000 sub -1.120448 mul 0.180392 add exch dup 0.860000 sub -0.504202 mul 0.745098 add exch dup 0.860000 sub -1.400560 mul 0.788235 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.023529 exch 0.674510 exch 0.592157 exch } if pop }
endstream
endobj

484 0 obj
  2880
endobj

485 0 obj
  << /Length 486 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.011765 exch 0.584314 exch 0.749020 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.483660 mul 0.011765 add exch dup 0.000000 sub -0.915033 mul 0.584314 add exch dup 0.000000 sub 1.437908 mul 0.749020 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 2.039216 mul 0.086275 add exch dup 0.030000 sub -0.862745 mul 0.556863 add exch dup 0.030000 sub 1.176471 mul 0.792157 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 1.568628 mul 0.188235 add exch dup 0.080000 sub -0.588236 mul 0.513726 add exch dup 0.080000 sub 0.882353 mul 0.850980 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.784313 mul 0.250980 add exch dup 0.120000 sub -0.261438 mul 0.490196 add exch dup 0.120000 sub 0.392157 mul 0.886275 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588235 mul 0.274510 add exch dup 0.150000 sub -0.392157 mul 0.482353 add exch dup 0.150000 sub 0.261438 mul 0.898039 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 0.980392 mul 0.309804 add exch dup 0.210000 sub -0.588235 mul 0.458824 add exch dup 0.210000 sub 0.392157 mul 0.913725 add exch } if dup 0.310000 gt { exch pop exch pop exch pop dup 0.310000 sub 1.220044 mul 0.407843 add exch dup 0.310000 sub -0.740741 mul 0.400000 add exch dup 0.310000 sub 0.522876 mul 0.952941 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.697168 mul 0.517647 add exch dup 0.400000 sub 1.786492 mul 0.333333 add exch dup 0.400000 sub -0.087146 mul 1.000000 add exch } if dup 0.490000 gt { exch pop exch pop exch pop dup 0.490000 sub -0.653595 mul 0.454902 add exch dup 0.490000 sub 1.699347 mul 0.494118 add exch dup 0.490000 sub -0.087146 mul 0.992157 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.470588 mul 0.396078 add exch dup 0.580000 sub 1.176470 mul 0.647059 add exch dup 0.580000 sub -0.078431 mul 0.984314 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.560224 mul 0.372549 add exch dup 0.630000 sub 1.400560 mul 0.705882 add exch dup 0.630000 sub 0.000000 mul 0.980392 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -0.392157 mul 0.333333 add exch dup 0.700000 sub 1.019608 mul 0.803922 add exch dup 0.700000 sub 0.000000 mul 0.980392 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.241830 mul 0.313726 add exch dup 0.750000 sub -0.588235 mul 0.854902 add exch dup 0.750000 sub -1.568627 mul 0.980392 add exch } if dup 0.870000 gt { exch pop exch pop exch pop dup 0.870000 sub -1.176471 mul 0.164706 add exch dup 0.870000 sub -0.542986 mul 0.784314 add exch dup 0.870000 sub -1.508296 mul 0.792157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.011765 exch 0.713726 exch 0.596078 exch } if pop }
endstream
endobj

486 0 obj
  2879
endobj

487 0 obj
  << /Length 488 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.125490 exch 0.313726 exch 0.639216 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.168067 mul 0.125490 add exch dup 0.000000 sub 2.296919 mul 0.313726 add exch dup 0.000000 sub 2.184874 mul 0.639216 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 0.156863 mul 0.137255 add exch dup 0.070000 sub 2.352942 mul 0.474510 add exch dup 0.070000 sub 2.196079 mul 0.792157 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.130719 mul 0.145098 add exch dup 0.120000 sub 1.437908 mul 0.592157 add exch dup 0.120000 sub 1.437908 mul 0.901961 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.686275 mul 0.149020 add exch dup 0.150000 sub -0.882353 mul 0.635294 add exch dup 0.150000 sub 0.098039 mul 0.945098 add exch } if dup 0.190000 gt { exch pop exch pop exch pop dup 0.190000 sub 1.176471 mul 0.176471 add exch dup 0.190000 sub -1.633987 mul 0.600000 add exch dup 0.190000 sub 0.196078 mul 0.949020 add exch } if dup 0.250000 gt { exch pop exch pop exch pop dup 0.250000 sub 1.470588 mul 0.247059 add exch dup 0.250000 sub -2.009804 mul 0.501961 add exch dup 0.250000 sub 0.245098 mul 0.960784 add exch } if dup 0.330000 gt { exch pop exch pop exch pop dup 0.330000 sub 1.736695 mul 0.364706 add exch dup 0.330000 sub -2.352942 mul 0.341176 add exch dup 0.330000 sub 0.280112 mul 0.980392 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.653595 mul 0.486275 add exch dup 0.400000 sub 1.176471 mul 0.176471 add exch dup 0.400000 sub -1.045752 mul 1.000000 add exch } if dup 0.430000 gt { exch pop exch pop exch pop dup 0.430000 sub -0.542986 mul 0.466667 add exch dup 0.430000 sub 0.904977 mul 0.211765 add exch dup 0.430000 sub -0.814480 mul 0.968627 add exch } if dup 0.560000 gt { exch pop exch pop exch pop dup 0.560000 sub -0.392157 mul 0.396078 add exch dup 0.560000 sub 0.672269 mul 0.329412 add exch dup 0.560000 sub -0.560224 mul 0.862745 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.653594 mul 0.368627 add exch dup 0.630000 sub 0.915032 mul 0.376471 add exch dup 0.630000 sub -0.261438 mul 0.823529 add exch } if dup 0.660000 gt { exch pop exch pop exch pop dup 0.660000 sub -0.392157 mul 0.349020 add exch dup 0.660000 sub 0.566449 mul 0.403922 add exch dup 0.660000 sub -0.217865 mul 0.815686 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.784313 mul 0.313726 add exch dup 0.750000 sub -0.313725 mul 0.454902 add exch dup 0.750000 sub -0.941176 mul 0.796078 add exch } if dup 0.800000 gt { exch pop exch pop exch pop dup 0.800000 sub -0.803922 mul 0.274510 add exch dup 0.800000 sub -0.294118 mul 0.439216 add exch dup 0.800000 sub -0.980392 mul 0.749020 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.113725 exch 0.380392 exch 0.552941 exch } if pop }
endstream
endobj

488 0 obj
  2878
endobj

489 0 obj
  << /Length 490 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.070588 exch 0.443137 exch 0.690196 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 1.176471 mul 0.070588 add exch dup 0.000000 sub 1.045752 mul 0.443137 add exch dup 0.000000 sub 2.026144 mul 0.690196 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.849673 mul 0.141176 add exch dup 0.060000 sub 0.653595 mul 0.505882 add exch dup 0.060000 sub 1.372549 mul 0.811765 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.522876 mul 0.192157 add exch dup 0.120000 sub 0.522876 mul 0.545098 add exch dup 0.120000 sub 1.045751 mul 0.894118 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.705882 mul 0.207843 add exch dup 0.150000 sub -0.705882 mul 0.560784 add exch dup 0.150000 sub 0.156863 mul 0.925490 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 1.045752 mul 0.243137 add exch dup 0.200000 sub -1.089325 mul 0.525490 add exch dup 0.200000 sub 0.261438 mul 0.933333 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 1.490196 mul 0.337255 add exch dup 0.290000 sub -1.607843 mul 0.427451 add exch dup 0.290000 sub 0.392157 mul 0.956863 add exch } if dup 0.390000 gt { exch pop exch pop exch pop dup 0.390000 sub 1.568627 mul 0.486275 add exch dup 0.390000 sub -1.568624 mul 0.266667 add exch dup 0.390000 sub 0.392156 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.672269 mul 0.501961 add exch dup 0.400000 sub 1.400560 mul 0.250980 add exch dup 0.400000 sub -0.504202 mul 1.000000 add exch } if dup 0.470000 gt { exch pop exch pop exch pop dup 0.470000 sub -0.627451 mul 0.454902 add exch dup 0.470000 sub 1.333333 mul 0.349020 add exch dup 0.470000 sub -0.470588 mul 0.964706 add exch } if dup 0.570000 gt { exch pop exch pop exch pop dup 0.570000 sub -0.392157 mul 0.392157 add exch dup 0.570000 sub 0.849674 mul 0.482353 add exch dup 0.570000 sub -0.326797 mul 0.917647 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.522876 mul 0.368627 add exch dup 0.630000 sub 1.045752 mul 0.533333 add exch dup 0.630000 sub -0.130719 mul 0.898039 add exch } if dup 0.690000 gt { exch pop exch pop exch pop dup 0.690000 sub -0.392157 mul 0.337255 add exch dup 0.690000 sub 0.849673 mul 0.596078 add exch dup 0.690000 sub -0.130719 mul 0.890196 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.002179 mul 0.313726 add exch dup 0.750000 sub -0.435730 mul 0.647059 add exch dup 0.750000 sub -1.263617 mul 0.882353 add exch } if dup 0.840000 gt { exch pop exch pop exch pop dup 0.840000 sub -1.004902 mul 0.223529 add exch dup 0.840000 sub -0.416667 mul 0.607843 add exch dup 0.840000 sub -1.225490 mul 0.768627 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.062745 exch 0.541176 exch 0.572549 exch } if pop }
endstream
endobj

490 0 obj
  2878
endobj

491 0 obj
  << /Length 492 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.098039 exch 0.384314 exch 0.666667 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.718954 mul 0.098039 add exch dup 0.000000 sub 1.830065 mul 0.384314 add exch dup 0.000000 sub 2.287582 mul 0.666667 add exch } if dup 0.060000 gt { exch pop exch pop exch pop dup 0.060000 sub 0.457516 mul 0.141176 add exch dup 0.060000 sub 1.241830 mul 0.494118 add exch dup 0.060000 sub 1.568627 mul 0.803922 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.392157 mul 0.168627 add exch dup 0.120000 sub 0.915032 mul 0.568627 add exch dup 0.120000 sub 1.176470 mul 0.898039 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.627451 mul 0.180392 add exch dup 0.150000 sub -0.705882 mul 0.596078 add exch dup 0.150000 sub 0.156863 mul 0.933333 add exch } if dup 0.200000 gt { exch pop exch pop exch pop dup 0.200000 sub 1.120448 mul 0.211765 add exch dup 0.200000 sub -1.400560 mul 0.560784 add exch dup 0.200000 sub 0.224090 mul 0.941176 add exch } if dup 0.270000 gt { exch pop exch pop exch pop dup 0.270000 sub 1.481481 mul 0.290196 add exch dup 0.270000 sub -1.786492 mul 0.462745 add exch dup 0.270000 sub 0.305011 mul 0.956863 add exch } if dup 0.360000 gt { exch pop exch pop exch pop dup 0.360000 sub 1.764706 mul 0.423529 add exch dup 0.360000 sub -2.156863 mul 0.301961 add exch dup 0.360000 sub 0.392157 mul 0.984314 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.588235 mul 0.494118 add exch dup 0.400000 sub 1.176471 mul 0.215686 add exch dup 0.400000 sub -0.653595 mul 1.000000 add exch } if dup 0.460000 gt { exch pop exch pop exch pop dup 0.460000 sub -0.606061 mul 0.458824 add exch dup 0.460000 sub 1.176471 mul 0.286275 add exch dup 0.460000 sub -0.641711 mul 0.960784 add exch } if dup 0.570000 gt { exch pop exch pop exch pop dup 0.570000 sub -0.392157 mul 0.392157 add exch dup 0.570000 sub 0.784314 mul 0.415686 add exch dup 0.570000 sub -0.457516 mul 0.890196 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.549019 mul 0.368627 add exch dup 0.630000 sub 0.941177 mul 0.462745 add exch dup 0.630000 sub -0.156863 mul 0.862745 add exch } if dup 0.680000 gt { exch pop exch pop exch pop dup 0.680000 sub -0.392157 mul 0.341176 add exch dup 0.680000 sub 0.728291 mul 0.509804 add exch dup 0.680000 sub -0.168067 mul 0.854902 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.952381 mul 0.313726 add exch dup 0.750000 sub -0.392157 mul 0.560784 add exch dup 0.750000 sub -1.176471 mul 0.843137 add exch } if dup 0.820000 gt { exch pop exch pop exch pop dup 0.820000 sub -0.893246 mul 0.247059 add exch dup 0.820000 sub -0.370371 mul 0.533333 add exch dup 0.820000 sub -1.089324 mul 0.760784 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.086275 exch 0.466667 exch 0.564706 exch } if pop }
endstream
endobj

492 0 obj
  2878
endobj

493 0 obj
  << /Length 494 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.207843 exch 0.109804 exch 0.556863 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -1.176471 mul 0.207843 add exch dup 0.000000 sub 4.803922 mul 0.109804 add exch dup 0.000000 sub 3.137255 mul 0.556863 add exch } if dup 0.040000 gt { exch pop exch pop exch pop dup 0.040000 sub -0.980392 mul 0.160784 add exch dup 0.040000 sub 3.970588 mul 0.301961 add exch dup 0.040000 sub 2.696078 mul 0.682353 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub -1.045751 mul 0.082353 add exch dup 0.120000 sub 4.183005 mul 0.619608 add exch dup 0.120000 sub 2.745097 mul 0.898039 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.784314 mul 0.050980 add exch dup 0.150000 sub -1.176471 mul 0.745098 add exch dup 0.150000 sub 0.000000 mul 0.980392 add exch } if dup 0.180000 gt { exch pop exch pop exch pop dup 0.180000 sub 1.176471 mul 0.074510 add exch dup 0.180000 sub -1.960784 mul 0.709804 add exch dup 0.180000 sub 0.078431 mul 0.980392 add exch } if dup 0.230000 gt { exch pop exch pop exch pop dup 0.230000 sub 1.568628 mul 0.133333 add exch dup 0.230000 sub -2.679739 mul 0.611765 add exch dup 0.230000 sub 0.065359 mul 0.984314 add exch } if dup 0.290000 gt { exch pop exch pop exch pop dup 0.290000 sub 2.222222 mul 0.227451 add exch dup 0.290000 sub -3.660131 mul 0.450980 add exch dup 0.290000 sub 0.130719 mul 0.988235 add exch } if dup 0.350000 gt { exch pop exch pop exch pop dup 0.350000 sub 2.039215 mul 0.360784 add exch dup 0.350000 sub -3.372548 mul 0.231373 add exch dup 0.350000 sub 0.078431 mul 0.996078 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.509804 mul 0.462745 add exch dup 0.400000 sub 0.352941 mul 0.062745 add exch dup 0.400000 sub -1.490196 mul 1.000000 add exch } if dup 0.500000 gt { exch pop exch pop exch pop dup 0.500000 sub -0.441177 mul 0.411765 add exch dup 0.500000 sub 0.343137 mul 0.098039 add exch dup 0.500000 sub -1.323530 mul 0.850980 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.235294 mul 0.376471 add exch dup 0.580000 sub 0.156863 mul 0.125490 add exch dup 0.580000 sub -0.784313 mul 0.745098 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.392157 mul 0.364706 add exch dup 0.630000 sub 0.000000 mul 0.133333 add exch dup 0.630000 sub -0.392157 mul 0.705882 add exch } if dup 0.640000 gt { exch pop exch pop exch pop dup 0.640000 sub -0.463458 mul 0.360784 add exch dup 0.640000 sub 0.249554 mul 0.133333 add exch dup 0.640000 sub -0.392157 mul 0.701961 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -0.486275 mul 0.309804 add exch dup 0.750000 sub -0.109804 mul 0.160784 add exch dup 0.750000 sub -0.549020 mul 0.658824 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.188235 exch 0.133333 exch 0.521569 exch } if pop }
endstream
endobj

494 0 obj
  2879
endobj

495 0 obj
  << /Length 496 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.007843 exch 0.596078 exch 0.752941 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 3.006536 mul 0.007843 add exch dup 0.000000 sub -1.307189 mul 0.596078 add exch dup 0.000000 sub 1.568627 mul 0.752941 add exch } if dup 0.030000 gt { exch pop exch pop exch pop dup 0.030000 sub 2.039216 mul 0.098039 add exch dup 0.030000 sub -0.862745 mul 0.556863 add exch dup 0.030000 sub 1.098039 mul 0.800000 add exch } if dup 0.080000 gt { exch pop exch pop exch pop dup 0.080000 sub 1.470589 mul 0.200000 add exch dup 0.080000 sub -0.686275 mul 0.513726 add exch dup 0.080000 sub 0.784314 mul 0.854902 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.784313 mul 0.258824 add exch dup 0.120000 sub -0.261438 mul 0.486275 add exch dup 0.120000 sub 0.392157 mul 0.886275 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.504202 mul 0.282353 add exch dup 0.150000 sub -0.336134 mul 0.478431 add exch dup 0.150000 sub 0.224090 mul 0.898039 add exch } if dup 0.220000 gt { exch pop exch pop exch pop dup 0.220000 sub 0.980392 mul 0.317647 add exch dup 0.220000 sub -0.588235 mul 0.454902 add exch dup 0.220000 sub 0.431373 mul 0.913725 add exch } if dup 0.320000 gt { exch pop exch pop exch pop dup 0.320000 sub 1.274510 mul 0.415686 add exch dup 0.320000 sub -0.735294 mul 0.396078 add exch dup 0.320000 sub 0.539216 mul 0.956863 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.697168 mul 0.517647 add exch dup 0.400000 sub 1.873639 mul 0.337255 add exch dup 0.400000 sub -0.043573 mul 1.000000 add exch } if dup 0.490000 gt { exch pop exch pop exch pop dup 0.490000 sub -0.653595 mul 0.454902 add exch dup 0.490000 sub 1.699347 mul 0.505882 add exch dup 0.490000 sub -0.087146 mul 0.996078 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.470588 mul 0.396078 add exch dup 0.580000 sub 1.176470 mul 0.658824 add exch dup 0.580000 sub 0.000000 mul 0.988235 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.560224 mul 0.372549 add exch dup 0.630000 sub 1.400560 mul 0.717647 add exch dup 0.630000 sub 0.000000 mul 0.988235 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -0.392157 mul 0.333333 add exch dup 0.700000 sub 1.019608 mul 0.815686 add exch dup 0.700000 sub 0.000000 mul 0.988235 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.274510 mul 0.313726 add exch dup 0.750000 sub -0.588235 mul 0.866667 add exch dup 0.750000 sub -1.633987 mul 0.988235 add exch } if dup 0.870000 gt { exch pop exch pop exch pop dup 0.870000 sub -1.176471 mul 0.160784 add exch dup 0.870000 sub -0.542986 mul 0.796078 add exch dup 0.870000 sub -1.508296 mul 0.792157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.007843 exch 0.725490 exch 0.596078 exch } if pop }
endstream
endobj

496 0 obj
  2878
endobj

497 0 obj
  << /Length 498 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.019608 exch 0.564706 exch 0.741176 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 2.549020 mul 0.019608 add exch dup 0.000000 sub -0.784314 mul 0.564706 add exch dup 0.000000 sub 1.764706 mul 0.741176 add exch } if dup 0.020000 gt { exch pop exch pop exch pop dup 0.020000 sub 2.196078 mul 0.070588 add exch dup 0.020000 sub -0.627451 mul 0.549020 add exch dup 0.020000 sub 1.333333 mul 0.776471 add exch } if dup 0.070000 gt { exch pop exch pop exch pop dup 0.070000 sub 1.254902 mul 0.180392 add exch dup 0.070000 sub -0.313726 mul 0.517647 add exch dup 0.070000 sub 0.862745 mul 0.843137 add exch } if dup 0.120000 gt { exch pop exch pop exch pop dup 0.120000 sub 0.784314 mul 0.243137 add exch dup 0.120000 sub -0.261439 mul 0.501961 add exch dup 0.120000 sub 0.522876 mul 0.886275 add exch } if dup 0.150000 gt { exch pop exch pop exch pop dup 0.150000 sub 0.588235 mul 0.266667 add exch dup 0.150000 sub -0.392157 mul 0.494118 add exch dup 0.150000 sub 0.261438 mul 0.901961 add exch } if dup 0.210000 gt { exch pop exch pop exch pop dup 0.210000 sub 0.980392 mul 0.301961 add exch dup 0.210000 sub -0.705882 mul 0.470588 add exch dup 0.210000 sub 0.352941 mul 0.917647 add exch } if dup 0.310000 gt { exch pop exch pop exch pop dup 0.310000 sub 1.307190 mul 0.400000 add exch dup 0.310000 sub -0.871460 mul 0.400000 add exch dup 0.310000 sub 0.522876 mul 0.952941 add exch } if dup 0.400000 gt { exch pop exch pop exch pop dup 0.400000 sub -0.697168 mul 0.517647 add exch dup 0.400000 sub 1.699346 mul 0.321569 add exch dup 0.400000 sub -0.130719 mul 1.000000 add exch } if dup 0.490000 gt { exch pop exch pop exch pop dup 0.490000 sub -0.653595 mul 0.454902 add exch dup 0.490000 sub 1.655774 mul 0.474510 add exch dup 0.490000 sub -0.174292 mul 0.988235 add exch } if dup 0.580000 gt { exch pop exch pop exch pop dup 0.580000 sub -0.470588 mul 0.396078 add exch dup 0.580000 sub 1.176470 mul 0.623529 add exch dup 0.580000 sub -0.078431 mul 0.972549 add exch } if dup 0.630000 gt { exch pop exch pop exch pop dup 0.630000 sub -0.560224 mul 0.372549 add exch dup 0.630000 sub 1.288515 mul 0.682353 add exch dup 0.630000 sub -0.056022 mul 0.968627 add exch } if dup 0.700000 gt { exch pop exch pop exch pop dup 0.700000 sub -0.392157 mul 0.333333 add exch dup 0.700000 sub 1.019608 mul 0.772549 add exch dup 0.700000 sub 0.000000 mul 0.964706 add exch } if dup 0.750000 gt { exch pop exch pop exch pop dup 0.750000 sub -1.247772 mul 0.313726 add exch dup 0.750000 sub -0.570410 mul 0.823529 add exch dup 0.750000 sub -1.604278 mul 0.964706 add exch } if dup 0.860000 gt { exch pop exch pop exch pop dup 0.860000 sub -1.120448 mul 0.176471 add exch dup 0.860000 sub -0.532213 mul 0.760784 add exch dup 0.860000 sub -1.400560 mul 0.788235 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.019608 exch 0.686275 exch 0.592157 exch } if pop }
endstream
endobj

498 0 obj
  2880
endobj

499 0 obj
  << /Type /XObject
     /Length 500 0 R
     /Group << /Type /Group
               /S /Transparency
               /I true
            >>
     /Subtype /Form
     /Resources << /ExtGState << /E51 << /ca 0.700000 >>
                                 /E55 << /ca 0.680000 >>
                                 /E54 << /ca 0.680000 >>
                                 /E49 << /ca 0.710000 >>
                                 /E47 << /ca 0.720000 >>
                                 /E40 << /ca 0.760000 >>
                                 /E8 << /ca 0.950000 >>
                                 /E41 << /ca 0.760000 >>
                                 /E50 << /ca 0.700000 >>
                                 /E57 << /ca 0.660000 >>
                                 /E61 << /ca 0.640000 >>
                                 /E26 << /ca 0.850000 >>
                                 /E52 << /ca 0.690000 >>
                                 /E59 << /ca 0.650000 >>
                                 /E48 << /ca 0.720000 >>
                                 /E53 << /ca 0.690000 >>
                                 /E43 << /ca 0.750000 >>
                                 /E27 << /ca 0.840000 >>
                                 /E42 << /ca 0.750000 >>
                                 /E45 << /ca 0.730000 >>
                                 /E25 << /ca 0.850000 >>
                                 /E58 << /ca 0.660000 >>
                                 /E38 << /ca 0.780000 >>
                                 /E44 << /ca 0.740000 >>
                                 /E37 << /ca 0.780000 >>
                                 /E36 << /ca 0.790000 >>
                                 /E39 << /ca 0.770000 >>
                                 /E33 << /ca 0.810000 >>
                                 /E30 << /ca 0.820000 >>
                                 /E19 << /ca 0.890000 >>
                                 /E18 << /ca 0.890000 >>
                                 /E15 << /ca 0.910000 >>
                                 /E46 << /ca 0.730000 >>
                                 /E28 << /ca 0.830000 >>
                                 /E7 << /ca 0.960000 >>
                                 /E23 << /ca 0.860000 >>
                                 /E20 << /ca 0.880000 >>
                                 /E14 << /ca 0.920000 >>
                                 /E29 << /ca 0.830000 >>
                                 /E31 << /ca 0.820000 >>
                                 /E17 << /ca 0.900000 >>
                                 /E11 << /ca 0.940000 >>
                                 /E22 << /ca 0.870000 >>
                                 /E1 << /ca 0.990000 >>
                                 /E12 << /ca 0.930000 >>
                                 /E21 << /ca 0.880000 >>
                                 /E5 << /ca 0.970000 >>
                                 /E35 << /ca 0.790000 >>
                                 /E34 << /ca 0.800000 >>
                                 /E24 << /ca 0.860000 >>
                                 /E13 << /ca 0.920000 >>
                                 /E6 << /ca 0.960000 >>
                                 /E16 << /ca 0.910000 >>
                                 /E2 << /ca 0.990000 >>
                                 /E9 << /ca 0.950000 >>
                                 /E4 << /ca 0.980000 >>
                                 /E32 << /ca 0.810000 >>
                                 /E56 << /ca 0.670000 >>
                                 /E3 << /ca 0.980000 >>
                                 /E60 << /ca 0.650000 >>
                                 /E10 << /ca 0.940000 >>
                              >>
                   /Pattern << /P56 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.851074 3.717304 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 379 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P55 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.851074 3.504658 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 381 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P48 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851074 2.055435 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 383 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P12 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851562 -3.634018 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 451 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P37 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851074 -0.122299 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 407 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P58 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851074 4.143326 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 375 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P57 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.851074 3.926289 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 377 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P25 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851562 -2.387924 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 387 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P47 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.850586 1.856216 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 389 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P10 << /Matrix [ 33.485573 0.000000 -0.000000 33.485573 10.851074 -3.548073 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 385 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P30 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.850586 -1.475811 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 413 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P27 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851562 -2.009018 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 435 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P44 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851562 1.276138 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 391 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P43 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.850586 1.074966 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 397 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P16 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.850586 -3.505108 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 395 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P54 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851074 3.303482 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 393 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P32 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851562 -1.071518 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 411 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P45 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.850586 1.481216 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 399 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P41 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.850586 0.678482 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 401 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P29 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851562 -1.702377 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 419 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P49 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.851074 2.268330 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 417 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P35 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851562 -0.512924 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 415 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P39 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.851074 0.215595 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 405 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P60 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.850586 4.528091 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 403 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P34 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851562 -0.714096 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 409 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P19 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851074 -3.475815 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 421 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P23 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.851074 -2.755108 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 423 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P28 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.851562 -1.827374 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 425 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P21 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.850586 -3.100815 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 427 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P22 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.850586 -2.917465 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 429 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P17 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.850586 -3.620342 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 433 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P59 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.850098 4.305435 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 431 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P36 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851562 -0.313705 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 437 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P38 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.851074 0.129658 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 439 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P26 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.850586 -2.202374 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 441 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P15 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.850586 -3.577377 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 443 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P2 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.851074 -3.591290 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 445 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P13 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.850586 -3.598862 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 449 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P62 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.850586 4.910904 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 447 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P50 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851074 2.469498 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 453 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P20 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851562 -3.284409 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 455 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P40 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.850586 0.475357 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 465 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P5 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.851074 -3.551983 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 467 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P9 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.851074 -3.544170 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 459 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P53 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.851074 3.086689 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 457 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P46 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851562 1.676529 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 461 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P1 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.851074 -3.602764 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 463 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P61 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.850586 4.740982 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 469 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P8 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.850586 -3.632065 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 471 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P52 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851074 2.823013 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 473 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P42 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.850586 0.871841 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 475 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P11 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.850586 -3.538315 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 477 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P14 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851074 -3.645737 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 479 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P33 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851562 -0.901596 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 481 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P7 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.851074 -3.577374 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 483 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P4 << /Matrix [ 33.485577 0.000000 -0.000000 33.485577 10.851074 -3.551983 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 485 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P31 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851562 -1.237534 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 487 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P18 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.849609 -3.573715 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 489 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P24 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.849609 -2.559799 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 491 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P51 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.851074 2.725357 ]
                                       /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                   /ColorSpace /DeviceRGB
                                                   /Function 493 0 R
                                                   /Domain [ 0.000000 1.000000 ]
                                                   /ShadingType 2
                                                   /Extend [ true true ]
                                                >>
                                       /PatternType 2
                                       /Type /Pattern
                                    >>
                               /P3 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.849121 -3.602768 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 495 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                               /P6 << /Matrix [ 33.485580 0.000000 -0.000000 33.485580 10.852051 -3.598862 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceRGB
                                                  /Function 497 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >>
                            >>
                >>
     /BBox [ 0.000000 0.000000 56.000000 56.000000 ]
  >>
stream
q
1.000000 0.000000 -0.000000 1.000000 10.847656 19.562500 cm
/Pattern cs
/P1 scn
24.325806 0.525928 m
21.567482 0.525928 18.400085 1.694707 14.870366 4.032269 c
10.592368 6.979114 5.341567 8.159916 0.213852 7.328231 c
0.190829 7.323627 0.167125 7.323604 0.144093 7.328160 c
0.121060 7.332716 0.099150 7.341765 0.079614 7.354789 c
0.060079 7.367813 0.043299 7.384556 0.030235 7.404065 c
0.017170 7.423573 0.008077 7.445463 0.003472 7.468486 c
-0.001132 7.491509 -0.001158 7.515214 0.003399 7.538247 c
0.007955 7.561279 0.017004 7.583188 0.030027 7.602724 c
0.043051 7.622260 0.059795 7.639038 0.079303 7.652102 c
0.098812 7.665167 0.120703 7.674263 0.143726 7.678867 c
1.656705 7.968384 3.202480 8.047048 4.737034 7.912622 c
8.431085 7.627809 11.987578 6.387265 15.057371 4.312777 c
20.164944 0.911624 24.407619 -0.000025 27.808773 1.601205 c
31.209927 3.202435 32.857910 7.024348 33.138416 10.144994 c
33.138416 10.191490 33.156887 10.236085 33.189766 10.268964 c
33.222645 10.301842 33.267235 10.320312 33.313732 10.320312 c
33.360229 10.320312 33.404823 10.301842 33.437702 10.268964 c
33.470577 10.236085 33.489048 10.191490 33.489048 10.144994 c
33.196854 6.919158 31.373556 2.945303 27.960716 1.309010 c
26.823780 0.776781 25.581038 0.509054 24.325806 0.525928 c
h
f
n
Q
q
/E1 gs
1.000000 0.000000 -0.000000 1.000000 10.926758 19.772705 cm
/Pattern cs
/P2 scn
24.316875 0.502512 m
21.581928 0.502512 18.472971 1.671293 14.966628 4.008855 c
12.831282 5.481456 10.424877 6.515569 7.886905 7.051251 c
5.348933 7.586934 2.729876 7.613531 0.181548 7.129501 c
0.142408 7.128109 0.103928 7.139863 0.072246 7.162889 c
0.040564 7.185915 0.017505 7.218886 0.006745 7.256545 c
-0.004014 7.294204 -0.001854 7.334380 0.012882 7.370668 c
0.027617 7.406956 0.054078 7.437264 0.088046 7.456760 c
1.620952 7.801208 3.196034 7.919338 4.763170 7.807394 c
8.480464 7.602086 12.072018 6.390088 15.153633 4.301051 c
20.156015 0.934961 24.387005 -0.000062 27.694654 1.542729 c
31.002304 3.085520 32.743790 6.848993 33.082737 9.946263 c
33.082737 9.992760 33.101208 10.037353 33.134087 10.070230 c
33.166962 10.103109 33.211552 10.121582 33.258049 10.121582 c
33.304546 10.121582 33.349140 10.103109 33.382019 10.070230 c
33.414898 10.037353 33.433369 9.992760 33.433369 9.946263 c
33.082733 6.755491 31.224375 2.828386 27.846598 1.262219 c
26.740532 0.751523 25.535105 0.492078 24.316875 0.502512 c
h
f
n
Q
q
/E2 gs
1.000000 0.000000 -0.000000 1.000000 10.854492 19.971436 cm
/Pattern cs
/P3 scn
24.457132 0.491000 m
21.733873 0.491000 18.613228 1.659781 15.106884 3.997343 c
12.951267 5.479446 10.514459 6.503472 7.947219 7.006063 c
5.379980 7.508656 2.736918 7.479123 0.181549 6.919296 c
0.142409 6.917904 0.103929 6.929658 0.072247 6.952683 c
0.040565 6.975709 0.017505 7.008681 0.006745 7.046340 c
-0.004014 7.083999 -0.001854 7.124175 0.012882 7.160463 c
0.027617 7.196751 0.054079 7.227059 0.088047 7.246555 c
1.642058 7.635571 3.244974 7.793105 4.844985 7.714067 c
8.606274 7.599716 12.256293 6.411432 15.364016 4.289538 c
20.284584 0.946825 24.433756 0.000113 27.718031 1.472776 c
31.002306 2.945440 32.790543 6.895920 33.152863 9.736058 c
33.152863 9.782555 33.171333 9.827149 33.204212 9.860028 c
33.237091 9.892906 33.281681 9.911377 33.328178 9.911377 c
33.374676 9.911377 33.419270 9.892906 33.452148 9.860028 c
33.485027 9.827149 33.503498 9.782555 33.503498 9.736058 c
33.129486 6.802418 31.423065 2.805187 27.858282 1.203958 c
26.790556 0.719794 25.629412 0.476392 24.457132 0.491000 c
h
f
n
Q
q
/E3 gs
1.000000 0.000000 -0.000000 1.000000 10.887695 20.209229 cm
/Pattern cs
/P4 scn
24.496288 0.455931 m
21.796404 0.455931 18.652384 1.624711 15.251231 3.962274 c
12.213816 6.058055 8.620901 7.201442 4.930894 7.246551 c
3.354022 7.277697 1.780504 7.088873 0.255770 6.685534 c
0.233560 6.674063 0.209153 6.667473 0.184188 6.666208 c
0.159223 6.664943 0.134276 6.669032 0.111020 6.678200 c
0.087764 6.687367 0.066738 6.701403 0.049352 6.719363 c
0.031965 6.737324 0.018621 6.758794 0.010213 6.782335 c
0.001806 6.805877 -0.001470 6.830944 0.000605 6.855855 c
0.002680 6.880766 0.010058 6.904947 0.022245 6.926772 c
0.034431 6.948598 0.051145 6.967566 0.071263 6.982402 c
0.091381 6.997238 0.114440 7.007600 0.138891 7.012794 c
1.714783 7.441992 3.344885 7.638865 4.977645 7.597184 c
8.737694 7.549514 12.398855 6.386077 15.496674 4.254469 c
20.276989 0.981882 24.367722 0.000106 27.605246 1.437707 c
30.842768 2.875308 32.689442 6.732285 33.098518 9.549048 c
33.098518 9.572071 33.103050 9.594868 33.111862 9.616138 c
33.120670 9.637409 33.133587 9.656736 33.149864 9.673017 c
33.166145 9.689296 33.185474 9.702210 33.206745 9.711020 c
33.228012 9.719831 33.250809 9.724365 33.273830 9.724365 c
33.296856 9.724365 33.319653 9.719831 33.340923 9.711020 c
33.362194 9.702210 33.381523 9.689296 33.397800 9.673017 c
33.414082 9.656736 33.426994 9.637409 33.435806 9.616138 c
33.444614 9.594868 33.449150 9.572071 33.449150 9.549048 c
33.016701 6.638783 31.263529 2.699991 27.745497 1.157200 c
26.721825 0.703569 25.615934 0.464887 24.496288 0.455931 c
h
f
n
Q
q
/E4 gs
1.000000 0.000000 -0.000000 1.000000 10.840820 20.443115 cm
/Pattern cs
/P5 scn
24.613169 0.409049 m
21.936659 0.409049 18.862766 1.577832 15.449925 3.973833 c
13.253911 5.475638 10.756375 6.479671 8.131924 6.915733 c
5.507472 7.351796 2.819445 7.209365 0.255771 6.498400 c
0.233561 6.486928 0.209154 6.480339 0.184189 6.479074 c
0.159224 6.477809 0.134277 6.481897 0.111021 6.491065 c
0.087765 6.500233 0.066739 6.514268 0.049353 6.532229 c
0.031966 6.550189 0.018622 6.571660 0.010214 6.595201 c
0.001807 6.618742 -0.001470 6.643809 0.000605 6.668720 c
0.002680 6.693632 0.010059 6.717811 0.022246 6.739636 c
0.034432 6.761461 0.051146 6.780429 0.071264 6.795265 c
0.091382 6.810102 0.114441 6.820466 0.138892 6.825659 c
1.734850 7.303868 3.393452 7.540246 5.059462 7.526926 c
8.844507 7.557150 12.546629 6.418350 15.660306 4.266028 c
20.335430 0.981753 24.414474 -0.000023 27.605247 1.344075 c
30.796021 2.688174 32.689445 6.521775 33.156960 9.315162 c
33.156960 9.361659 33.175430 9.406251 33.208309 9.439130 c
33.241184 9.472008 33.285782 9.490479 33.332275 9.490479 c
33.378773 9.490479 33.423363 9.472008 33.456242 9.439130 c
33.489120 9.406251 33.507591 9.361659 33.507591 9.315162 c
33.016705 6.428272 31.170034 2.536232 27.745504 1.075256 c
26.757412 0.642956 25.691668 0.416285 24.613169 0.409049 c
h
f
n
Q
q
/E5 gs
1.000000 0.000000 -0.000000 1.000000 10.830078 20.620605 cm
/Pattern cs
/P6 scn
24.694983 0.426654 m
22.030161 0.426654 18.991333 1.595436 15.601867 3.991437 c
13.380781 5.502213 10.849524 6.496351 8.193956 6.900855 c
5.538388 7.305359 2.825939 7.109958 0.255770 6.329000 c
0.233560 6.317529 0.209153 6.310939 0.184188 6.309674 c
0.159223 6.308410 0.134276 6.312498 0.111020 6.321666 c
0.087764 6.330833 0.066738 6.344869 0.049352 6.362829 c
0.031965 6.380790 0.018621 6.402261 0.010213 6.425802 c
0.001806 6.449343 -0.001470 6.474410 0.000605 6.499321 c
0.002680 6.524232 0.010058 6.548410 0.022245 6.570236 c
0.034431 6.592062 0.051145 6.611029 0.071263 6.625865 c
0.091381 6.640702 0.114440 6.651064 0.138891 6.656257 c
1.750894 7.182319 3.433996 7.458238 5.129588 7.474405 c
8.939139 7.574477 12.680020 6.447706 15.800560 4.260256 c
20.475685 0.999357 24.391100 0.005892 27.558498 1.291551 c
30.725895 2.577210 32.607632 6.212121 33.156960 9.122386 c
33.166260 9.168883 33.193649 9.209781 33.233105 9.236084 c
33.272556 9.262386 33.320843 9.271940 33.367340 9.262641 c
33.413837 9.253342 33.454735 9.225952 33.481037 9.186498 c
33.507343 9.147044 33.516891 9.098757 33.507595 9.052259 c
32.934891 6.060180 31.170033 2.366832 27.663689 0.975982 c
26.719706 0.600006 25.710997 0.413354 24.694983 0.426654 c
h
f
n
Q
q
/E6 gs
1.000000 0.000000 -0.000000 1.000000 10.817383 20.852539 cm
/Pattern cs
/P7 scn
24.776800 0.379835 m
22.135353 0.379835 19.119898 1.548618 15.753807 3.956307 c
12.682214 6.109274 8.981292 7.178431 5.234778 6.995138 c
3.539367 6.937211 1.861716 6.630034 0.255770 6.083488 c
0.233560 6.072017 0.209153 6.065428 0.184188 6.064163 c
0.159223 6.062898 0.134276 6.066986 0.111020 6.076154 c
0.087764 6.085322 0.066739 6.099357 0.049353 6.117318 c
0.031966 6.135278 0.018621 6.156749 0.010213 6.180290 c
0.001806 6.203831 -0.001470 6.228898 0.000605 6.253809 c
0.002680 6.278720 0.010058 6.302899 0.022245 6.324725 c
0.034431 6.346550 0.051145 6.365518 0.071263 6.380354 c
0.091381 6.395190 0.114440 6.405554 0.138891 6.410748 c
1.768583 6.977533 3.475089 7.292821 5.199715 7.345772 c
9.040378 7.544677 12.837377 6.454531 15.987564 4.248502 c
20.534122 1.022666 24.426165 0.005827 27.546810 1.233047 c
30.667456 2.460267 32.607632 6.036737 33.203709 8.911939 c
33.213009 8.958436 33.240398 8.999333 33.279854 9.025636 c
33.319309 9.051939 33.367596 9.061491 33.414093 9.052192 c
33.460590 9.042892 33.501488 9.015505 33.527790 8.976050 c
33.554092 8.936597 33.563644 8.888309 33.554344 8.841812 c
32.923203 5.873108 31.053152 2.238198 27.710438 0.905787 c
26.775562 0.543151 25.779428 0.364560 24.776800 0.379835 c
h
f
n
Q
q
/E7 gs
1.000000 0.000000 -0.000000 1.000000 10.847656 21.019775 cm
/Pattern cs
/P8 scn
24.815928 0.356605 m
22.197857 0.356605 19.194090 1.525385 15.863065 3.933074 c
12.778523 6.106417 9.037644 7.146926 5.273909 6.878403 c
3.557158 6.793284 1.862965 6.450505 0.248151 5.861563 c
0.204754 5.842964 0.155746 5.842367 0.111908 5.859902 c
0.068070 5.877437 0.032993 5.911670 0.014394 5.955068 c
-0.004205 5.998465 -0.004802 6.047472 0.012733 6.091310 c
0.030268 6.135147 0.064499 6.170223 0.107896 6.188822 c
1.764421 6.790998 3.501809 7.141627 5.262222 7.229036 c
9.106799 7.509919 12.929252 6.443765 16.073446 4.213582 c
20.526501 1.034497 24.348415 0.005971 27.433996 1.163064 c
30.519579 2.320158 32.483131 5.838187 33.137650 8.690013 c
33.146950 8.736509 33.174339 8.777410 33.213791 8.803713 c
33.253246 8.830015 33.301533 8.839567 33.348030 8.830268 c
33.394527 8.820968 33.435425 8.793578 33.461727 8.754125 c
33.488029 8.714670 33.497581 8.666384 33.488281 8.619886 c
32.798702 5.674559 30.881899 2.098089 27.550873 0.835805 c
26.676615 0.508637 25.749340 0.346166 24.815928 0.356605 c
h
f
n
Q
q
/E8 gs
1.000000 0.000000 -0.000000 1.000000 10.847656 21.270020 cm
/Pattern cs
/P9 scn
24.886930 0.352678 m
22.280548 0.352678 19.311842 1.521461 16.015881 3.940838 c
12.919758 6.139774 9.137844 7.155748 5.356599 6.804350 c
3.605794 6.668491 1.884678 6.274643 0.249026 5.635570 c
0.227589 5.625985 0.204445 5.620806 0.180967 5.620337 c
0.157490 5.619868 0.134157 5.624120 0.112355 5.632841 c
0.090552 5.641562 0.070723 5.654573 0.054046 5.671104 c
0.037368 5.687634 0.024182 5.707347 0.015269 5.729072 c
0.005684 5.750508 0.000504 5.773654 0.000035 5.797132 c
-0.000434 5.820609 0.003818 5.843942 0.012539 5.865744 c
0.021260 5.887547 0.034272 5.907373 0.050803 5.924050 c
0.067334 5.940728 0.087046 5.953916 0.108771 5.962829 c
1.783062 6.608018 3.543617 7.001878 5.333223 7.131610 c
9.194734 7.489714 13.056385 6.448602 16.214573 4.197969 c
20.574127 1.042260 24.396044 0.002046 27.376434 1.112388 c
31.350290 2.538301 32.799580 7.119922 33.138527 8.487395 c
33.138985 8.515802 33.145905 8.543732 33.158772 8.569062 c
33.171638 8.594394 33.190105 8.616462 33.212772 8.633589 c
33.235443 8.650716 33.261715 8.662451 33.289600 8.667907 c
33.317482 8.673362 33.346241 8.672394 33.373692 8.665073 c
33.401142 8.657753 33.426563 8.644274 33.448029 8.625660 c
33.469494 8.607045 33.486431 8.583784 33.497562 8.557644 c
33.508694 8.531505 33.513718 8.503172 33.512264 8.474798 c
33.510807 8.446424 33.502907 8.418756 33.489159 8.393893 c
33.126835 6.991356 31.630796 2.269480 27.493311 0.773440 c
26.655323 0.483766 25.773500 0.341408 24.886930 0.352678 c
h
f
n
Q
q
/E9 gs
1.000000 0.000000 -0.000000 1.000000 10.836914 21.514893 cm
/Pattern cs
/P10 scn
24.967871 0.305809 m
22.384865 0.305809 19.439535 1.474593 16.166948 3.893970 c
13.059277 6.110367 9.242530 7.100972 5.449226 6.675668 c
3.662836 6.520712 1.909712 6.099174 0.248150 5.425072 c
0.204753 5.406473 0.155745 5.405876 0.111907 5.423411 c
0.068069 5.440947 0.032993 5.475177 0.014394 5.518575 c
-0.004204 5.561972 -0.004803 5.610979 0.012733 5.654817 c
0.030268 5.698654 0.064500 5.733733 0.107897 5.752332 c
1.815641 6.438484 3.615630 6.867801 5.449226 7.026301 c
9.329832 7.454304 13.232233 6.439181 16.412392 4.174477 c
20.643377 1.030455 24.336727 0.001927 27.340494 1.030455 c
31.244223 2.374553 32.775326 6.874361 33.184399 8.253523 c
33.185345 8.280115 33.192333 8.306143 33.204834 8.329635 c
33.217331 8.353127 33.235008 8.373466 33.256535 8.389110 c
33.278061 8.404753 33.302864 8.415292 33.329067 8.419927 c
33.355270 8.424562 33.382183 8.423173 33.407768 8.415863 c
33.433353 8.408552 33.456944 8.395514 33.476742 8.377735 c
33.496540 8.359957 33.512028 8.337904 33.522041 8.313250 c
33.532051 8.288595 33.536320 8.261985 33.534519 8.235436 c
33.532722 8.208888 33.524902 8.183099 33.511658 8.160020 c
33.125957 6.769171 31.536417 2.105732 27.480747 0.691507 c
26.670420 0.423998 25.821123 0.293641 24.967871 0.305809 c
h
f
n
Q
q
/E10 gs
1.000000 0.000000 -0.000000 1.000000 10.847656 21.723389 cm
/Pattern cs
/P11 scn
25.026308 0.282399 m
22.466679 0.282399 19.533039 1.451180 16.295515 3.882244 c
13.177527 6.119898 9.324047 7.085357 5.519352 6.582128 c
3.704268 6.389815 1.927817 5.928961 0.248151 5.214654 c
0.204754 5.196055 0.155746 5.195458 0.111908 5.212993 c
0.068070 5.230528 0.032993 5.264759 0.014394 5.308156 c
-0.004205 5.351553 -0.004802 5.400560 0.012733 5.444398 c
0.030268 5.488236 0.064499 5.523314 0.107896 5.541913 c
1.810069 6.254235 3.604351 6.722477 5.437538 6.932761 c
9.329479 7.435941 13.267554 6.446203 16.459143 4.162751 c
20.643379 1.077169 24.266600 0.001889 27.223616 0.983665 c
30.952026 2.222573 32.576633 6.348372 33.067520 8.054792 c
33.068466 8.081385 33.075455 8.107412 33.087955 8.130904 c
33.100452 8.154396 33.118130 8.174735 33.139656 8.190379 c
33.161182 8.206022 33.185986 8.216561 33.212189 8.221196 c
33.238392 8.225831 33.265305 8.224442 33.290890 8.217133 c
33.316475 8.209822 33.340065 8.196783 33.359863 8.179005 c
33.379662 8.161226 33.395149 8.139174 33.405163 8.114519 c
33.415173 8.089865 33.419445 8.063254 33.417645 8.036706 c
33.415848 8.010158 33.408024 7.984368 33.394779 7.961290 c
32.857140 6.184743 31.185783 1.942068 27.305429 0.656408 c
26.569576 0.414865 25.800766 0.288702 25.026308 0.282399 c
h
f
n
Q
q
/E11 gs
1.000000 0.000000 -0.000000 1.000000 10.878906 21.909912 cm
/Pattern cs
/P12 scn
25.078190 0.296460 m
22.530247 0.296460 19.619982 1.465243 16.405834 3.896308 c
13.268579 6.135617 9.381346 7.062346 5.571235 6.479313 c
3.729665 6.245695 1.930995 5.749782 0.229905 5.006649 c
0.190815 4.993841 0.148468 4.995185 0.110271 5.010447 c
0.072073 5.025709 0.040457 5.053915 0.020956 5.090133 c
0.001454 5.126349 -0.004692 5.168272 0.003593 5.208563 c
0.011878 5.248854 0.034066 5.284948 0.066276 5.310532 c
1.799835 6.086062 3.639553 6.598187 5.524483 6.829946 c
9.430576 7.409243 13.408759 6.445090 16.616215 4.141751 c
20.718637 1.091232 24.271730 0.004266 27.193684 0.927603 c
30.700026 2.037945 32.418133 5.742981 33.119404 7.846786 c
33.138882 7.884501 33.171383 7.913867 33.210873 7.929435 c
33.250366 7.945002 33.294159 7.945714 33.334137 7.931437 c
33.374111 7.917160 33.407547 7.888865 33.428242 7.851802 c
33.448936 7.814741 33.455482 7.771430 33.446663 7.729908 c
32.733707 5.602726 30.980534 1.804188 27.298874 0.635407 c
26.580214 0.410049 25.831356 0.295749 25.078190 0.296460 c
h
f
n
Q
q
/E12 gs
1.000000 0.000000 -0.000000 1.000000 10.877930 22.167236 cm
/Pattern cs
/P13 scn
25.148315 0.226234 m
22.612061 0.226234 19.736862 1.395014 16.557777 3.837766 c
14.998530 4.961340 13.231689 5.764104 11.359762 6.199482 c
9.487834 6.634861 7.548085 6.694187 5.653049 6.374021 c
3.776799 6.114694 1.949275 5.579042 0.229905 4.784481 c
0.190815 4.771673 0.148468 4.773017 0.110271 4.788279 c
0.072073 4.803541 0.040457 4.831747 0.020956 4.867965 c
0.001454 4.904181 -0.004692 4.946102 0.003593 4.986392 c
0.011878 5.026683 0.034066 5.062780 0.066276 5.088364 c
1.818201 5.903640 3.681176 6.455049 5.594610 6.724657 c
7.536867 7.051386 9.524668 6.989242 11.442724 6.541830 c
13.360780 6.094417 15.170918 5.270640 16.768156 4.118276 c
20.765387 1.091133 24.260042 0.004165 27.146931 0.869063 c
30.653275 1.897591 32.371384 5.544188 33.119404 7.624619 c
33.138882 7.662333 33.171383 7.691699 33.210873 7.707267 c
33.250366 7.722834 33.294159 7.723546 33.334137 7.709269 c
33.374111 7.694992 33.407547 7.666697 33.428242 7.629634 c
33.448936 7.592573 33.455482 7.549262 33.446663 7.507740 c
32.675270 5.368871 30.851969 1.605396 27.240435 0.495054 c
26.559740 0.304704 25.855022 0.214154 25.148315 0.226234 c
h
f
n
Q
q
/E13 gs
1.000000 0.000000 -0.000000 1.000000 10.936523 22.342529 cm
/Pattern cs
/P14 scn
25.218445 0.202759 m
22.705566 0.202759 19.853739 1.371541 16.698030 3.814293 c
15.132528 4.949730 13.351442 5.753159 11.464152 6.175236 c
9.576862 6.597313 7.623209 6.629131 5.723176 6.268734 c
3.819008 5.969394 1.968531 5.394564 0.229906 4.562313 c
0.190817 4.549505 0.148468 4.550849 0.110271 4.566111 c
0.072073 4.581373 0.040457 4.609579 0.020956 4.645797 c
0.001454 4.682014 -0.004692 4.723936 0.003593 4.764227 c
0.011878 4.804518 0.034066 4.840612 0.066276 4.866196 c
1.840395 5.722131 3.730620 6.312826 5.676425 6.619367 c
7.622675 6.982995 9.622662 6.945614 11.553965 6.509513 c
13.485268 6.073412 15.307257 5.247766 16.908411 4.083113 c
20.823828 1.102721 24.260042 0.004067 27.088493 0.798838 c
30.314329 1.710487 32.149315 4.901259 33.119404 7.402451 c
33.138882 7.440165 33.171383 7.469531 33.210873 7.485099 c
33.250366 7.500666 33.294167 7.501378 33.334141 7.487101 c
33.374115 7.472824 33.407551 7.444529 33.428246 7.407466 c
33.448940 7.370405 33.455482 7.327094 33.446663 7.285572 c
32.453201 4.702566 30.548084 1.441667 27.193684 0.459890 c
26.550041 0.284680 25.885492 0.198171 25.218445 0.202759 c
h
f
n
Q
q
/E14 gs
1.000000 0.000000 -0.000000 1.000000 10.854492 22.607422 cm
/Pattern cs
/P15 scn
25.300262 0.168510 m
22.799070 0.168510 19.970619 1.337290 16.838287 3.791730 c
15.264082 4.929573 13.469173 5.725374 11.568980 6.127957 c
9.668787 6.530540 7.705371 6.530994 5.804991 6.129292 c
3.869268 5.790181 1.991934 5.176211 0.229906 4.305995 c
0.190817 4.293187 0.148468 4.294531 0.110271 4.309793 c
0.072073 4.325055 0.040457 4.353261 0.020956 4.389479 c
0.001454 4.425695 -0.004692 4.467618 0.003593 4.507909 c
0.011878 4.548200 0.034066 4.584294 0.066276 4.609878 c
1.860011 5.502922 3.773109 6.132749 5.746553 6.479928 c
7.705676 6.898884 9.731133 6.899952 11.690697 6.483067 c
13.650261 6.066181 15.499874 5.240715 17.118793 4.060552 c
20.952396 1.115223 24.318485 0.004881 27.111872 0.741213 c
29.648127 1.419106 31.693495 3.593037 33.189533 7.192883 c
33.208134 7.236280 33.243210 7.270513 33.287048 7.288048 c
33.330887 7.305583 33.379894 7.304986 33.423290 7.286387 c
33.466690 7.267788 33.500919 7.232710 33.518456 7.188872 c
33.535992 7.145034 33.535389 7.096027 33.516792 7.052630 c
31.974001 3.347594 29.846821 1.115222 27.205376 0.402266 c
26.583233 0.241690 25.942770 0.163107 25.300262 0.168510 c
h
f
n
Q
q
/E15 gs
1.000000 0.000000 -0.000000 1.000000 10.877930 22.901855 cm
/Pattern cs
/P16 scn
25.370388 0.074909 m
22.892572 0.074909 20.075808 1.243689 16.978537 3.686441 c
15.407536 4.848249 13.604890 5.658339 11.693043 6.061682 c
9.781196 6.465025 7.804933 6.452174 5.898493 6.024003 c
3.925623 5.652748 2.016500 4.999316 0.229905 4.083827 c
0.190815 4.071019 0.148468 4.072363 0.110271 4.087625 c
0.072073 4.102887 0.040457 4.131096 0.020956 4.167313 c
0.001454 4.203530 -0.004692 4.245450 0.003593 4.285741 c
0.011878 4.326032 0.034066 4.362126 0.066276 4.387710 c
1.878921 5.319909 3.815199 5.988949 5.816679 6.374639 c
7.771024 6.821222 9.798397 6.843651 11.762146 6.440418 c
13.725894 6.037184 15.580380 5.217658 17.200605 4.037076 c
20.940706 1.126812 24.213293 0.004781 26.994993 0.682674 c
29.472809 1.313816 31.541548 3.417623 33.119404 6.970717 c
33.138000 7.014114 33.173077 7.048345 33.216915 7.065880 c
33.260754 7.083416 33.309761 7.082818 33.353161 7.064219 c
33.396557 7.045620 33.430786 7.010544 33.448322 6.966707 c
33.465858 6.922869 33.465263 6.873859 33.446663 6.830462 c
31.810371 3.172178 29.671501 0.986558 27.076807 0.343729 c
26.520267 0.188625 25.947657 0.098420 25.370388 0.074909 c
h
f
n
Q
q
/E16 gs
1.000000 0.000000 -0.000000 1.000000 10.877930 23.008545 cm
/Pattern cs
/P17 scn
25.440512 0.156869 m
22.986071 0.156869 20.192686 1.325648 17.118792 3.780088 c
15.536137 4.943939 13.717217 5.746059 11.790535 6.129780 c
9.863853 6.513501 7.876413 6.469461 5.968619 6.000774 c
3.968506 5.588338 2.036570 4.895831 0.229905 3.943719 c
0.190815 3.930912 0.148468 3.932256 0.110271 3.947518 c
0.072073 3.962780 0.040457 3.990986 0.020956 4.027203 c
0.001454 4.063420 -0.004692 4.105340 0.003593 4.145631 c
0.011878 4.185922 0.034066 4.222018 0.066276 4.247602 c
1.902516 5.227202 3.870897 5.935819 5.910181 6.351408 c
7.872251 6.823399 9.914042 6.858680 11.891247 6.454757 c
13.868452 6.050833 15.732808 5.217565 17.352547 4.013845 c
21.010832 1.138644 24.248354 0.004927 26.959927 0.636069 c
29.414366 1.208772 31.436361 3.207387 33.131092 6.748793 c
33.149693 6.792191 33.184769 6.826421 33.228607 6.843956 c
33.272442 6.861492 33.321449 6.860894 33.364845 6.842296 c
33.408241 6.823697 33.442478 6.788620 33.460014 6.744783 c
33.477547 6.700945 33.476948 6.651936 33.458351 6.608539 c
32.815521 5.264441 30.851967 1.185395 27.041740 0.297122 c
26.515858 0.184286 25.978003 0.137176 25.440512 0.156869 c
h
f
n
Q
q
/E17 gs
1.000000 0.000000 -0.000000 1.000000 10.811523 23.093994 cm
/Pattern cs
/P18 scn
25.587709 0.266718 m
23.144957 0.266718 20.374945 1.435498 17.336115 3.889938 c
15.745573 5.064240 13.911486 5.866126 11.969387 6.236339 c
10.027287 6.606551 8.026821 6.535627 6.115816 6.028807 c
4.072443 5.592381 2.103720 4.860017 0.271910 3.854876 c
0.251956 3.842597 0.229780 3.834368 0.206647 3.830659 c
0.183513 3.826951 0.159876 3.827834 0.137084 3.833261 c
0.114293 3.838687 0.092793 3.848550 0.073813 3.862286 c
0.054833 3.876021 0.038745 3.893361 0.026466 3.913314 c
0.014187 3.933267 0.005958 3.955445 0.002249 3.978578 c
-0.001459 4.001711 -0.000575 4.025349 0.004852 4.048141 c
0.010278 4.070932 0.020141 4.092431 0.033877 4.111411 c
0.047612 4.130391 0.064952 4.146480 0.084905 4.158759 c
1.941348 5.174863 3.932519 5.922535 5.998937 6.379442 c
7.969766 6.892499 10.030691 6.956157 12.029428 6.565716 c
14.028165 6.175274 15.913627 5.340713 17.546495 4.123694 c
21.134653 1.283557 24.302050 0.138151 26.966871 0.710854 c
30.169331 1.400434 32.051071 4.439266 33.196476 6.671638 c
33.222061 6.703847 33.258152 6.726036 33.298443 6.734320 c
33.338734 6.742605 33.380657 6.736458 33.416878 6.716957 c
33.453094 6.697455 33.481297 6.665841 33.496559 6.627643 c
33.511822 6.589445 33.513165 6.547098 33.500359 6.508009 c
32.331577 4.170447 30.379713 1.096553 27.036999 0.371908 c
26.559219 0.283826 26.073200 0.248551 25.587709 0.266718 c
h
f
n
Q
q
/E18 gs
1.000000 0.000000 -0.000000 1.000000 10.894531 22.973633 cm
/Pattern cs
/P19 scn
25.576023 0.574761 m
23.156647 0.574761 20.410009 1.743541 17.394554 4.209669 c
13.666142 7.201748 9.213086 6.979681 6.115816 6.266724 c
4.067990 5.765055 2.100797 4.978178 0.271910 3.929162 c
0.251957 3.916883 0.229780 3.908656 0.206647 3.904947 c
0.183514 3.901239 0.159876 3.902122 0.137085 3.907549 c
0.091055 3.918508 0.051264 3.947305 0.026466 3.987602 c
0.001668 4.027900 -0.006107 4.076396 0.004852 4.122426 c
0.015812 4.168456 0.044608 4.208247 0.084905 4.233045 c
1.962697 5.292327 3.981495 6.079383 6.080753 6.570607 c
9.236462 7.306940 13.818084 7.529009 17.663374 4.455114 c
21.169718 1.650039 24.266987 0.492945 26.885056 1.018897 c
29.970638 1.626663 31.864063 4.431739 33.161411 6.804365 c
33.186993 6.836574 33.223091 6.858762 33.263382 6.867047 c
33.303673 6.875332 33.345592 6.869185 33.381809 6.849683 c
33.418026 6.830182 33.446236 6.798568 33.461498 6.760370 c
33.476757 6.722172 33.478104 6.679822 33.465294 6.640734 c
32.086136 4.244732 30.134268 1.346156 26.908432 0.738389 c
26.470407 0.642198 26.024307 0.587415 25.576023 0.574761 c
h
f
n
Q
q
/E19 gs
1.000000 0.000000 -0.000000 1.000000 10.790039 23.060059 cm
/Pattern cs
/P20 scn
25.763025 0.651745 m
23.355335 0.651745 20.632074 1.820528 17.581556 4.286655 c
13.864833 7.302110 9.400090 7.021602 6.244381 6.273582 c
4.147684 5.758181 2.136190 4.943349 0.271909 3.854205 c
0.251956 3.841926 0.229779 3.833697 0.206646 3.829989 c
0.183513 3.826280 0.159875 3.827166 0.137084 3.832592 c
0.091054 3.843552 0.051264 3.872348 0.026465 3.912646 c
0.001667 3.952943 -0.006107 4.001440 0.004852 4.047470 c
0.015812 4.093500 0.044607 4.133290 0.084904 4.158089 c
1.983927 5.249506 4.025459 6.071626 6.150879 6.600842 c
10.744188 7.769622 14.764793 7.021602 17.838688 4.555474 c
21.251528 1.797151 24.302048 0.628370 26.885054 1.049131 c
30.274519 1.668585 32.249760 5.058050 33.196472 6.682655 c
33.221272 6.722953 33.261059 6.751750 33.307091 6.762709 c
33.329880 6.768136 33.353519 6.769019 33.376652 6.765310 c
33.399784 6.761602 33.421963 6.753373 33.441917 6.741094 c
33.461868 6.728815 33.479210 6.712726 33.492943 6.693746 c
33.506680 6.674766 33.516544 6.653266 33.521969 6.630475 c
33.527397 6.607683 33.528282 6.584046 33.524574 6.560913 c
33.520866 6.537779 33.512634 6.515604 33.500355 6.495651 c
32.518578 4.835982 30.496586 1.353013 26.943491 0.710184 c
26.552404 0.656899 26.157463 0.637348 25.763025 0.651745 c
h
f
n
Q
q
/E20 gs
1.000000 0.000000 -0.000000 1.000000 10.847656 23.320068 cm
/Pattern cs
/P21 scn
25.774717 0.614949 m
23.437155 0.614949 20.690517 1.783729 17.721813 4.261545 c
14.016777 7.300375 9.540345 6.973118 6.326197 6.166659 c
4.198855 5.610209 2.160669 4.756373 0.271910 3.630404 c
0.251957 3.618125 0.229780 3.609896 0.206647 3.606188 c
0.183514 3.602479 0.159876 3.603363 0.137085 3.608789 c
0.091055 3.619749 0.051264 3.648545 0.026466 3.688842 c
0.001668 3.729140 -0.006107 3.777639 0.004852 3.823669 c
0.015812 3.869699 0.044608 3.909489 0.084905 3.934288 c
2.005008 5.072348 4.074103 5.937748 6.232695 6.505605 c
10.907819 7.674386 14.916739 7.008182 17.920506 4.530366 c
21.263220 1.807106 24.243610 0.626637 26.779865 1.024023 c
29.830385 1.526599 31.665375 4.109603 33.138039 6.482228 c
33.162838 6.522526 33.202625 6.551322 33.248653 6.562282 c
33.271446 6.567708 33.295082 6.568594 33.318218 6.564886 c
33.341351 6.561177 33.363529 6.552948 33.383480 6.540669 c
33.403435 6.528390 33.420773 6.512301 33.434509 6.493321 c
33.448246 6.474341 33.458107 6.452842 33.463535 6.430050 c
33.468960 6.407259 33.469849 6.383621 33.466137 6.360488 c
33.462429 6.337355 33.454197 6.315177 33.441921 6.295224 c
32.343266 4.530364 30.297901 1.257778 26.838308 0.685075 c
26.486252 0.633028 26.130560 0.609576 25.774717 0.614949 c
h
f
n
Q
q
/E21 gs
1.000000 0.000000 -0.000000 1.000000 10.847656 23.485352 cm
/Pattern cs
/P22 scn
25.856529 0.647952 m
23.518967 0.647952 20.807392 1.816732 17.873753 4.294547 c
14.168715 7.356753 9.587095 6.971057 6.408010 6.117847 c
4.246839 5.529893 2.180640 4.636508 0.271910 3.464714 c
0.251957 3.452435 0.229780 3.444206 0.206647 3.440497 c
0.183514 3.436789 0.159876 3.437672 0.137085 3.443099 c
0.091055 3.454058 0.051264 3.482855 0.026466 3.523152 c
0.001668 3.563449 -0.006107 3.611949 0.004852 3.657979 c
0.015812 3.704008 0.044608 3.743799 0.084905 3.768597 c
2.024704 4.945094 4.116889 5.849609 6.302820 6.456793 c
10.977944 7.719076 15.068678 7.064558 18.095821 4.563366 c
21.356720 1.875170 24.266985 0.694701 26.768177 1.057024 c
29.970638 1.536223 31.899126 4.423113 33.173096 6.339914 c
33.188332 6.355464 33.206516 6.367818 33.226585 6.376251 c
33.246655 6.384685 33.268208 6.389027 33.289978 6.389027 c
33.311749 6.389027 33.333294 6.384685 33.353363 6.376251 c
33.373436 6.367818 33.391621 6.355464 33.406853 6.339914 c
33.435604 6.307771 33.451496 6.266160 33.451496 6.223035 c
33.451496 6.179912 33.435604 6.138302 33.406853 6.106159 c
32.097820 4.130919 30.122581 1.162216 26.756491 0.659640 c
26.456913 0.640064 26.156515 0.636162 25.856529 0.647952 c
h
f
n
Q
q
/E22 gs
1.000000 0.000000 -0.000000 1.000000 10.836914 23.655762 cm
/Pattern cs
/P23 scn
25.937613 0.662694 m
23.600050 0.662694 20.935230 1.889914 18.024965 4.320978 c
14.331617 7.406560 9.714932 6.974111 6.489097 6.062461 c
4.302790 5.428989 2.214350 4.496862 0.282869 3.292452 c
0.243818 3.270473 0.197833 3.264282 0.154360 3.275150 c
0.110887 3.286018 0.073227 3.313120 0.049113 3.350890 c
0.033564 3.366125 0.021210 3.384310 0.012777 3.404379 c
0.004344 3.424448 0.000000 3.445999 0.000000 3.467768 c
0.000000 3.489537 0.004344 3.511088 0.012777 3.531158 c
0.021210 3.551227 0.033564 3.569412 0.049113 3.584647 c
2.005360 4.808754 4.121390 5.756641 6.337155 6.401409 c
11.129157 7.733819 15.231579 7.067613 18.305473 4.589797 c
21.379368 2.111981 24.348070 0.744507 26.790823 1.083454 c
29.923155 1.492527 31.816584 4.192411 33.207432 6.155964 c
33.235329 6.193161 33.276859 6.217753 33.322891 6.224329 c
33.368919 6.230905 33.415676 6.218926 33.452877 6.191028 c
33.490074 6.163130 33.514668 6.121597 33.521244 6.075567 c
33.527817 6.029538 33.515839 5.982782 33.487942 5.945585 c
32.143845 4.040472 30.098476 1.153581 26.825890 0.732820 c
26.532528 0.682629 26.235216 0.659158 25.937613 0.662694 c
h
f
n
Q
q
/E23 gs
1.000000 0.000000 -0.000000 1.000000 10.856445 23.843018 cm
/Pattern cs
/P24 scn
25.998627 0.665444 m
23.661064 0.665444 21.031307 1.904352 18.144417 4.335416 c
14.462757 7.444374 9.799321 6.953486 6.538422 5.995086 c
4.328756 5.317418 2.218361 4.350645 0.262067 3.119885 c
0.224869 3.095087 0.179345 3.086081 0.135507 3.094848 c
0.091669 3.103616 0.053109 3.129438 0.028311 3.166635 c
0.003513 3.203833 -0.005493 3.249358 0.003274 3.293195 c
0.012042 3.337033 0.037865 3.375594 0.075062 3.400393 c
2.051671 4.669590 4.195599 5.656977 6.444920 6.334033 c
11.236922 7.748258 15.362720 7.152178 18.366488 4.604236 c
21.370255 2.056293 24.268833 0.782321 26.676521 1.097892 c
29.715353 1.436839 31.643843 4.008157 33.046379 5.878207 c
33.163258 6.030149 l
33.191154 6.067348 33.232685 6.091939 33.278713 6.098515 c
33.301506 6.101771 33.324718 6.100506 33.347019 6.094792 c
33.369324 6.089078 33.390282 6.079025 33.408699 6.065212 c
33.427116 6.051398 33.442638 6.034092 33.454369 6.014282 c
33.466099 5.994471 33.473812 5.972545 33.477066 5.949753 c
33.480324 5.926962 33.479057 5.903751 33.473343 5.881448 c
33.467628 5.859146 33.457581 5.838187 33.443764 5.819769 c
33.326885 5.667826 l
31.889284 3.739337 29.902359 1.109581 26.723274 0.747259 c
26.484081 0.702101 26.241865 0.674755 25.998627 0.665444 c
h
f
n
Q
q
/E24 gs
1.000000 0.000000 -0.000000 1.000000 10.828125 24.026611 cm
/Pattern cs
/P25 scn
26.087198 0.677627 m
23.749636 0.677627 21.213379 1.846408 18.314800 4.347599 c
14.644828 7.491621 9.946328 6.942294 6.626990 5.925454 c
4.385781 5.220044 2.250772 4.213485 0.280508 2.933375 c
0.243310 2.905477 0.196554 2.893497 0.150524 2.900072 c
0.104495 2.906648 0.062962 2.931240 0.035064 2.968437 c
0.007165 3.005635 -0.004813 3.052392 0.001763 3.098422 c
0.008338 3.144451 0.032930 3.185984 0.070128 3.213882 c
2.073281 4.517010 4.243518 5.543153 6.521800 6.264400 c
11.372241 7.748751 15.509727 7.176049 18.525183 4.616418 c
21.540638 2.056788 24.298962 0.817880 26.706650 1.110075 c
29.663666 1.390583 31.603844 3.845024 33.029755 5.621571 c
33.216763 5.867016 l
33.244659 5.904213 33.286190 5.928803 33.332218 5.935379 c
33.378250 5.941955 33.425007 5.929976 33.462204 5.902078 c
33.499401 5.874180 33.523994 5.832647 33.530571 5.786617 c
33.537148 5.740587 33.525169 5.693832 33.497269 5.656635 c
33.298576 5.411190 l
31.837599 3.576203 29.792231 1.063324 26.741713 0.736065 c
26.524847 0.703998 26.306313 0.684486 26.087198 0.677627 c
h
f
n
Q
q
/E25 gs
1.000000 0.000000 -0.000000 1.000000 10.885742 24.159424 cm
/Pattern cs
/P26 scn
26.110571 0.722244 m
23.773008 0.722244 21.271814 1.891024 18.408300 4.403903 c
14.738328 7.571301 10.004766 6.963535 6.720490 5.899944 c
4.446248 5.151841 2.280842 4.106472 0.280508 2.790987 c
0.243310 2.763089 0.196554 2.751110 0.150524 2.757686 c
0.104495 2.764262 0.062962 2.788851 0.035064 2.826049 c
0.007165 2.863246 -0.004813 2.910004 0.001763 2.956033 c
0.008338 3.002063 0.032929 3.043596 0.070127 3.071494 c
2.085178 4.415593 4.270615 5.484727 6.568550 6.250577 c
11.454055 7.816744 15.626602 7.267416 18.630369 4.672723 c
21.634136 2.078029 24.240519 0.920937 26.601458 1.107942 c
29.476658 1.330010 31.358397 3.562381 32.866123 5.362304 c
33.146633 5.689563 l
33.185379 5.729860 33.238544 5.753116 33.294437 5.754212 c
33.350330 5.755308 33.404373 5.734154 33.444668 5.695406 c
33.484966 5.656659 33.508221 5.603492 33.509319 5.547599 c
33.510414 5.491705 33.489262 5.437665 33.450516 5.397368 c
33.181694 5.070108 l
31.709032 3.328625 29.675352 0.932624 26.671585 0.698868 c
26.484259 0.692765 26.296740 0.700579 26.110571 0.722244 c
h
f
n
Q
q
/E26 gs
1.000000 0.000000 -0.000000 1.000000 10.851562 21.646973 cm
/Pattern cs
/P27 scn
26.227451 3.445683 m
24.182085 3.445683 21.692579 4.415771 18.583622 7.127343 c
14.925336 10.318115 10.109958 9.663597 6.790619 8.553255 c
4.485628 7.769917 2.296082 6.681043 0.280509 5.315733 c
0.243311 5.287835 0.196554 5.275854 0.150524 5.282430 c
0.104495 5.289006 0.062963 5.313598 0.035065 5.350795 c
0.007166 5.387993 -0.004813 5.434750 0.001763 5.480780 c
0.008338 5.526809 0.032930 5.568342 0.070128 5.596240 c
2.115733 6.979367 4.336468 8.083838 6.673741 8.880514 c
11.617685 10.516809 15.813612 10.049295 18.817379 7.384474 c
26.484583 0.687358 30.154556 4.801468 32.842754 7.805236 c
33.205074 8.202621 l
33.243820 8.239820 33.295761 8.260100 33.349464 8.259005 c
33.403164 8.257909 33.454231 8.235526 33.491428 8.196779 c
33.528625 8.158031 33.548904 8.106092 33.547810 8.052391 c
33.546715 7.998690 33.524330 7.947624 33.485580 7.910426 c
33.134949 7.513041 l
31.498655 5.783245 29.406536 3.445683 26.227451 3.445683 c
h
f
n
Q
q
/E27 gs
1.000000 0.000000 -0.000000 1.000000 10.851562 21.957275 cm
/Pattern cs
/P28 scn
26.309263 3.312294 m
24.030140 3.312294 21.528950 4.539515 18.723875 7.017331 c
15.077278 10.231479 10.261898 9.518521 6.872433 8.361428 c
4.536698 7.539155 2.320126 6.411220 0.280509 5.007028 c
0.243311 4.979130 0.196554 4.967149 0.150524 4.973725 c
0.104495 4.980300 0.062963 5.004892 0.035065 5.042090 c
0.007166 5.079288 -0.004813 5.126045 0.001763 5.172074 c
0.008338 5.218104 0.032930 5.259637 0.070128 5.287535 c
2.139418 6.710183 4.387269 7.853757 6.755555 8.688688 c
11.746250 10.406796 15.953863 9.939282 18.957630 7.274462 c
26.402765 0.705913 30.072737 4.597955 32.749245 7.438092 c
33.181698 7.893917 l
33.220444 7.934214 33.273609 7.957469 33.329502 7.958565 c
33.385395 7.959661 33.439438 7.938507 33.479733 7.899759 c
33.520031 7.861012 33.543285 7.807845 33.544384 7.751952 c
33.545479 7.696059 33.524326 7.642018 33.485580 7.601721 c
33.053131 7.145897 l
31.709032 5.719984 30.049364 3.955124 27.770241 3.417485 c
27.288967 3.325943 26.798687 3.290643 26.309263 3.312294 c
h
f
n
Q
q
/E28 gs
1.000000 0.000000 -0.000000 1.000000 10.851562 24.653564 cm
/Pattern cs
/P29 scn
26.402763 0.799146 m
24.392460 0.799146 21.938023 1.769234 18.864128 4.515870 c
15.229218 7.753393 10.378778 6.993685 6.942562 5.778153 c
4.577077 4.908031 2.336989 3.729039 0.280509 2.271810 c
0.243311 2.243912 0.196554 2.231934 0.150524 2.238509 c
0.104495 2.245085 0.062963 2.269677 0.035065 2.306874 c
0.007166 2.344072 -0.004813 2.390827 0.001763 2.436856 c
0.008338 2.482886 0.032930 2.524419 0.070128 2.552317 c
2.157502 4.013893 4.429060 5.192902 6.825683 6.058661 c
11.874818 7.846895 16.175932 7.391071 19.097885 4.726251 c
22.323721 1.851049 25.093731 0.717331 27.583235 1.219907 c
29.722105 1.664044 31.288271 3.241899 32.679123 4.632748 c
33.181698 5.147010 l
33.214245 5.187308 33.261467 5.213026 33.312977 5.218505 c
33.364483 5.223985 33.416061 5.208779 33.456356 5.176231 c
33.496655 5.143683 33.522373 5.096459 33.527855 5.044950 c
33.533333 4.993441 33.518127 4.941865 33.485580 4.901567 c
32.971317 4.398991 l
31.288271 2.809449 29.301340 0.799146 26.402763 0.799146 c
h
f
n
Q
q
/E29 gs
1.000000 0.000000 -0.000000 1.000000 10.838867 22.554443 cm
/Pattern cs
/P30 scn
26.484581 3.100292 m
24.228834 3.100292 21.809458 4.269073 19.004381 6.817016 c
15.381161 10.089602 10.483968 9.271456 7.024375 7.985796 c
4.629805 7.088418 2.362679 5.882166 0.280508 4.397639 c
0.243310 4.369741 0.196554 4.357763 0.150524 4.364338 c
0.104495 4.370914 0.062962 4.395504 0.035064 4.432701 c
0.007165 4.469899 -0.004813 4.516656 0.001763 4.562685 c
0.008338 4.608716 0.032929 4.650248 0.070127 4.678146 c
2.182528 6.180270 4.480819 7.402097 6.907497 8.313056 c
12.003383 10.183105 16.257746 9.750654 19.249825 7.062458 c
26.262512 0.727665 29.768858 4.070381 32.608997 6.746889 c
33.193386 7.296216 l
33.212574 7.316169 33.235497 7.332148 33.260857 7.343240 c
33.286221 7.354332 33.313515 7.360322 33.341190 7.360865 c
33.368866 7.361407 33.396381 7.356493 33.422161 7.346403 c
33.447937 7.336313 33.471470 7.321244 33.491425 7.302058 c
33.511375 7.282873 33.527355 7.259946 33.538448 7.234585 c
33.549538 7.209224 33.555531 7.181927 33.556072 7.154251 c
33.556614 7.126575 33.551701 7.099062 33.541611 7.073286 c
33.531525 7.047509 33.516453 7.023973 33.497269 7.004020 c
32.924564 6.466382 l
31.524975 4.883938 29.692432 3.746215 27.653362 3.193794 c
27.267994 3.122722 26.876348 3.091391 26.484581 3.100292 c
h
f
n
Q
q
/E30 gs
1.000000 0.000000 -0.000000 1.000000 10.851562 25.088379 cm
/Pattern cs
/P31 scn
26.578083 0.749517 m
24.334023 0.749517 21.902958 1.976737 19.156322 4.466241 c
15.533102 7.773891 10.612534 6.897306 7.117878 5.635022 c
4.689424 4.693104 2.391606 3.444035 0.280509 1.918298 c
0.243311 1.890400 0.196554 1.878422 0.150524 1.884997 c
0.104495 1.891573 0.062963 1.916165 0.035065 1.953362 c
0.007166 1.990560 -0.004813 2.037317 0.001763 2.083347 c
0.008338 2.129377 0.032930 2.170907 0.070128 2.198806 c
2.205660 3.744712 4.531126 5.009578 6.989312 5.962282 c
12.131948 7.890770 16.421375 7.481697 19.390079 4.793501 c
22.358784 2.105304 25.070353 0.843019 27.466354 1.228717 c
29.415827 1.730500 31.180384 2.781121 32.550556 4.255860 c
33.193382 4.828563 l
33.241428 4.867311 33.302902 4.885384 33.364277 4.878808 c
33.425648 4.872232 33.481892 4.841547 33.520641 4.793501 c
33.559387 4.745454 33.577465 4.683982 33.570889 4.622609 c
33.564312 4.561236 33.533627 4.504989 33.485580 4.466241 c
32.842751 3.893539 l
31.433332 2.360311 29.604374 1.275129 27.583235 0.772893 c
27.249302 0.738967 26.913231 0.731151 26.578083 0.749517 c
h
f
n
Q
q
/E31 gs
1.000000 0.000000 -0.000000 1.000000 10.851562 23.180908 cm
/Pattern cs
/P32 scn
26.671585 2.868775 m
24.684658 2.868775 22.300346 3.827177 19.296579 6.597188 c
15.685046 9.928213 10.717725 9.004876 7.199694 7.637402 c
4.739532 6.659240 2.414335 5.370955 0.280509 3.803799 c
0.243311 3.775901 0.196554 3.763923 0.150524 3.770498 c
0.104495 3.777074 0.062963 3.801666 0.035065 3.838863 c
0.007166 3.876061 -0.004813 3.922818 0.001763 3.968848 c
0.008338 4.014877 0.032930 4.056410 0.070128 4.084309 c
2.232512 5.671735 4.589232 6.975786 7.082815 7.964662 c
12.283891 9.974965 16.596695 9.589266 19.553711 6.854319 c
26.192387 0.741593 29.546787 3.593421 32.515491 6.117988 c
33.216763 6.714066 l
33.239017 6.731717 33.264534 6.744811 33.291851 6.752602 c
33.319164 6.760392 33.347748 6.762726 33.375965 6.759470 c
33.404182 6.756214 33.431484 6.747433 33.456306 6.733626 c
33.481133 6.719819 33.502995 6.701258 33.520645 6.679002 c
33.538296 6.656746 33.551392 6.631232 33.559185 6.603915 c
33.566975 6.576599 33.569305 6.548017 33.566051 6.519798 c
33.562794 6.491580 33.554012 6.464280 33.540203 6.439455 c
33.526398 6.414631 33.507839 6.392770 33.485580 6.375118 c
32.772625 5.790728 l
31.077892 4.423254 29.207842 2.868775 26.671585 2.868775 c
h
f
n
Q
q
/E32 gs
1.000000 0.000000 -0.000000 1.000000 10.828125 23.455811 cm
/Pattern cs
/P33 scn
26.788464 2.748706 m
24.567780 2.748706 22.113338 3.987615 19.460205 6.500495 c
15.860360 9.866585 10.857977 8.838057 7.293195 7.470583 c
4.801400 6.443660 2.446002 5.112861 0.280508 3.508415 c
0.243310 3.480517 0.196554 3.468536 0.150524 3.475112 c
0.104495 3.481688 0.062962 3.506280 0.035064 3.543478 c
0.007165 3.580675 -0.004813 3.627432 0.001763 3.673462 c
0.008338 3.719491 0.032930 3.761024 0.070128 3.788922 c
2.249264 5.414055 4.625151 6.757118 7.141254 7.786154 c
12.389081 9.878273 16.725258 9.515949 19.682276 6.757626 c
26.122259 0.750091 29.476664 3.438288 32.433678 5.810914 c
33.205074 6.418680 l
33.242271 6.446579 33.289024 6.458557 33.335056 6.451982 c
33.381084 6.445406 33.422619 6.420814 33.450520 6.383616 c
33.478416 6.346418 33.490395 6.299662 33.483818 6.253632 c
33.477242 6.207602 33.452648 6.166071 33.415451 6.138173 c
32.655746 5.530406 l
31.205669 4.131095 29.384169 3.177750 27.407917 2.783770 c
27.202211 2.760966 26.995428 2.749260 26.788464 2.748706 c
h
f
n
Q
q
/E33 gs
1.000000 0.000000 -0.000000 1.000000 10.851562 25.606689 cm
/Pattern cs
/P34 scn
26.858595 0.772294 m
24.895042 0.772294 22.557478 1.742381 19.577087 4.547456 c
15.988929 7.936922 10.951480 6.885019 7.351634 5.435730 c
4.834668 4.374320 2.459414 3.004131 0.280509 1.356684 c
0.243311 1.328786 0.196554 1.316805 0.150524 1.323381 c
0.104495 1.329957 0.062963 1.354548 0.035065 1.391746 c
0.007166 1.428944 -0.004813 1.475701 0.001763 1.521730 c
0.008338 1.567760 0.032930 1.609293 0.070128 1.637191 c
2.268208 3.306340 4.667444 4.692476 7.211381 5.762987 c
12.517648 7.913545 16.877201 7.586287 19.822529 4.804587 c
22.767859 2.022888 25.093735 0.959298 27.337795 1.157991 c
29.223404 1.490580 30.974995 2.354211 32.386929 3.647494 c
33.205074 4.266949 l
33.223492 4.280763 33.244453 4.290813 33.266758 4.296527 c
33.289059 4.302240 33.312267 4.303506 33.335056 4.300250 c
33.357849 4.296994 33.379780 4.289281 33.399590 4.277551 c
33.419399 4.265821 33.436707 4.250303 33.450520 4.231884 c
33.464333 4.213466 33.474384 4.192508 33.480099 4.170205 c
33.485813 4.147902 33.487076 4.124692 33.483822 4.101900 c
33.480564 4.079108 33.472851 4.057182 33.461121 4.037372 c
33.449394 4.017561 33.433872 4.000256 33.415455 3.986442 c
32.597309 3.378675 l
30.937641 2.116391 29.161095 0.772294 26.858595 0.772294 c
h
f
n
Q
q
/E34 gs
1.000000 0.000000 -0.000000 1.000000 10.851562 23.984863 cm
/Pattern cs
/P35 scn
26.952095 2.590422 m
25.000231 2.590422 22.674356 3.548821 19.729027 6.365583 c
16.152557 9.790112 11.068357 8.703146 7.433448 7.172043 c
4.887651 6.068943 2.485660 4.659931 0.280509 2.976120 c
0.243311 2.948221 0.196554 2.936241 0.150524 2.942816 c
0.104495 2.949392 0.062963 2.973984 0.035065 3.011181 c
0.007166 3.048379 -0.004813 3.095136 0.001763 3.141166 c
0.008338 3.187195 0.032930 3.228728 0.070128 3.256627 c
2.294460 4.962095 4.720420 6.387050 7.293196 7.499300 c
9.341664 8.413571 11.549346 8.917845 13.791618 8.983653 c
14.923407 9.018754 16.051012 8.830365 17.109924 8.429262 c
18.168837 8.028159 19.138277 7.422214 19.962784 6.646091 c
26.063822 0.802186 29.313034 3.139748 32.340176 5.301993 c
33.216763 5.909760 l
33.235180 5.922039 33.255836 5.930568 33.277550 5.934864 c
33.299267 5.939159 33.321617 5.939136 33.343323 5.934794 c
33.365028 5.930453 33.385670 5.921881 33.404060 5.909564 c
33.422455 5.897246 33.438240 5.881426 33.450520 5.863008 c
33.462799 5.844589 33.471329 5.823933 33.475628 5.802217 c
33.479923 5.780502 33.479897 5.758153 33.475555 5.736447 c
33.471214 5.714741 33.462643 5.694101 33.450325 5.675708 c
33.438007 5.657316 33.422188 5.641529 33.403767 5.629251 c
32.538868 5.021486 l
30.914263 3.829329 29.172779 2.590422 26.952095 2.590422 c
h
f
n
Q
q
/E35 gs
1.000000 0.000000 -0.000000 1.000000 10.851562 24.242432 cm
/Pattern cs
/P36 scn
27.057283 2.507482 m
24.871662 2.507482 22.510725 3.758077 19.869280 6.306020 c
16.304499 9.753924 11.185237 8.643581 7.515264 7.042351 c
4.934752 5.904370 2.504753 4.451869 0.280509 2.717863 c
0.243311 2.689964 0.196554 2.677984 0.150524 2.684559 c
0.104495 2.691135 0.062963 2.715727 0.035065 2.752924 c
0.007166 2.790122 -0.004813 2.836879 0.001763 2.882909 c
0.008338 2.928938 0.032930 2.970471 0.070128 2.998370 c
2.315388 4.748115 4.769096 6.212487 7.375010 7.357923 c
9.431237 8.308996 11.656166 8.841390 13.920183 8.924089 c
15.056081 8.964238 16.188633 8.778266 17.252045 8.376979 c
18.315456 7.975691 19.288527 7.367089 20.114723 6.586527 c
26.040443 0.824437 29.219528 2.974994 32.316799 5.032048 c
33.228447 5.639815 l
33.248398 5.652094 33.270576 5.660321 33.293709 5.664029 c
33.316841 5.667738 33.340481 5.666854 33.363274 5.661428 c
33.386063 5.656001 33.407562 5.646138 33.426544 5.632402 c
33.445522 5.618668 33.461613 5.601328 33.473892 5.581375 c
33.486172 5.561421 33.494400 5.539246 33.498108 5.516113 c
33.501816 5.492980 33.500931 5.469342 33.495502 5.446550 c
33.490078 5.423759 33.480213 5.402259 33.466476 5.383279 c
33.452744 5.364299 33.435402 5.348210 33.415451 5.335932 c
32.503803 4.739853 l
31.014307 3.523811 29.211189 2.753941 27.302727 2.519170 c
27.057283 2.507482 l
h
f
n
Q
q
/E36 gs
1.000000 0.000000 -0.000000 1.000000 10.838867 26.024902 cm
/Pattern cs
/P37 scn
0.187455 0.900305 m
0.135056 0.901633 0.085040 0.922472 0.047202 0.958743 c
0.016728 0.994650 0.000000 1.040215 0.000000 1.087310 c
-0.000000 1.134405 0.016728 1.179969 0.047202 1.215877 c
2.327523 2.998709 4.810942 4.505239 7.445584 5.703996 c
9.513901 6.675945 11.754416 7.228127 14.037511 7.328601 c
15.176824 7.383801 16.315359 7.204850 17.382803 6.802800 c
18.450247 6.400750 19.423935 5.784136 20.243738 4.991038 c
22.838432 2.443096 25.140930 1.227563 27.256424 1.262627 c
29.102343 1.443712 30.860109 2.140340 32.328934 3.272932 c
33.275646 3.857322 l
33.315945 3.882120 33.364441 3.889894 33.410469 3.878935 c
33.456501 3.867975 33.496292 3.839179 33.521091 3.798882 c
33.545891 3.758584 33.553665 3.710087 33.542706 3.664057 c
33.531746 3.618028 33.502949 3.578237 33.462654 3.553438 c
32.515938 2.969048 l
30.989227 1.780286 29.149580 1.061483 27.221361 0.900305 c
25.281185 0.900305 22.990374 1.858706 20.068420 4.722219 c
16.562078 8.228562 11.349314 7.001342 7.655965 5.376736 c
5.047862 4.201867 2.594425 2.710178 0.351085 0.935369 c
0.303201 0.902792 0.244484 0.890208 0.187455 0.900305 c
h
f
n
Q
q
/E37 gs
1.000000 0.000000 -0.000000 1.000000 10.838867 24.790771 cm
/Pattern cs
/P38 scn
0.187455 2.136756 m
0.135056 2.138084 0.085040 2.158923 0.047202 2.195194 c
0.016728 2.231102 0.000000 2.276666 0.000000 2.323761 c
-0.000000 2.370856 0.016728 2.416420 0.047202 2.452328 c
2.350531 4.295456 4.865615 5.857083 7.539089 7.104075 c
9.622690 8.103039 11.882284 8.682829 14.189451 8.810495 c
15.331715 8.877326 16.475294 8.703816 17.546326 8.301173 c
18.617357 7.898530 19.592022 7.275706 20.407366 6.472933 c
26.029203 0.909535 29.056345 2.697772 32.258804 4.602885 c
33.240582 5.163899 l
33.279671 5.176707 33.322021 5.175363 33.360218 5.160101 c
33.398415 5.144839 33.430031 5.116632 33.449532 5.080416 c
33.469032 5.044198 33.475178 5.002276 33.466892 4.961986 c
33.458607 4.921695 33.436420 4.885600 33.404209 4.860016 c
32.445808 4.299002 l
30.935392 3.202420 29.152008 2.543253 27.291487 2.393887 c
25.339622 2.393887 23.072187 3.352289 20.161922 6.227490 c
16.655581 9.733833 11.431129 8.483237 7.691030 6.811880 c
5.052659 5.593618 2.572222 4.059044 0.304334 2.241947 c
0.279508 2.193802 0.237940 2.156391 0.187455 2.136756 c
h
f
n
Q
q
/E38 gs
1.000000 0.000000 -0.000000 1.000000 10.853516 24.514404 cm
/Pattern cs
/P39 scn
0.173019 2.413115 m
0.137977 2.413575 0.103876 2.424525 0.075118 2.444554 c
0.046361 2.464584 0.024266 2.492772 0.011685 2.525482 c
-0.000895 2.558191 -0.003383 2.593919 0.004541 2.628057 c
0.012465 2.662195 0.030438 2.693175 0.056140 2.716999 c
2.379018 4.568700 4.913534 6.138060 7.606467 7.392123 c
9.698426 8.423931 11.975255 9.027907 14.303582 9.168671 c
15.450331 9.245566 16.600283 9.076819 17.676592 8.673707 c
18.752903 8.270595 19.730780 7.642402 20.544872 6.831109 c
23.046064 4.318229 25.219995 3.126071 27.241987 3.079320 c
29.030989 3.177497 30.758089 3.768029 32.232681 4.785742 c
33.226143 5.323380 l
33.265232 5.336187 33.307583 5.334843 33.345779 5.319581 c
33.383980 5.304319 33.415592 5.276113 33.435093 5.239896 c
33.454597 5.203679 33.460739 5.161757 33.452457 5.121466 c
33.444172 5.081175 33.421982 5.045081 33.389774 5.019496 c
32.408001 4.481858 l
29.088663 2.646872 25.956327 0.905387 20.299427 6.585663 c
16.793083 10.092007 11.521883 8.818035 7.758408 7.088240 c
5.091376 5.833271 2.584058 4.263744 0.289898 2.413115 c
0.252267 2.398726 0.210650 2.398726 0.173019 2.413115 c
h
f
n
Q
q
/E39 gs
1.000000 0.000000 -0.000000 1.000000 10.841797 24.774414 cm
/Pattern cs
/P40 scn
0.183965 2.152278 m
0.135119 2.154205 0.088970 2.175182 0.055400 2.210717 c
0.037988 2.226072 0.024043 2.244957 0.014491 2.266116 c
0.004940 2.287275 0.000000 2.310225 0.000000 2.333440 c
0.000000 2.356655 0.004940 2.379603 0.014491 2.400762 c
0.024043 2.421921 0.037988 2.440806 0.055400 2.456162 c
2.397727 4.373666 4.959760 6.005835 7.687540 7.318291 c
9.794213 8.376884 12.090860 9.004686 14.443095 9.164965 c
15.590548 9.249589 16.742706 9.084436 17.820183 8.680887 c
18.897659 8.277337 19.874838 7.644986 20.684385 6.827403 c
26.025715 1.404259 28.865849 2.900299 32.231937 4.618407 c
33.225403 5.120983 l
33.264492 5.133791 33.306843 5.132446 33.345039 5.117185 c
33.383240 5.101923 33.414852 5.073714 33.434353 5.037497 c
33.453857 5.001280 33.459999 4.959360 33.451717 4.919069 c
33.443432 4.878778 33.421242 4.842684 33.389034 4.817100 c
32.395573 4.314524 l
29.087921 2.596416 25.955587 0.971810 20.438942 6.581960 c
16.932598 10.158429 11.638019 8.790955 7.839480 7.014407 c
5.144273 5.712583 2.610334 4.100431 0.289156 2.210717 c
0.262788 2.178583 0.225179 2.157690 0.183965 2.152278 c
h
f
n
Q
q
/E40 gs
1.000000 0.000000 -0.000000 1.000000 10.841797 25.059326 cm
/Pattern cs
/P41 scn
0.183965 1.869011 m
0.135119 1.870938 0.088970 1.891914 0.055400 1.927449 c
0.037988 1.942804 0.024043 1.961689 0.014491 1.982849 c
0.004940 2.004008 0.000000 2.026958 0.000000 2.050173 c
0.000000 2.073388 0.004940 2.096335 0.014491 2.117495 c
0.024043 2.138653 0.037988 2.157539 0.055400 2.172894 c
2.424921 4.131875 5.018213 5.803195 7.781042 7.151901 c
9.899134 8.236977 12.210932 8.892384 14.583347 9.080390 c
15.734825 9.170859 16.892160 9.008516 17.974308 8.604730 c
19.056456 8.200944 20.037251 7.565476 20.848013 6.742828 c
26.049089 1.389811 28.924292 2.768972 32.267006 4.405266 c
33.248779 4.872777 l
33.292179 4.891376 33.341187 4.891973 33.385025 4.874438 c
33.428864 4.856904 33.463940 4.822672 33.482536 4.779275 c
33.501137 4.735878 33.501732 4.686871 33.484196 4.643034 c
33.466660 4.599195 33.432430 4.564119 33.389034 4.545520 c
32.418949 4.089694 l
28.959356 2.383274 25.967274 0.992426 20.637632 6.485697 c
17.131289 10.097230 11.813336 8.671316 7.979735 6.836330 c
5.256330 5.492623 2.695628 3.841697 0.347595 1.915763 c
0.327232 1.893713 0.301196 1.877687 0.272336 1.869441 c
0.243476 1.861196 0.212904 1.861046 0.183965 1.869011 c
h
f
n
Q
q
/E41 gs
1.000000 0.000000 -0.000000 1.000000 10.841797 25.240967 cm
/Pattern cs
/P42 scn
0.183965 1.687814 m
0.135119 1.689741 0.088970 1.710718 0.055400 1.746253 c
0.037988 1.761608 0.024043 1.780493 0.014491 1.801652 c
0.004940 1.822811 0.000000 1.845761 0.000000 1.868976 c
0.000000 1.892191 0.004940 1.915139 0.014491 1.936298 c
0.024043 1.957457 0.037988 1.976342 0.055400 1.991698 c
2.449518 3.987552 5.065305 5.701342 7.851168 7.099270 c
9.977987 8.213819 12.307134 8.889510 14.700226 9.086198 c
15.854416 9.188260 17.016832 9.031363 18.102663 8.626957 c
19.188494 8.222551 20.170345 7.580837 20.976580 6.748636 c
26.060778 1.442370 28.819099 2.681279 32.325443 4.235757 c
33.283844 4.656519 l
33.327240 4.675118 33.376247 4.675715 33.420086 4.658180 c
33.463924 4.640645 33.499001 4.606412 33.517601 4.563015 c
33.536198 4.519618 33.536793 4.470611 33.519257 4.426773 c
33.501724 4.382935 33.467491 4.347858 33.424095 4.329260 c
32.465694 3.908498 l
28.959352 2.365707 26.014029 1.021610 20.777889 6.503193 c
17.271545 10.138103 11.941902 8.665438 8.061549 6.783700 c
5.306314 5.399956 2.718210 3.705925 0.347595 1.734567 c
0.327232 1.712516 0.301196 1.696490 0.272336 1.688245 c
0.243476 1.679999 0.212904 1.679850 0.183965 1.687814 c
h
f
n
Q
q
/E42 gs
1.000000 0.000000 -0.000000 1.000000 10.841797 25.514160 cm
/Pattern cs
/P43 scn
0.183965 1.412359 m
0.135119 1.414286 0.088970 1.435262 0.055400 1.470797 c
0.037988 1.486152 0.024043 1.505037 0.014491 1.526196 c
0.004940 1.547356 0.000000 1.570305 0.000000 1.593521 c
0.000000 1.616735 0.004940 1.639683 0.014491 1.660842 c
0.024043 1.682001 0.037988 1.700887 0.055400 1.716242 c
2.470558 3.756277 5.114062 5.509461 7.932982 6.940692 c
10.060063 8.078460 12.392244 8.781691 14.793728 9.009436 c
15.950594 9.123599 17.118259 8.972397 18.207890 8.567330 c
19.297518 8.162264 20.280405 7.514004 21.081770 6.671873 c
26.095840 1.424047 28.819099 2.557764 32.325443 4.042116 c
33.237091 4.416126 l
33.280487 4.434724 33.329498 4.435321 33.373333 4.417787 c
33.417171 4.400251 33.452248 4.366020 33.470848 4.322623 c
33.489445 4.279226 33.490047 4.230219 33.472511 4.186381 c
33.454975 4.142543 33.420746 4.107467 33.377346 4.088868 c
32.454010 3.714857 l
28.819101 2.183753 26.002338 1.003285 20.871389 6.379678 c
17.365046 10.049650 12.012030 8.518548 8.096613 6.590059 c
5.311631 5.162730 2.696513 3.425853 0.300844 1.412359 c
0.282327 1.404643 0.262465 1.400671 0.242404 1.400671 c
0.222344 1.400671 0.202482 1.404643 0.183965 1.412359 c
h
f
n
Q
q
/E43 gs
1.000000 0.000000 -0.000000 1.000000 10.842773 25.680420 cm
/Pattern cs
/P44 scn
0.183965 1.244367 m
0.135119 1.246294 0.088970 1.267270 0.055400 1.302805 c
0.037988 1.318161 0.024043 1.337046 0.014491 1.358205 c
0.004940 1.379364 0.000000 1.402314 0.000000 1.425529 c
0.000000 1.448744 0.004940 1.471692 0.014491 1.492851 c
0.024043 1.514009 0.037988 1.532895 0.055400 1.548250 c
2.495808 3.630159 5.166289 5.426165 8.014800 6.901267 c
10.166516 8.072123 12.531251 8.799428 14.969047 9.040135 c
16.128176 9.161479 17.299669 9.013676 18.392336 8.608234 c
19.485003 8.202792 20.469360 7.550651 21.268778 6.702574 c
26.130907 1.536562 28.819101 2.494963 32.407261 3.874124 c
32.676079 3.991002 32.968273 4.096193 33.260471 4.201384 c
33.301991 4.210203 33.345306 4.203657 33.382366 4.182963 c
33.419430 4.162269 33.447723 4.128831 33.462002 4.088857 c
33.476276 4.048882 33.475567 4.005086 33.459999 3.965596 c
33.444431 3.926105 33.415066 3.893603 33.377350 3.874124 c
32.524136 3.546865 l
28.900915 2.167703 26.037405 1.069051 21.023335 6.445443 c
17.516991 10.150478 12.128909 8.560935 8.166740 6.585695 c
5.347331 5.116680 2.701116 3.336857 0.277468 1.279431 c
0.251141 1.257543 0.218193 1.245186 0.183965 1.244367 c
h
f
n
Q
q
/E44 gs
1.000000 0.000000 -0.000000 1.000000 10.841797 25.797852 cm
/Pattern cs
/P45 scn
0.183965 1.127090 m
0.135119 1.129017 0.088970 1.149993 0.055400 1.185528 c
0.037988 1.200883 0.024043 1.219769 0.014491 1.240927 c
0.004940 1.262086 0.000000 1.285037 0.000000 1.308251 c
0.000000 1.331467 0.004940 1.354414 0.014491 1.375573 c
0.024043 1.396732 0.037988 1.415617 0.055400 1.430973 c
2.524364 3.550541 5.221336 5.389030 8.096613 6.912557 c
10.263983 8.107989 12.648080 8.858979 15.109300 9.121552 c
16.270851 9.253033 17.447046 9.110021 18.543247 8.704021 c
19.639446 8.298020 20.625040 7.640371 21.420717 6.783990 c
23.618027 4.446428 25.499763 3.149081 27.346437 2.880261 c
29.113020 2.777738 30.878012 3.106668 32.489071 3.838661 c
33.260468 4.107481 l
33.281818 4.116683 33.304886 4.121232 33.328133 4.120821 c
33.351379 4.120409 33.374271 4.115048 33.395283 4.105095 c
33.416298 4.095142 33.434944 4.080824 33.449989 4.063098 c
33.465034 4.045371 33.476131 4.024641 33.482536 4.002290 c
33.491741 3.980938 33.496284 3.957871 33.495872 3.934625 c
33.495461 3.911378 33.490101 3.888487 33.480148 3.867475 c
33.470196 3.846462 33.455879 3.827811 33.438152 3.812766 c
33.420425 3.797721 33.399700 3.786628 33.377346 3.780223 c
32.605953 3.511404 l
28.807413 2.178994 26.072464 1.173840 21.163584 6.550233 c
17.727367 10.290333 12.257474 8.642352 8.306994 6.608673 c
5.454044 5.107192 2.780027 3.287918 0.335907 1.185528 c
0.318732 1.162377 0.295326 1.144591 0.268422 1.134243 c
0.241518 1.123896 0.212226 1.121414 0.183965 1.127090 c
h
f
n
Q
q
/E45 gs
1.000000 0.000000 -0.000000 1.000000 10.842773 26.837646 cm
/Pattern cs
/P46 scn
0.183965 0.088817 m
0.135119 0.090743 0.088970 0.111720 0.055400 0.147255 c
0.037988 0.162610 0.024043 0.181496 0.014491 0.202654 c
0.004940 0.223813 0.000000 0.246763 0.000000 0.269979 c
0.000000 0.293193 0.004940 0.316141 0.014491 0.337300 c
0.024043 0.358459 0.037988 0.377345 0.055400 0.392700 c
2.565453 2.561165 5.309578 4.442851 8.236867 6.002848 c
10.401621 7.214656 12.785120 7.985321 15.249554 8.270284 c
16.411741 8.412277 17.591036 8.274187 18.688980 7.867541 c
19.786926 7.460895 20.771660 6.797493 21.560972 5.932722 c
26.236097 0.801774 28.760664 1.619920 32.617641 2.847140 c
33.260471 3.057521 l
33.301991 3.066340 33.345306 3.059795 33.382366 3.039101 c
33.419430 3.018407 33.447723 2.984969 33.462002 2.944994 c
33.476276 2.905019 33.475567 2.861221 33.459999 2.821731 c
33.444431 2.782241 33.415066 2.749741 33.377350 2.730262 c
32.722832 2.519881 l
31.022203 1.803484 29.174156 1.506835 27.334749 1.654983 c
25.417950 1.970554 23.559587 3.221149 21.303839 5.698965 c
20.548376 6.523037 19.606844 7.154552 18.557751 7.540846 c
17.508657 7.927140 16.382412 8.057018 15.272930 7.919651 c
12.840261 7.646632 10.487274 6.887477 8.353745 5.687279 c
5.474079 4.137455 2.773552 2.275698 0.300844 0.135569 c
0.285834 0.119877 0.267635 0.107584 0.247474 0.099519 c
0.227312 0.091455 0.205656 0.087805 0.183965 0.088817 c
h
f
n
Q
q
/E46 gs
1.000000 0.000000 -0.000000 1.000000 10.841797 26.739502 cm
/Pattern cs
/P47 scn
0.183965 0.186322 m
0.135119 0.188250 0.088970 0.209226 0.055400 0.244761 c
0.037988 0.260116 0.024043 0.279001 0.014491 0.300160 c
0.004940 0.321320 0.000000 0.344269 0.000000 0.367484 c
0.000000 0.390699 0.004940 0.413647 0.014491 0.434806 c
0.024043 0.455965 0.037988 0.474851 0.055400 0.490206 c
1.803985 2.020433 3.663540 3.419006 5.618797 4.674442 c
8.587502 6.567867 12.900305 8.788552 16.663780 8.589859 c
17.618355 8.563735 18.557535 8.342925 19.423750 7.940969 c
20.289965 7.539013 21.064960 6.964382 21.701225 6.252297 c
26.271160 1.133036 28.713911 1.845992 32.757893 3.038149 c
33.260471 3.178401 l
33.299610 3.179793 33.338089 3.168039 33.369770 3.145014 c
33.401455 3.121988 33.424519 3.089018 33.435276 3.051360 c
33.446037 3.013701 33.443871 2.973524 33.429138 2.937236 c
33.414402 2.900949 33.387943 2.870640 33.353973 2.851144 c
32.851398 2.699202 l
28.819103 1.530420 26.154282 0.735649 21.432405 6.018540 c
20.831068 6.699185 20.096685 7.249444 19.274536 7.635392 c
18.452387 8.021339 17.559898 8.234797 16.652092 8.262600 c
9.639405 8.636610 0.382658 0.338264 0.289156 0.256449 c
0.277684 0.237893 0.262351 0.222027 0.244200 0.209926 c
0.226049 0.197825 0.205505 0.189775 0.183965 0.186322 c
h
f
n
Q
q
/E47 gs
1.000000 0.000000 -0.000000 1.000000 10.847656 26.728271 cm
/Pattern cs
/P48 scn
0.178682 0.196896 m
0.129836 0.198822 0.083686 0.219799 0.050116 0.255334 c
0.017993 0.288105 0.000000 0.332168 0.000000 0.378057 c
0.000000 0.423947 0.017993 0.468007 0.050116 0.500779 c
1.824565 2.071583 3.715624 3.505507 5.707016 4.790206 c
8.710784 6.742070 13.082026 9.009506 16.857189 8.799126 c
17.803471 8.774062 18.734327 8.553446 19.591206 8.151156 c
20.448082 7.748866 21.212442 7.173607 21.836199 6.461563 c
26.336006 1.342301 28.685255 1.973443 32.951305 3.118848 c
33.255188 3.188974 l
33.294327 3.190367 33.332806 3.178613 33.364487 3.155587 c
33.396172 3.132561 33.419235 3.099591 33.429993 3.061933 c
33.440754 3.024274 33.438587 2.984097 33.423855 2.947810 c
33.409119 2.911522 33.382660 2.881213 33.348690 2.861717 c
33.044807 2.779901 l
31.639589 2.327779 30.182434 2.056774 28.708630 1.973444 c
26.534697 1.973444 24.454268 2.955219 21.579065 6.227806 c
20.987122 6.907659 20.261126 7.457906 19.446583 7.844060 c
18.632040 8.230214 17.746510 8.443949 16.845501 8.471866 c
9.774375 8.857564 0.377375 0.290398 0.283872 0.290398 c
0.275179 0.267485 0.261072 0.247015 0.242756 0.230734 c
0.224439 0.214452 0.202456 0.202843 0.178682 0.196896 c
h
f
n
Q
q
/E48 gs
1.000000 0.000000 -0.000000 1.000000 10.847656 26.728271 cm
/Pattern cs
/P49 scn
0.178682 0.199723 m
0.129836 0.201650 0.083686 0.222626 0.050116 0.258161 c
0.017993 0.290933 0.000000 0.334995 0.000000 0.380885 c
0.000000 0.426774 0.017993 0.470835 0.050116 0.503606 c
1.852028 2.111539 3.770142 3.584307 5.788830 4.909912 c
8.839349 6.896840 13.257341 9.222714 17.055880 9.012334 c
17.994854 8.984388 18.917862 8.762259 19.766743 8.359946 c
20.615623 7.957633 21.371973 7.383856 21.988132 6.674771 c
26.417812 1.555510 28.685246 2.104837 33.208427 3.168428 c
33.254856 3.179362 33.303711 3.172139 33.344994 3.148240 c
33.386272 3.124340 33.416862 3.085571 33.430500 3.039861 c
33.437527 3.016836 33.439732 2.992610 33.436985 2.968694 c
33.434238 2.944778 33.426598 2.921684 33.414536 2.900851 c
33.402477 2.880017 33.386253 2.861889 33.366879 2.847600 c
33.347507 2.833310 33.325397 2.823164 33.301933 2.817792 c
31.877384 2.407842 30.410925 2.160820 28.930689 2.081461 c
26.674942 2.081461 24.617893 3.063236 21.731003 6.405950 c
21.150900 7.085749 20.435661 7.637371 19.630783 8.025724 c
18.825907 8.414078 17.949009 8.630662 17.055880 8.661698 c
9.961378 9.059084 0.400750 0.339977 0.307247 0.246475 c
0.290965 0.229174 0.270852 0.215930 0.248524 0.207810 c
0.226196 0.199691 0.202275 0.196921 0.178682 0.199723 c
h
f
n
Q
q
/E49 gs
1.000000 0.000000 -0.000000 1.000000 10.847656 26.721924 cm
/Pattern cs
/P50 scn
0.178682 0.207425 m
0.129836 0.209352 0.083686 0.230328 0.050116 0.265862 c
0.017993 0.298635 0.000000 0.342697 0.000000 0.388587 c
0.000000 0.434477 0.017993 0.478537 0.050116 0.511308 c
1.885996 2.154994 3.839129 3.662813 5.894022 5.022804 c
8.991292 7.056483 13.467723 9.440795 17.277948 9.218726 c
18.208712 9.192007 19.123491 8.970129 19.963066 8.567455 c
20.802641 8.164782 21.548296 7.590287 22.151766 6.881164 c
26.476255 1.668400 28.813818 2.194352 33.278564 3.187816 c
33.325058 3.197115 33.373348 3.187563 33.412800 3.161261 c
33.452255 3.134958 33.479645 3.094060 33.488945 3.047564 c
33.498241 3.001066 33.488693 2.952779 33.462387 2.913325 c
33.436085 2.873871 33.395187 2.846482 33.348690 2.837183 c
28.521626 1.773592 26.207439 1.528147 21.871262 6.612345 c
21.296967 7.298883 20.582970 7.855163 19.776833 8.244123 c
18.970695 8.633085 18.090925 8.845798 17.196135 8.868093 c
10.066570 9.288855 0.353999 0.347679 0.248809 0.254177 c
0.230310 0.232292 0.205998 0.216084 0.178682 0.207425 c
h
f
n
Q
q
/E50 gs
1.000000 0.000000 -0.000000 1.000000 10.847656 26.755615 cm
/Pattern cs
/P51 scn
0.178682 0.170851 m
0.129836 0.172777 0.083686 0.193753 0.050116 0.229288 c
0.017993 0.262060 0.000000 0.306123 0.000000 0.352013 c
0.000000 0.397902 0.017993 0.441962 0.050116 0.474733 c
1.909385 2.171172 3.889876 3.729783 5.975836 5.138170 c
10.522395 8.177001 14.391062 9.626289 17.464956 9.439284 c
18.391079 9.401583 19.298786 9.168651 20.128624 8.755745 c
20.958464 8.342839 21.691710 7.759276 22.280333 7.043282 c
26.441193 2.087651 28.650188 2.274656 33.278564 3.197993 c
33.325058 3.207293 33.373348 3.197741 33.412800 3.171438 c
33.452255 3.145135 33.479645 3.104236 33.488945 3.057739 c
33.498241 3.011241 33.488693 2.962955 33.462387 2.923501 c
33.436085 2.884047 33.395187 2.856659 33.348690 2.847360 c
31.448296 2.303522 29.447083 2.211464 27.504786 2.578538 c
25.739925 3.057739 24.091944 4.331712 22.011513 6.821216 c
21.453434 7.500827 20.757547 8.054332 19.969793 8.445187 c
19.182039 8.836042 18.320337 9.055354 17.441580 9.088649 c
10.288639 9.521098 0.400751 0.357855 0.295560 0.264353 c
0.285806 0.240005 0.269915 0.218597 0.249433 0.202211 c
0.228952 0.185826 0.204577 0.175022 0.178682 0.170851 c
h
f
n
Q
q
/E51 gs
1.000000 0.000000 -0.000000 1.000000 10.847656 26.748047 cm
/Pattern cs
/P52 scn
0.178682 0.180888 m
0.129836 0.182815 0.083686 0.203791 0.050116 0.239326 c
0.017993 0.272098 0.000000 0.316160 0.000000 0.362050 c
0.000000 0.407939 0.017993 0.452000 0.050116 0.484771 c
1.939348 2.183494 3.946916 3.745804 6.057650 5.159895 c
10.662647 8.268852 14.566378 9.741517 17.651958 9.542824 c
18.566742 9.511683 19.464577 9.287298 20.286455 8.884417 c
21.108334 8.481536 21.835646 7.909280 22.420588 7.205262 c
26.347691 2.424947 28.404745 2.296381 33.266872 3.161279 c
33.313370 3.170578 33.361656 3.161026 33.401112 3.134723 c
33.440567 3.108421 33.467957 3.067523 33.477253 3.021026 c
33.486553 2.974529 33.476997 2.926242 33.450695 2.886788 c
33.424393 2.847334 33.383495 2.819944 33.336998 2.810645 c
28.416430 1.945747 26.184059 2.074313 22.140078 6.983192 c
21.593494 7.661248 20.908073 8.214424 20.129902 8.605526 c
19.351730 8.996628 18.498844 9.216592 17.628584 9.250628 c
10.452268 9.706453 0.389063 0.321142 0.283872 0.227640 c
0.256298 0.198863 0.218520 0.182073 0.178682 0.180888 c
h
f
n
Q
q
/E52 gs
1.000000 0.000000 -0.000000 1.000000 10.847656 26.754639 cm
/Pattern cs
/P53 scn
0.178682 0.171288 m
0.129836 0.173215 0.083686 0.194191 0.050116 0.229726 c
0.017993 0.262498 0.000000 0.306560 0.000000 0.352449 c
0.000000 0.398339 0.017993 0.442399 0.050116 0.475171 c
1.960604 2.232768 3.995695 3.849903 6.139465 5.313924 c
10.814590 8.493009 14.753382 9.989048 17.827276 9.802043 c
18.734110 9.755981 19.620556 9.516223 20.426975 9.098902 c
21.233393 8.681580 21.941076 8.096377 22.502401 7.382667 c
26.394442 2.567289 28.428120 2.403658 33.220119 3.151679 c
33.243176 3.154961 33.266647 3.153620 33.289177 3.147730 c
33.311703 3.141841 33.332836 3.131521 33.351334 3.117377 c
33.369827 3.103232 33.385323 3.085546 33.396908 3.065348 c
33.408493 3.045150 33.415939 3.022845 33.418812 2.999738 c
33.422489 2.953702 33.409004 2.907934 33.380951 2.871249 c
33.352898 2.834564 33.312263 2.809557 33.266872 2.801045 c
28.428120 2.041337 26.254189 2.228342 22.233582 7.172286 c
21.703262 7.859414 21.030872 8.423975 20.262348 8.827400 c
19.493822 9.230826 18.647268 9.463610 17.780523 9.509848 c
10.557457 9.989048 0.330624 0.369981 0.248809 0.276478 c
0.245357 0.254938 0.237306 0.234394 0.225206 0.216243 c
0.213105 0.198092 0.197237 0.182759 0.178682 0.171288 c
h
f
n
Q
q
/E53 gs
1.000000 0.000000 -0.000000 1.000000 10.847656 26.737549 cm
/Pattern cs
/P54 scn
0.178682 0.191433 m
0.129836 0.193359 0.083686 0.214336 0.050116 0.249871 c
0.017993 0.282643 0.000000 0.326705 0.000000 0.372595 c
0.000000 0.418485 0.017993 0.462544 0.050116 0.495317 c
1.990843 2.291837 4.057018 3.947901 6.232968 5.450948 c
10.908092 8.700159 14.952073 10.242949 18.061031 10.032569 c
18.969606 9.988899 19.857950 9.748987 20.664986 9.329329 c
21.472021 8.909672 22.178602 8.320222 22.736155 7.601505 c
26.394438 2.996508 28.381367 2.493931 33.255184 3.171824 c
33.301682 3.171824 33.346275 3.153353 33.379154 3.120474 c
33.412033 3.087596 33.430504 3.043004 33.430504 2.996507 c
33.430504 2.950010 33.412033 2.905417 33.379154 2.872539 c
33.346275 2.839661 33.301682 2.821190 33.255184 2.821190 c
28.170986 2.131609 26.125620 2.645873 22.362144 7.391124 c
21.842451 8.075588 21.180367 8.639078 20.421625 9.042665 c
19.662882 9.446252 18.825569 9.680314 17.967529 9.728686 c
10.732774 10.231262 0.318935 0.378438 0.213745 0.284935 c
0.212926 0.250708 0.200570 0.217760 0.178682 0.191433 c
h
f
n
Q
q
/E54 gs
1.000000 0.000000 -0.000000 1.000000 10.847656 26.692627 cm
/Pattern cs
/P55 scn
0.178682 0.235140 m
0.129836 0.237067 0.083686 0.258043 0.050116 0.293578 c
0.017993 0.326350 0.000000 0.370412 0.000000 0.416302 c
0.000000 0.462192 0.017993 0.506251 0.050116 0.539023 c
2.019669 2.372559 4.117073 4.063762 6.326470 5.599845 c
11.130159 8.930872 15.139076 10.508726 18.259722 10.274970 c
19.156769 10.231329 20.033239 9.990931 20.827024 9.570809 c
21.620811 9.150688 22.312487 8.561128 22.853033 7.843905 c
26.476254 3.168781 28.428116 2.642829 33.278557 3.168781 c
33.325054 3.168781 33.369648 3.150310 33.402527 3.117432 c
33.435406 3.084553 33.453876 3.039961 33.453876 2.993464 c
33.453876 2.946967 33.435406 2.902375 33.402527 2.869496 c
33.369648 2.836618 33.325054 2.818145 33.278557 2.818145 c
28.276173 2.233754 26.265875 2.818148 22.525776 7.586775 c
22.023540 8.247046 21.386482 8.792821 20.656971 9.187805 c
19.927462 9.582788 19.122215 9.817927 18.294786 9.877584 c
11.036656 10.415224 0.447502 0.340330 0.342312 0.235140 c
0.317880 0.219528 0.289490 0.211231 0.260496 0.211231 c
0.231502 0.211231 0.203114 0.219528 0.178682 0.235140 c
h
f
n
Q
q
/E55 gs
1.000000 0.000000 -0.000000 1.000000 10.847656 26.705322 cm
/Pattern cs
/P56 scn
0.178682 0.223015 m
0.129836 0.224941 0.083686 0.245918 0.050116 0.281453 c
0.017993 0.314224 0.000000 0.358287 0.000000 0.404177 c
0.000000 0.450067 0.017993 0.494126 0.050116 0.526898 c
2.049967 2.399338 4.178456 4.129468 6.419973 5.704599 c
11.282102 9.105752 15.337771 10.718670 18.470104 10.473226 c
19.353603 10.421892 20.214914 10.176372 20.992689 9.754151 c
21.770464 9.331931 22.445564 8.743399 22.969912 8.030473 c
26.382751 3.554042 28.206051 2.700830 33.266872 3.203406 c
33.313370 3.203406 33.357960 3.184935 33.390839 3.152057 c
33.423717 3.119179 33.442188 3.074586 33.442188 3.028090 c
33.442188 2.981592 33.423717 2.937000 33.390839 2.904122 c
33.357960 2.871243 33.313370 2.852773 33.266872 2.852773 c
28.054110 2.338509 26.172373 3.215095 22.666029 7.820092 c
22.170027 8.501604 21.529137 9.064711 20.789469 9.468901 c
20.049801 9.873090 19.229744 10.108315 18.388290 10.157654 c
11.165224 10.683605 0.412438 0.374957 0.295560 0.269767 c
0.281068 0.253407 0.262953 0.240658 0.242661 0.232540 c
0.222368 0.224423 0.200459 0.221162 0.178682 0.223015 c
h
f
n
Q
q
/E56 gs
1.000000 0.000000 -0.000000 1.000000 10.847656 26.694092 cm
/Pattern cs
/P57 scn
0.178682 0.230672 m
0.129836 0.232598 0.083686 0.253575 0.050116 0.289110 c
0.017993 0.321881 0.000000 0.365944 0.000000 0.411834 c
0.000000 0.457724 0.017993 0.501783 0.050116 0.534555 c
2.080297 2.445895 4.239872 4.214952 6.513475 5.829134 c
11.445731 9.335478 15.536465 10.948396 18.668798 10.691264 c
19.550518 10.640827 20.409885 10.394328 21.184280 9.969725 c
21.958677 9.545121 22.628595 8.953110 23.145229 8.236823 c
26.324314 3.959085 28.042423 2.790302 33.290249 3.211063 c
33.336746 3.211063 33.381336 3.192592 33.414215 3.159714 c
33.447094 3.126835 33.465565 3.082243 33.465565 3.035746 c
33.465565 2.989249 33.447094 2.944657 33.414215 2.911778 c
33.381336 2.878900 33.336746 2.860429 33.290249 2.860429 c
31.277559 2.534372 29.213612 2.789831 27.341154 3.596761 c
25.530012 4.719740 23.992630 6.233161 22.841345 8.026443 c
22.353823 8.702976 21.722759 9.263359 20.993330 9.667475 c
20.263903 10.071590 19.454153 10.309443 18.622047 10.364005 c
11.317166 10.948396 0.377374 0.405989 0.260496 0.300798 c
0.252156 0.284292 0.240633 0.269599 0.226592 0.257564 c
0.212551 0.245528 0.196269 0.236390 0.178682 0.230672 c
h
f
n
Q
q
/E57 gs
1.000000 0.000000 -0.000000 1.000000 10.847656 26.677490 cm
/Pattern cs
/P58 scn
0.178682 0.253107 m
0.129836 0.255034 0.083686 0.276011 0.050116 0.311545 c
0.017993 0.344317 0.000000 0.388379 0.000000 0.434269 c
0.000000 0.480159 0.017993 0.524219 0.050116 0.556991 c
2.110656 2.507228 4.301321 4.315208 6.606978 5.968445 c
11.609362 9.474789 15.735158 11.192897 18.879179 10.924077 c
19.752279 10.867264 20.601482 10.615127 21.364119 10.186270 c
22.126755 9.757414 22.783361 9.162785 23.285484 8.446262 c
26.476257 4.051645 28.159302 2.882863 33.301937 3.233498 c
33.348434 3.233498 33.393032 3.215027 33.425907 3.182148 c
33.458786 3.149270 33.477257 3.104678 33.477257 3.058181 c
33.477257 3.011684 33.458786 2.967092 33.425907 2.934214 c
33.393032 2.901335 33.348434 2.882864 33.301937 2.882864 c
27.983984 2.543918 26.289253 3.782826 22.993290 8.247569 c
22.520210 8.925058 21.900387 9.487093 21.179976 9.891819 c
20.459566 10.296544 19.657127 10.533531 18.832426 10.585132 c
11.527545 11.204585 0.389062 0.428424 0.272184 0.311545 c
0.261355 0.295993 0.247487 0.282798 0.231416 0.272754 c
0.215346 0.262710 0.197407 0.256026 0.178682 0.253107 c
h
f
n
Q
q
/E58 gs
1.000000 0.000000 -0.000000 1.000000 10.845703 26.615967 cm
/Pattern cs
/P59 scn
0.179771 0.310559 m
0.138462 0.294278 0.092514 0.294278 0.051205 0.310559 c
0.018325 0.345290 0.000000 0.391299 0.000000 0.439126 c
0.000000 0.486952 0.018325 0.532959 0.051205 0.567690 c
2.141280 2.562417 4.367316 4.409637 6.713257 6.096026 c
11.774078 9.730935 15.934939 11.425667 19.090649 11.145160 c
19.955027 11.086768 20.794743 10.832236 21.546070 10.400881 c
22.297396 9.969526 22.940586 9.372684 23.426825 8.655655 c
26.372152 4.529858 27.985073 2.987068 33.291340 3.244200 c
33.314373 3.245787 33.337494 3.242807 33.359371 3.235434 c
33.381252 3.228061 33.401459 3.216441 33.418835 3.201237 c
33.436211 3.186033 33.450413 3.167546 33.460625 3.146838 c
33.470837 3.126131 33.476860 3.103612 33.478344 3.080571 c
33.479931 3.057537 33.476952 3.034415 33.469578 3.012536 c
33.462208 2.990656 33.450581 2.970448 33.435379 2.953073 c
33.420174 2.935697 33.401691 2.921494 33.380985 2.911283 c
33.360275 2.901071 33.337753 2.895049 33.314713 2.893564 c
27.821442 2.636433 26.161774 4.214287 23.146318 8.456963 c
22.685411 9.130376 22.077868 9.690568 21.369347 10.095437 c
20.660826 10.500307 19.869755 10.739323 19.055584 10.794524 c
11.727327 11.449041 0.355088 0.427437 0.284961 0.275495 c
0.265965 0.273884 0.246839 0.276163 0.228753 0.282191 c
0.210668 0.288220 0.194001 0.297873 0.179771 0.310559 c
h
f
n
Q
q
/E59 gs
1.000000 0.000000 -0.000000 1.000000 10.853516 26.620605 cm
/Pattern cs
/P60 scn
0.172421 0.304717 m
0.131112 0.288437 0.085164 0.288437 0.043855 0.304717 c
0.015423 0.341544 0.000000 0.386759 0.000000 0.433284 c
0.000000 0.479810 0.015423 0.525022 0.043855 0.561849 c
2.176055 2.586933 4.436481 4.472574 6.811098 6.207060 c
11.942046 9.923784 16.161346 11.653580 19.293680 11.361384 c
20.152164 11.294273 20.984234 11.033256 21.727230 10.597985 c
22.470224 10.162716 23.104780 9.564541 23.583105 8.848506 c
26.364805 4.839587 27.825779 3.004601 33.307362 3.238358 c
33.353859 3.238358 33.398453 3.219887 33.431332 3.187009 c
33.464211 3.154130 33.482681 3.109538 33.482681 3.063041 c
33.482681 3.016544 33.464211 2.971951 33.431332 2.939074 c
33.398453 2.906195 33.353859 2.887722 33.307362 2.887722 c
27.673838 2.712405 26.084297 4.629206 23.290911 8.649813 c
22.839710 9.316758 22.243856 9.873319 21.547728 10.278045 c
20.851601 10.682771 20.073133 10.925233 19.270304 10.987375 c
11.942046 11.665268 0.406177 0.398219 0.300986 0.281342 c
0.256720 0.272274 0.210663 0.280649 0.172421 0.304717 c
h
f
n
Q
q
/E60 gs
1.000000 0.000000 -0.000000 1.000000 10.853516 26.585449 cm
/Pattern cs
/P61 scn
0.172421 0.340384 m
0.131112 0.324104 0.085164 0.324104 0.043855 0.340384 c
0.015423 0.377212 0.000000 0.422426 0.000000 0.468951 c
0.000000 0.515477 0.015423 0.560689 0.043855 0.597516 c
2.210603 2.665124 4.505999 4.593571 6.916288 6.371296 c
12.117363 10.158147 16.360037 11.911318 19.515747 11.607435 c
20.363644 11.537174 21.184048 11.272976 21.913607 10.835241 c
22.643164 10.397507 23.262354 9.797948 23.723358 9.082868 c
26.493370 4.992134 27.930969 3.238962 33.307362 3.238962 c
33.353859 3.238962 33.398453 3.220491 33.431332 3.187613 c
33.464211 3.154735 33.482681 3.110143 33.482681 3.063645 c
33.482681 3.017148 33.464211 2.972556 33.431332 2.939678 c
33.398453 2.906799 33.353859 2.888329 33.307362 2.888329 c
32.956730 2.888329 l
27.697214 2.888329 26.212862 4.746691 23.431164 8.849113 c
22.997372 9.516849 22.415098 10.075268 21.729811 10.480762 c
21.044525 10.886258 20.274778 11.127851 19.480684 11.186675 c
12.140739 11.911320 0.417865 0.387136 0.300986 0.270259 c
0.275768 0.271988 0.251222 0.279150 0.229031 0.291254 c
0.206840 0.303358 0.187528 0.320118 0.172421 0.340384 c
h
f
n
Q
q
/E61 gs
1.000000 0.000000 -0.000000 1.000000 10.853516 26.400391 cm
/Pattern cs
/P62 scn
0.172421 0.527429 m
0.131112 0.511148 0.085164 0.511148 0.043855 0.527429 c
0.015423 0.564256 0.000000 0.609469 0.000000 0.655995 c
0.000000 0.702521 0.015423 0.747732 0.043855 0.784559 c
2.255968 2.878321 4.598198 4.830180 7.056540 6.628465 c
12.327744 10.497130 16.605482 12.285367 19.761192 11.958108 c
20.603052 11.884413 21.416214 11.615828 22.136351 11.173603 c
22.856487 10.731378 23.463840 10.127645 23.910364 9.410166 c
26.469994 5.494749 27.814091 3.507819 33.307362 3.507819 c
33.353859 3.507819 33.398453 3.489348 33.431332 3.456470 c
33.464211 3.423592 33.482681 3.379000 33.482681 3.332502 c
33.482681 3.286006 33.464211 3.241413 33.431332 3.208535 c
33.398453 3.175656 33.353859 3.157186 33.307362 3.157186 c
27.627085 3.157186 26.201174 5.331118 23.606480 9.258223 c
23.606480 9.316663 l
23.185751 9.980969 22.616011 10.538097 21.942455 10.943853 c
21.268898 11.349610 20.510057 11.592833 19.726128 11.654225 c
12.351119 12.507435 0.417865 0.702747 0.300986 0.574181 c
0.283784 0.558169 0.263539 0.545777 0.241453 0.537745 c
0.219366 0.529715 0.195890 0.526206 0.172421 0.527429 c
h
f
n
Q

endstream
endobj

500 0 obj
  77206
endobj

501 0 obj
  << /Length 502 0 R
     /Range [ 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch dup 0.000000 gt { exch pop dup 0.000000 sub -1.000000 mul 1.000000 add exch } if dup 1.000000 gt { exch pop 0.000000 exch } if pop }
endstream
endobj

502 0 obj
  149
endobj

503 0 obj
  << /BBox [ 0.000000 0.000000 56.000000 56.000000 ]
     /Resources << /Pattern << /P1 << /Matrix [ 52.260326 17.325764 -24.083279 72.643265 -12.218479 -25.647415 ]
                                      /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                                  /ColorSpace /DeviceGray
                                                  /Function 501 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 3
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >> >> >>
     /Subtype /Form
     /Length 504 0 R
     /Group << /Type /Group
               /S /Transparency
               /CS /DeviceGray
            >>
     /Type /XObject
  >>
stream
/DeviceGray CS
/DeviceGray cs
1.000000 0.000000 -0.000000 1.000000 4.000000 4.000000 cm
0.000000 24.000000 m
0.000000 10.745167 10.745166 0.000000 24.000000 0.000000 c
37.254833 0.000000 48.000000 10.745167 48.000000 24.000000 c
48.000000 37.254833 37.254833 48.000000 24.000000 48.000000 c
10.745166 48.000000 0.000000 37.254833 0.000000 24.000000 c
h
/Pattern cs
/P1 scn
f
n

endstream
endobj

504 0 obj
  377
endobj

505 0 obj
  << /Length 506 0 R
     /Range [ 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch dup 0.000000 gt { exch pop dup 0.000000 sub -1.000000 mul 1.000000 add exch } if dup 1.000000 gt { exch pop 0.000000 exch } if pop }
endstream
endobj

506 0 obj
  149
endobj

507 0 obj
  << /BBox [ 0.000000 0.000000 56.000000 56.000000 ]
     /Resources << /Pattern << /P1 << /Matrix [ -10.532743 -4.721301 4.721301 -10.532743 27.190319 52.268826 ]
                                      /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                                  /ColorSpace /DeviceGray
                                                  /Function 505 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 2
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >> >> >>
     /Subtype /Form
     /Length 508 0 R
     /Group << /Type /Group
               /S /Transparency
               /CS /DeviceGray
            >>
     /Type /XObject
  >>
stream
/DeviceGray CS
/DeviceGray cs
1.000000 0.000000 -0.000000 1.000000 18.400391 10.928223 cm
17.004803 3.678017 m
21.029940 7.218922 22.427454 14.620698 19.728672 19.219311 c
17.029890 23.817921 13.184968 24.888777 9.985832 24.738008 c
6.786697 24.587240 0.288702 22.576128 0.014249 15.356507 c
-0.260204 8.136887 3.474450 5.074659 7.380730 1.624348 c
8.890104 0.291159 12.979666 0.137112 17.004803 3.678017 c
h
/Pattern cs
/P1 scn
f
n

endstream
endobj

508 0 obj
  433
endobj

509 0 obj
  << /Length 510 0 R
     /Range [ 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch dup 0.000000 gt { exch pop dup 0.000000 sub -1.000000 mul 1.000000 add exch } if dup 1.000000 gt { exch pop 0.000000 exch } if pop }
endstream
endobj

510 0 obj
  149
endobj

511 0 obj
  << /BBox [ 0.000000 0.000000 56.000000 56.000000 ]
     /Resources << /Pattern << /P1 << /Matrix [ -9.940857 28.970495 -28.970495 -9.940857 55.408485 -4.236877 ]
                                      /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                                  /ColorSpace /DeviceGray
                                                  /Function 509 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 3
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >> >> >>
     /Subtype /Form
     /Length 512 0 R
     /Group << /Type /Group
               /S /Transparency
               /CS /DeviceGray
            >>
     /Type /XObject
  >>
stream
/DeviceGray CS
/DeviceGray cs
1.000000 0.000000 -0.000000 1.000000 4.000000 4.000000 cm
0.000000 24.000000 m
0.000000 10.745167 10.745166 0.000000 24.000000 0.000000 c
37.254833 0.000000 48.000000 10.745167 48.000000 24.000000 c
48.000000 37.254833 37.254833 48.000000 24.000000 48.000000 c
10.745166 48.000000 0.000000 37.254833 0.000000 24.000000 c
h
/Pattern cs
/P1 scn
f
n

endstream
endobj

512 0 obj
  377
endobj

513 0 obj
  << /Length 514 0 R
     /Range [ 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch dup 0.000000 gt { exch pop dup 0.000000 sub -1.000000 mul 1.000000 add exch } if dup 1.000000 gt { exch pop 0.000000 exch } if pop }
endstream
endobj

514 0 obj
  149
endobj

515 0 obj
  << /BBox [ 0.000000 0.000000 56.000000 56.000000 ]
     /Resources << /Pattern << /P1 << /Matrix [ 16.331402 -32.236496 38.241081 19.373400 -7.097038 50.549698 ]
                                      /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                                  /ColorSpace /DeviceGray
                                                  /Function 513 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 3
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >> >> >>
     /Subtype /Form
     /Length 516 0 R
     /Group << /Type /Group
               /S /Transparency
               /CS /DeviceGray
            >>
     /Type /XObject
  >>
stream
/DeviceGray CS
/DeviceGray cs
1.000000 0.000000 -0.000000 1.000000 4.000000 4.000000 cm
0.000000 24.000000 m
0.000000 10.745167 10.745166 0.000000 24.000000 0.000000 c
37.254833 0.000000 48.000000 10.745167 48.000000 24.000000 c
48.000000 37.254833 37.254833 48.000000 24.000000 48.000000 c
10.745166 48.000000 0.000000 37.254833 0.000000 24.000000 c
h
/Pattern cs
/P1 scn
f
n

endstream
endobj

516 0 obj
  377
endobj

517 0 obj
  << /Length 518 0 R
     /Range [ 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch dup 0.000000 gt { exch pop dup 0.000000 sub -1.000000 mul 1.000000 add exch } if dup 1.000000 gt { exch pop 0.000000 exch } if pop }
endstream
endobj

518 0 obj
  149
endobj

519 0 obj
  << /BBox [ 0.000000 0.000000 56.000000 56.000000 ]
     /Resources << /Pattern << /P1 << /Matrix [ -45.444073 -15.479060 15.479060 -45.444073 65.704536 66.201157 ]
                                      /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                                  /ColorSpace /DeviceGray
                                                  /Function 517 0 R
                                                  /Domain [ 0.000000 1.000000 ]
                                                  /ShadingType 3
                                                  /Extend [ true true ]
                                               >>
                                      /PatternType 2
                                      /Type /Pattern
                                   >> >> >>
     /Subtype /Form
     /Length 520 0 R
     /Group << /Type /Group
               /S /Transparency
               /CS /DeviceGray
            >>
     /Type /XObject
  >>
stream
/DeviceGray CS
/DeviceGray cs
1.000000 0.000000 -0.000000 1.000000 4.000000 4.000000 cm
0.000000 24.000000 m
0.000000 10.745167 10.745166 0.000000 24.000000 0.000000 c
37.254833 0.000000 48.000000 10.745167 48.000000 24.000000 c
48.000000 37.254833 37.254833 48.000000 24.000000 48.000000 c
10.745166 48.000000 0.000000 37.254833 0.000000 24.000000 c
h
/Pattern cs
/P1 scn
f
n

endstream
endobj

520 0 obj
  377
endobj

521 0 obj
  << /Length 522 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.239216 exch 0.188235 exch 0.254902 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.000000 mul 0.239216 add exch dup 0.000000 sub 0.000000 mul 0.188235 add exch dup 0.000000 sub 0.000000 mul 0.254902 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.239216 exch 0.188235 exch 0.254902 exch } if pop }
endstream
endobj

522 0 obj
  336
endobj

523 0 obj
  << /Length 524 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.360784 exch 0.278431 exch 0.388235 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.000000 mul 0.360784 add exch dup 0.000000 sub 0.000000 mul 0.278431 add exch dup 0.000000 sub 0.000000 mul 0.388235 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.360784 exch 0.278431 exch 0.388235 exch } if pop }
endstream
endobj

524 0 obj
  336
endobj

525 0 obj
  << /Length 526 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.356863 exch 0.682353 exch 0.925490 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.000000 mul 0.356863 add exch dup 0.000000 sub 0.000000 mul 0.682353 add exch dup 0.000000 sub 0.000000 mul 0.925490 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.356863 exch 0.682353 exch 0.925490 exch } if pop }
endstream
endobj

526 0 obj
  336
endobj

527 0 obj
  << /Length 528 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.290196 exch 0.560784 exch 0.623529 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.000000 mul 0.290196 add exch dup 0.000000 sub 0.000000 mul 0.560784 add exch dup 0.000000 sub 0.000000 mul 0.623529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.290196 exch 0.560784 exch 0.623529 exch } if pop }
endstream
endobj

528 0 obj
  336
endobj

529 0 obj
  << /Length 530 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.489074 exch 0.444028 exch 0.579167 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.001122 mul 0.489074 add exch dup 0.000000 sub -0.000891 mul 0.444028 add exch dup 0.000000 sub 0.001226 mul 0.579167 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.490196 exch 0.443137 exch 0.580392 exch } if pop }
endstream
endobj

530 0 obj
  337
endobj

531 0 obj
  << /XObject << /X2 247 0 R
                 /X3 373 0 R
                 /X1 499 0 R
              >>
     /ExtGState << /E15 << /ca 1.000000 >>
                   /E14 << /BM /Screen >>
                   /E12 << /ca 1.000000 >>
                   /E1 << /ca 0.900000 >>
                   /E11 << /BM /Screen >>
                   /E8 << /SMask << /Type /Mask
                                    /G 503 0 R
                                    /S /Luminosity
                                 >>
                          /Type /ExtGState
                       >>
                   /E6 << /SMask << /Type /Mask
                                    /G 511 0 R
                                    /S /Luminosity
                                 >>
                          /Type /ExtGState
                       >>
                   /E13 << /SMask << /Type /Mask
                                     /G 507 0 R
                                     /S /Luminosity
                                  >>
                           /Type /ExtGState
                        >>
                   /E7 << /ca 0.880000 >>
                   /E2 << /SMask << /Type /Mask
                                    /G 515 0 R
                                    /S /Luminosity
                                 >>
                          /Type /ExtGState
                       >>
                   /E5 << /ca 0.800000 >>
                   /E9 << /BM /ColorDodge >>
                   /E4 << /SMask << /Type /Mask
                                    /G 519 0 R
                                    /S /Luminosity
                                 >>
                          /Type /ExtGState
                       >>
                   /E3 << /ca 0.850000 >>
                   /E10 << /ca 1.000000 >>
                >>
     /Pattern << /P4 << /Matrix [ 52.260326 17.325764 -24.083279 72.643265 -12.218479 -25.647415 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 521 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P3 << /Matrix [ -9.940857 28.970495 -28.970495 -9.940857 55.408485 -4.236877 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 523 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P5 << /Matrix [ -10.532743 -4.721301 4.721301 -10.532743 27.190319 52.268826 ]
                        /Shading << /Coords [ 0.000000 0.000000 1.000000 0.000000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 525 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 2
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P2 << /Matrix [ -45.444073 -15.479060 15.479060 -45.444073 65.704536 66.201157 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 527 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P1 << /Matrix [ 16.331402 -32.236496 38.241081 19.373400 -7.097038 50.549698 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 529 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
              >>
  >>
endobj

532 0 obj
  << /Length 533 0 R >>
stream
/DeviceRGB CS
/DeviceRGB cs
q
1.000000 0.000000 -0.000000 1.000000 4.000000 4.000000 cm
0.031373 0.098039 0.223529 scn
0.000000 24.000000 m
0.000000 10.745167 10.745166 0.000000 24.000000 0.000000 c
37.254833 0.000000 48.000000 10.745167 48.000000 24.000000 c
48.000000 37.254833 37.254833 48.000000 24.000000 48.000000 c
10.745166 48.000000 0.000000 37.254833 0.000000 24.000000 c
h
f
n
Q
q
/E1 gs
/E2 gs
1.000000 0.000000 -0.000000 1.000000 4.000000 4.000000 cm
/Pattern cs
/P1 scn
0.000000 24.000000 m
0.000000 10.745167 10.745166 0.000000 24.000000 0.000000 c
37.254833 0.000000 48.000000 10.745167 48.000000 24.000000 c
48.000000 37.254833 37.254833 48.000000 24.000000 48.000000 c
10.745166 48.000000 0.000000 37.254833 0.000000 24.000000 c
h
f
n
Q
q
/E3 gs
/E4 gs
1.000000 0.000000 -0.000000 1.000000 4.000000 4.000000 cm
/Pattern cs
/P2 scn
0.000000 24.000000 m
0.000000 10.745167 10.745166 0.000000 24.000000 0.000000 c
37.254833 0.000000 48.000000 10.745167 48.000000 24.000000 c
48.000000 37.254833 37.254833 48.000000 24.000000 48.000000 c
10.745166 48.000000 0.000000 37.254833 0.000000 24.000000 c
h
f
n
Q
q
/E5 gs
/E6 gs
1.000000 0.000000 -0.000000 1.000000 4.000000 4.000000 cm
/Pattern cs
/P3 scn
0.000000 24.000000 m
0.000000 10.745167 10.745166 0.000000 24.000000 0.000000 c
37.254833 0.000000 48.000000 10.745167 48.000000 24.000000 c
48.000000 37.254833 37.254833 48.000000 24.000000 48.000000 c
10.745166 48.000000 0.000000 37.254833 0.000000 24.000000 c
h
f
n
Q
q
/E7 gs
/E8 gs
1.000000 0.000000 -0.000000 1.000000 4.000000 4.000000 cm
/Pattern cs
/P4 scn
0.000000 24.000000 m
0.000000 10.745167 10.745166 0.000000 24.000000 0.000000 c
37.254833 0.000000 48.000000 10.745167 48.000000 24.000000 c
48.000000 37.254833 37.254833 48.000000 24.000000 48.000000 c
10.745166 48.000000 0.000000 37.254833 0.000000 24.000000 c
h
f
n
Q
q
/E9 gs
/E10 gs
/X1 Do
Q
q
/E11 gs
/E12 gs
/X2 Do
Q
q
/E13 gs
1.000000 0.000000 -0.000000 1.000000 18.400391 10.928223 cm
/Pattern cs
/P5 scn
17.004803 3.678017 m
21.029940 7.218922 22.427454 14.620698 19.728672 19.219311 c
17.029890 23.817921 13.184968 24.888777 9.985832 24.738008 c
6.786697 24.587240 0.288702 22.576128 0.014249 15.356507 c
-0.260204 8.136887 3.474450 5.074659 7.380730 1.624348 c
8.890104 0.291159 12.979666 0.137112 17.004803 3.678017 c
h
f
n
Q
q
/E14 gs
/E15 gs
/X3 Do
Q

endstream
endobj

533 0 obj
  2345
endobj

534 0 obj
  << /Annots []
     /Type /Page
     /MediaBox [ 0.000000 0.000000 56.000000 56.000000 ]
     /Resources 531 0 R
     /Contents 532 0 R
     /Parent 535 0 R
  >>
endobj

535 0 obj
  << /Kids [ 534 0 R ]
     /Count 1
     /Type /Pages
  >>
endobj

536 0 obj
  << /Pages 535 0 R
     /Type /Catalog
  >>
endobj

xref
0 537
0000000000 65535 f
0000000010 00000 n
0000003267 00000 n
0000003290 00000 n
0000006743 00000 n
0000006766 00000 n
0000010023 00000 n
0000010046 00000 n
0000013692 00000 n
0000013715 00000 n
0000017361 00000 n
0000017385 00000 n
0000021033 00000 n
0000021057 00000 n
0000024705 00000 n
0000024729 00000 n
0000028376 00000 n
0000028400 00000 n
0000032047 00000 n
0000032071 00000 n
0000035526 00000 n
0000035550 00000 n
0000039006 00000 n
0000039030 00000 n
0000042484 00000 n
0000042508 00000 n
0000045378 00000 n
0000045402 00000 n
0000049050 00000 n
0000049074 00000 n
0000052722 00000 n
0000052746 00000 n
0000056394 00000 n
0000056418 00000 n
0000060066 00000 n
0000060090 00000 n
0000063738 00000 n
0000063762 00000 n
0000066437 00000 n
0000066461 00000 n
0000069914 00000 n
0000069938 00000 n
0000073587 00000 n
0000073611 00000 n
0000076675 00000 n
0000076699 00000 n
0000080348 00000 n
0000080372 00000 n
0000084020 00000 n
0000084044 00000 n
0000087692 00000 n
0000087716 00000 n
0000091365 00000 n
0000091389 00000 n
0000095233 00000 n
0000095257 00000 n
0000099102 00000 n
0000099126 00000 n
0000102972 00000 n
0000102996 00000 n
0000106643 00000 n
0000106667 00000 n
0000109731 00000 n
0000109755 00000 n
0000113405 00000 n
0000113429 00000 n
0000117080 00000 n
0000117104 00000 n
0000120753 00000 n
0000120777 00000 n
0000124426 00000 n
0000124450 00000 n
0000128099 00000 n
0000128123 00000 n
0000131773 00000 n
0000131797 00000 n
0000134278 00000 n
0000134302 00000 n
0000137952 00000 n
0000137976 00000 n
0000141624 00000 n
0000141648 00000 n
0000145298 00000 n
0000145322 00000 n
0000148972 00000 n
0000148996 00000 n
0000152451 00000 n
0000152475 00000 n
0000156321 00000 n
0000156345 00000 n
0000159992 00000 n
0000160016 00000 n
0000163863 00000 n
0000163887 00000 n
0000167729 00000 n
0000167753 00000 n
0000171206 00000 n
0000171230 00000 n
0000175275 00000 n
0000175299 00000 n
0000178754 00000 n
0000178779 00000 n
0000182233 00000 n
0000182258 00000 n
0000185911 00000 n
0000185936 00000 n
0000189588 00000 n
0000189613 00000 n
0000193263 00000 n
0000193288 00000 n
0000196354 00000 n
0000196379 00000 n
0000199835 00000 n
0000199860 00000 n
0000202344 00000 n
0000202369 00000 n
0000205045 00000 n
0000205070 00000 n
0000208527 00000 n
0000208552 00000 n
0000212202 00000 n
0000212227 00000 n
0000215683 00000 n
0000215708 00000 n
0000219358 00000 n
0000219383 00000 n
0000222061 00000 n
0000222086 00000 n
0000225541 00000 n
0000225566 00000 n
0000229216 00000 n
0000229241 00000 n
0000232698 00000 n
0000232723 00000 n
0000236375 00000 n
0000236400 00000 n
0000239856 00000 n
0000239881 00000 n
0000243337 00000 n
0000243362 00000 n
0000247015 00000 n
0000247040 00000 n
0000251087 00000 n
0000251112 00000 n
0000254569 00000 n
0000254594 00000 n
0000257660 00000 n
0000257685 00000 n
0000260751 00000 n
0000260776 00000 n
0000263842 00000 n
0000263867 00000 n
0000267323 00000 n
0000267348 00000 n
0000270220 00000 n
0000270245 00000 n
0000273893 00000 n
0000273918 00000 n
0000277569 00000 n
0000277594 00000 n
0000280660 00000 n
0000280685 00000 n
0000284141 00000 n
0000284166 00000 n
0000287623 00000 n
0000287648 00000 n
0000290326 00000 n
0000290351 00000 n
0000294002 00000 n
0000294027 00000 n
0000296511 00000 n
0000296536 00000 n
0000299407 00000 n
0000299432 00000 n
0000302107 00000 n
0000302132 00000 n
0000304810 00000 n
0000304835 00000 n
0000308880 00000 n
0000308905 00000 n
0000311583 00000 n
0000311608 00000 n
0000314283 00000 n
0000314308 00000 n
0000317374 00000 n
0000317399 00000 n
0000320465 00000 n
0000320490 00000 n
0000323165 00000 n
0000323190 00000 n
0000325868 00000 n
0000325893 00000 n
0000328181 00000 n
0000328206 00000 n
0000332253 00000 n
0000332278 00000 n
0000335734 00000 n
0000335759 00000 n
0000338437 00000 n
0000338462 00000 n
0000340946 00000 n
0000340971 00000 n
0000344621 00000 n
0000344646 00000 n
0000348297 00000 n
0000348322 00000 n
0000351000 00000 n
0000351025 00000 n
0000354481 00000 n
0000354506 00000 n
0000357375 00000 n
0000357400 00000 n
0000359495 00000 n
0000359520 00000 n
0000362003 00000 n
0000362028 00000 n
0000364512 00000 n
0000364537 00000 n
0000367993 00000 n
0000368018 00000 n
0000370502 00000 n
0000370527 00000 n
0000373985 00000 n
0000374010 00000 n
0000376688 00000 n
0000376713 00000 n
0000379197 00000 n
0000379222 00000 n
0000382094 00000 n
0000382119 00000 n
0000385768 00000 n
0000385793 00000 n
0000389443 00000 n
0000389468 00000 n
0000392924 00000 n
0000392949 00000 n
0000396598 00000 n
0000396623 00000 n
0000399301 00000 n
0000399326 00000 n
0000402197 00000 n
0000402222 00000 n
0000405873 00000 n
0000405898 00000 n
0000408187 00000 n
0000408212 00000 n
0000410695 00000 n
0000410720 00000 n
0000672148 00000 n
0000672175 00000 n
0000675431 00000 n
0000675456 00000 n
0000678712 00000 n
0000678737 00000 n
0000681993 00000 n
0000682018 00000 n
0000685274 00000 n
0000685299 00000 n
0000688361 00000 n
0000688386 00000 n
0000691846 00000 n
0000691871 00000 n
0000695132 00000 n
0000695157 00000 n
0000698220 00000 n
0000698245 00000 n
0000701309 00000 n
0000701334 00000 n
0000704589 00000 n
0000704614 00000 n
0000708073 00000 n
0000708098 00000 n
0000711161 00000 n
0000711186 00000 n
0000714250 00000 n
0000714275 00000 n
0000717338 00000 n
0000717363 00000 n
0000720619 00000 n
0000720644 00000 n
0000723707 00000 n
0000723732 00000 n
0000726795 00000 n
0000726820 00000 n
0000729885 00000 n
0000729910 00000 n
0000732976 00000 n
0000733001 00000 n
0000736066 00000 n
0000736091 00000 n
0000739155 00000 n
0000739180 00000 n
0000742241 00000 n
0000742266 00000 n
0000745331 00000 n
0000745356 00000 n
0000748614 00000 n
0000748639 00000 n
0000751900 00000 n
0000751925 00000 n
0000754991 00000 n
0000755016 00000 n
0000758080 00000 n
0000758105 00000 n
0000761169 00000 n
0000761194 00000 n
0000764450 00000 n
0000764475 00000 n
0000767932 00000 n
0000767957 00000 n
0000771023 00000 n
0000771048 00000 n
0000774112 00000 n
0000774137 00000 n
0000777200 00000 n
0000777225 00000 n
0000780486 00000 n
0000780511 00000 n
0000783970 00000 n
0000783995 00000 n
0000787455 00000 n
0000787480 00000 n
0000789765 00000 n
0000789790 00000 n
0000793250 00000 n
0000793275 00000 n
0000796735 00000 n
0000796760 00000 n
0000799821 00000 n
0000799846 00000 n
0000803104 00000 n
0000803129 00000 n
0000806384 00000 n
0000806409 00000 n
0000809869 00000 n
0000809894 00000 n
0000812957 00000 n
0000812982 00000 n
0000816436 00000 n
0000816461 00000 n
0000819524 00000 n
0000819549 00000 n
0000823009 00000 n
0000823034 00000 n
0000826290 00000 n
0000826315 00000 n
0000829775 00000 n
0000829800 00000 n
0000832861 00000 n
0000832886 00000 n
0000835949 00000 n
0000835974 00000 n
0000839434 00000 n
0000839459 00000 n
0000842919 00000 n
0000842944 00000 n
0000846010 00000 n
0000846035 00000 n
0000849495 00000 n
0000849520 00000 n
0000852980 00000 n
0000853005 00000 n
0000856070 00000 n
0000856095 00000 n
0000859353 00000 n
0000859378 00000 n
0000862639 00000 n
0000862664 00000 n
0000865725 00000 n
0000865750 00000 n
0000869210 00000 n
0000869235 00000 n
0000872695 00000 n
0000872720 00000 n
0001013033 00000 n
0001013059 00000 n
0001015931 00000 n
0001015956 00000 n
0001018828 00000 n
0001018853 00000 n
0001021725 00000 n
0001021750 00000 n
0001024622 00000 n
0001024647 00000 n
0001027714 00000 n
0001027739 00000 n
0001030612 00000 n
0001030637 00000 n
0001033703 00000 n
0001033728 00000 n
0001036795 00000 n
0001036820 00000 n
0001039887 00000 n
0001039912 00000 n
0001042783 00000 n
0001042808 00000 n
0001045679 00000 n
0001045704 00000 n
0001048771 00000 n
0001048796 00000 n
0001051863 00000 n
0001051888 00000 n
0001054955 00000 n
0001054980 00000 n
0001058048 00000 n
0001058073 00000 n
0001061336 00000 n
0001061361 00000 n
0001064430 00000 n
0001064455 00000 n
0001067522 00000 n
0001067547 00000 n
0001070613 00000 n
0001070638 00000 n
0001073704 00000 n
0001073729 00000 n
0001076797 00000 n
0001076822 00000 n
0001079889 00000 n
0001079914 00000 n
0001082980 00000 n
0001083005 00000 n
0001086071 00000 n
0001086096 00000 n
0001089162 00000 n
0001089187 00000 n
0001092253 00000 n
0001092278 00000 n
0001095344 00000 n
0001095369 00000 n
0001098435 00000 n
0001098460 00000 n
0001101528 00000 n
0001101553 00000 n
0001104424 00000 n
0001104449 00000 n
0001107515 00000 n
0001107540 00000 n
0001110609 00000 n
0001110634 00000 n
0001113898 00000 n
0001113923 00000 n
0001116989 00000 n
0001117014 00000 n
0001119885 00000 n
0001119910 00000 n
0001122976 00000 n
0001123001 00000 n
0001125677 00000 n
0001125702 00000 n
0001128573 00000 n
0001128598 00000 n
0001131469 00000 n
0001131494 00000 n
0001134561 00000 n
0001134586 00000 n
0001137652 00000 n
0001137677 00000 n
0001140548 00000 n
0001140573 00000 n
0001143447 00000 n
0001143472 00000 n
0001146539 00000 n
0001146564 00000 n
0001149238 00000 n
0001149263 00000 n
0001152330 00000 n
0001152355 00000 n
0001155423 00000 n
0001155448 00000 n
0001158321 00000 n
0001158346 00000 n
0001161414 00000 n
0001161439 00000 n
0001164310 00000 n
0001164335 00000 n
0001167402 00000 n
0001167427 00000 n
0001170298 00000 n
0001170323 00000 n
0001173194 00000 n
0001173219 00000 n
0001176285 00000 n
0001176310 00000 n
0001179378 00000 n
0001179403 00000 n
0001182470 00000 n
0001182495 00000 n
0001185561 00000 n
0001185586 00000 n
0001188652 00000 n
0001188677 00000 n
0001191743 00000 n
0001191768 00000 n
0001194835 00000 n
0001194860 00000 n
0001197926 00000 n
0001197951 00000 n
0001201019 00000 n
0001201044 00000 n
0001329670 00000 n
0001329696 00000 n
0001329997 00000 n
0001330021 00000 n
0001331447 00000 n
0001331471 00000 n
0001331772 00000 n
0001331796 00000 n
0001333258 00000 n
0001333282 00000 n
0001333583 00000 n
0001333607 00000 n
0001335031 00000 n
0001335055 00000 n
0001335356 00000 n
0001335380 00000 n
0001336804 00000 n
0001336828 00000 n
0001337129 00000 n
0001337153 00000 n
0001338579 00000 n
0001338603 00000 n
0001339127 00000 n
0001339151 00000 n
0001339675 00000 n
0001339699 00000 n
0001340223 00000 n
0001340247 00000 n
0001340771 00000 n
0001340795 00000 n
0001341320 00000 n
0001341344 00000 n
0001346305 00000 n
0001348710 00000 n
0001348735 00000 n
0001348916 00000 n
0001348994 00000 n
trailer
<< /ID [ (some) (id) ]
   /Root 536 0 R
   /Size 537
>>
startxref
1349057
%%EOF